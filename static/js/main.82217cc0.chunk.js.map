{"version":3,"sources":["AlertTemplate.tsx","firebase/config.ts","features/NavBar/NavHeader.tsx","features/NavBar/NavMenu.tsx","features/NavBar/index.tsx","logo.svg","views/Errors/NotFound.tsx","components/ColoredSection.tsx","components/Cover.tsx","components/styledComponents.tsx","features/Portfolio/About/Personal/Personal.tsx","features/Portfolio/About/Experiences/Experiences.tsx","features/Portfolio/About/Educations/Educations.tsx","components/LoadBar.tsx","features/Portfolio/About/Languages/Languages.tsx","features/Portfolio/About/Qualities/Qualities.tsx","components/LanguageComponent.tsx","features/Portfolio/About/Techs/Techs.tsx","features/Portfolio/About.tsx","components/DiscordInvite.tsx","features/Portfolio/Contact.tsx","features/Portfolio/Projects/ProjectCard.tsx","features/Portfolio/Projects.tsx","views/Portfolio/index.tsx","components/Loading.tsx","views/Discord.tsx","features/Footer/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AlertBox","styled","div","Button","button","Message","span","AlertTemplate","message","options","style","close","type","icon","faCheckCircle","color","faExclamationCircle","onClick","faTimes","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","NavContainer","NavItemContainer","isMobile","css","LeftItemContainer","RightItemContainer","ToggleLink","a","props","isOpen","GitImage","img","NavBarToggle","faBars","NavHeader","children","toggleMenu","React","useState","navState","setNavState","to","faHome","href","target","rel","src","title","alt","MenuContainer","MenuSection","NavMenu","faGithub","faDiscord","faPortrait","NavBar","childrenInMenu","Children","count","NotFound","className","logo","ColoredSectionComponent","section","ColoredSection","id","Scroll","keyframes","CoverContainer","url","CoverContentContainer","actualHeight","AnimatedScroller","HashLink","Cover","contentHeight","setContentHeight","contentRef","useRef","useEffect","current","clientHeight","ref","smooth","faAngleDoubleDown","Section","SegmentTitle","h1","Segment","EducationContainer","Label","b","Personal","personal","yearOld","Date","getTime","moment","dateofbirth","toDate","getFullYear","daysSinceBirthday","Math","floor","AboutItem","lastname","firstname","format","place","license","car","ownLicense","ownVehicle","Educations","experiences","map","experience","index","label","subtitle","location","date","start","end","educations","education","Container","Fill","pourcent","LoadBar","Languages","languages","language","Qualities","qualities","quality","LanguageImg","LanguageLink","icons","LanguageComponent","name","techIndex","console","error","LanguageList","li","Techs","techs","others","techList","tech","codingLanguages","AboutContainerStyle","AboutContainer","about","Experiences","About","path","orderByKey","data","isLoading","value","DetailsContainer","JoinButton","NavLink","DiscordLogo","DiscordBubble","i","DiscordInvite","discord","setDiscord","fetch","then","res","json","result","onlines","presence_count","ContactContainerStyle","ContactContainer","mail","alert","useAlert","setName","content","setContent","htmlFor","onChange","event","rows","preventDefault","trim","window","open","success","Contact","ProjectTitle","ContentContainer","show","MiscContainer","LanguagesContainer","LinksContainer","SecondaryTitle","h2","List","ul","ContributorsContainer","ProjectCard","project","cardRef","setShow","scrollTo","offsetTop","faChevronUp","faChevronDown","objective","aimedSkills","skill","features","numberOfContributors","Array","from","e","faUser","links","site","faExternalLinkAlt","youtube","faYoutube","github","ProjectsContainerStyle","CategoryTitle","ProjectsContainer","projects","schoolProjects","school","schoolIndex","semesters","semester","semesterIndex","number","personalProjects","Projects","Portfolio","InfiniteRotate","StyledFrontContainer","LoadImage","Loading","Discord","instant_invite","FooterContainer","Footer","PageContainer","Redirect","link","ViewContainer","initial","opacity","animate","exit","App","basename","firebase","exitBeforeEnter","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","position","positions","BOTTOM_RIGHT","transition","transitions","FADE","timeout","offset","containerStyle","zIndex","bottom","ReactDOM","render","StrictMode","template","document","getElementById"],"mappings":"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","file":"static/js/main.82217cc0.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport React from 'react'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { faCheckCircle, faExclamationCircle, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport styled from '@emotion/styled';\r\n\r\n\r\nconst AlertBox = styled.div`\r\n    width: fit-content;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n    max-width: max(500px, 90vw);\r\n    background-color: var(--header-footer-color);\r\n    color: var(--font-color);\r\n`;\r\n\r\nconst Button = styled.button`\r\n    margin-left: 20px;\r\n    border: none;\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    color: var(--font-color);\r\n`;\r\n\r\nconst Message = styled.span`\r\n    flex: 2;\r\n    margin-left: 10px;\r\n`;\r\n\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nconst AlertTemplate = ({ message, options, style, close }: any): JSX.Element => {\r\n    return (\r\n        <AlertBox style={{ ...style }}>\r\n            {/* {options.type === 'info' && <FontAwesomeIcon icon={faInfoCircle} color={'#ddcc35'} />} */} {/* //? default value */}\r\n            {options.type === 'success' && <FontAwesomeIcon icon={faCheckCircle} color={'#43b581'} />}\r\n            {options.type === 'error' && <FontAwesomeIcon icon={faExclamationCircle} color={'#eb4034'} />}\r\n            <Message>{message}</Message>\r\n            <Button onClick={close}>\r\n                <FontAwesomeIcon icon={faTimes} />\r\n            </Button>\r\n        </AlertBox>\r\n    )\r\n};\r\n\r\nexport default AlertTemplate;","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCWrxnEZBOOjmmzGU3Px6cTTbgThrsXh4s\",\r\n    authDomain: \"avan0x-website.firebaseapp.com\",\r\n    databaseURL: \"https://avan0x-website-default-rtdb.firebaseio.com\",\r\n    projectId: \"avan0x-website\",\r\n    storageBucket: \"avan0x-website.appspot.com\",\r\n    messagingSenderId: \"385727573750\",\r\n    appId: \"1:385727573750:web:84d2007e80ddf6bd5d46d7\",\r\n    measurementId: \"G-FJ78ZHF950\"\r\n};\r\n\r\nexport default firebaseConfig;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faHome, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { css } from '@emotion/react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n    toggleMenu: (value: boolean) => void;\r\n    children?: React.ReactNode;\r\n}\r\n\r\nconst NavHeader = ({ children, toggleMenu }: PropsType): JSX.Element => {\r\n    const [navState, setNavState] = React.useState<boolean>(false);\r\n\r\n    const handleToggleMenu = () => {\r\n        toggleMenu(!navState);\r\n        setNavState(!navState);\r\n    }\r\n\r\n    return (\r\n        <NavContainer>\r\n            <LeftItemContainer>\r\n                <NavBarToggle isOpen={navState} onClick={handleToggleMenu} />\r\n                <NavLink to=\"/\"><FontAwesomeIcon icon={faHome} /></NavLink>\r\n                {children}\r\n            </LeftItemContainer>\r\n\r\n            <RightItemContainer>\r\n                <a href=\"https://github.com/AvaN0x\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <GitImage\r\n                        src=\"https://avatars3.githubusercontent.com/u/27494805?s=460&v=4\" title=\"github.com/AvaN0x\" alt=\"github.com/AvaN0x\" />\r\n                </a>\r\n            </RightItemContainer>\r\n        </NavContainer>\r\n    );\r\n}\r\n\r\n\r\nconst NavContainer = styled.div`\r\n    width: 100vw;\r\n    position: fixed;\r\n    top: 0;\r\n    box-sizing: border-box;\r\n    height: 3rem;\r\n    background: var(--header-footer-color);\r\n    padding: 0 5px;\r\n    display: flex;\r\n    z-index: 1000;\r\n`;\r\n\r\nconst NavItemContainer = styled.div`\r\n    display: flex;\r\n\r\n    & > a {\r\n        cursor: pointer;\r\n        position: relative;\r\n        font-size: 1.2rem;\r\n        line-height: calc(3rem - 2 * .7rem);\r\n        color: var(--header-font-color);\r\n        text-decoration: none;\r\n        padding: .7rem 1rem;\r\n        transition: .5s;\r\n\r\n        & > svg {\r\n            transition: .5s;\r\n            font-size: 1.6rem;\r\n        }\r\n\r\n        ${!isMobile && css`\r\n            &:hover {\r\n                color: var(--main-color);\r\n\r\n                & > svg {\r\n                    transform: rotate(5deg) scale(1.1);\r\n                }\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\nconst LeftItemContainer = styled(NavItemContainer)`\r\n    flex-grow: 1;\r\n`;\r\n\r\nconst RightItemContainer = styled(NavItemContainer)`\r\n`;\r\n\r\nconst ToggleLink = styled.a<{ isOpen?: boolean }>`\r\n    width: 1.2rem;\r\n\r\n    ${props => props.isOpen && css`\r\n        & svg {\r\n            transform: rotate(90deg);\r\n            color: var(--main-color);\r\n        }\r\n\r\n        ${!isMobile && css`\r\n            &:hover svg {\r\n                transform: rotate(80deg) scale(1.1) !important;\r\n            }\r\n        `}\r\n    `}\r\n`;\r\n\r\nconst GitImage = styled.img`\r\n    height: 2.4rem;\r\n    position: relative;\r\n    top: -8px;\r\n    border-radius: 50%;\r\n    float: right;\r\n    border: 1px solid var(--header-font-color);\r\n    transform: rotate(0);\r\n    transition: .5s;\r\n\r\n    &:hover {\r\n        transform: rotate(360deg);\r\n        border: 1px solid var(--main-color);\r\n        border-radius: 30%\r\n    }\r\n`;\r\n\r\nconst NavBarToggle = ({ isOpen, onClick }: { isOpen?: boolean; onClick?: (event: React.SyntheticEvent) => void; }) => {\r\n    return (\r\n        <ToggleLink isOpen={isOpen} onClick={onClick}>\r\n            <FontAwesomeIcon icon={isOpen ? faTimes : faBars} />\r\n        </ToggleLink>\r\n    );\r\n}\r\n\r\n\r\nexport default NavHeader;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faDiscord, faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { faPortrait } from '@fortawesome/free-solid-svg-icons';\r\nimport { css } from '@emotion/react';\r\n\r\nconst MenuContainer = styled.div<{ isOpen: boolean }>`\r\n    position: fixed;\r\n    top: 3rem;\r\n    height: calc(100vh - 3rem);\r\n    background-color: var(--nav-menu-color);\r\n    overflow-y: auto;\r\n    box-shadow: 0 3px 5px black;\r\n    display: flex;\r\n    flex-direction: column;\r\n    z-index: 1001;\r\n    transition: .5s;\r\n\r\n    ${props => !isMobile ?\r\n        css`\r\n            left: ${props.isOpen ? \"0\" : \"-300px\"};\r\n            width: 300px;\r\n        `\r\n        :\r\n        css`\r\n            left: ${props.isOpen ? \"0\" : \"-100%\"};\r\n            width: 100%;\r\n        `\r\n    }\r\n`;\r\n\r\nconst MenuSection = styled.div`\r\n    border-bottom: 2px solid var(--main-transparent-color);\r\n    font-size: 1.1rem;\r\n    text-align: left;\r\n    padding: 2px;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    & > h1 {\r\n        margin: 10px 0;\r\n        padding: 0;\r\n        text-align: center;\r\n        font-size: 1.2rem;\r\n        font-weight: normal;\r\n        text-transform: uppercase\r\n    }\r\n\r\n    & > a {\r\n        color: #fff;\r\n        text-decoration: none;\r\n        padding: 5px;\r\n        padding-left: 2.3rem;\r\n        font-size: 1.1rem;\r\n        transition: .5s;\r\n\r\n        & > svg {\r\n            position: absolute;\r\n            left: 15px;\r\n            transform: translateY(10%);\r\n            transition: .5s;\r\n        }\r\n\r\n        ${!isMobile && css`\r\n            &:hover {\r\n                color: var(--main-color);\r\n                padding-left: calc(2.3rem + 5px);\r\n\r\n                & > svg {\r\n                    color: var(--main-color);\r\n                    left: 20px;\r\n                }\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\n\r\ntype PropsType = {\r\n    isOpen: boolean;\r\n    children?: React.ReactNode;\r\n}\r\n\r\nconst NavMenu = ({ isOpen, children }: PropsType): JSX.Element => {\r\n    return (\r\n        <MenuContainer isOpen={isOpen}>\r\n            {children &&\r\n                <MenuSection>\r\n                    <h1>Sur cette page</h1>\r\n                    {children}\r\n                </MenuSection>\r\n            }\r\n            <MenuSection>\r\n                <h1>A propos</h1>\r\n                <a href=\"https://github.com/AvaN0x\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <FontAwesomeIcon icon={faGithub} />GitHub\r\n                </a>\r\n                <NavLink to=\"/discord\">\r\n                    <FontAwesomeIcon icon={faDiscord} />Discord\r\n                </NavLink>\r\n                <NavLink to=\"/\">\r\n                    <FontAwesomeIcon icon={faPortrait} />Portfolio\r\n                </NavLink>\r\n            </MenuSection>\r\n\r\n\r\n        </MenuContainer>\r\n    );\r\n}\r\n\r\nexport default NavMenu;","import React from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nimport NavHeader from './NavHeader';\r\nimport NavMenu from './NavMenu';\r\n\r\ntype PropsType = {\r\n    children?: React.ReactNode;\r\n}\r\n\r\nconst NavBar = ({ children }: PropsType): JSX.Element => {\r\n    const [navState, setNavState] = React.useState<boolean>(false);\r\n\r\n    const childrenInMenu: boolean = React.Children.count(children) > 4 || isMobile;\r\n\r\n    return (\r\n        <>\r\n            <NavHeader toggleMenu={setNavState}>\r\n                {!childrenInMenu &&\r\n                    children\r\n                }\r\n            </NavHeader>\r\n            <NavMenu isOpen={navState}>\r\n                {childrenInMenu &&\r\n                    children\r\n                }\r\n            </NavMenu>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NavBar;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport { ViewContainer } from '../../App';\r\nimport NavBar from '../../features/NavBar';\r\n\r\nimport logo from '../../logo.svg';\r\n\r\nconst NotFound = (): JSX.Element => {\r\n    return (\r\n        <ViewContainer>\r\n            <NavBar />\r\n            <div className=\"App\">\r\n                <header>\r\n                    <div className=\"App-header\">\r\n                        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                        <h1>404 Not Found</h1>\r\n                        <p>\r\n                            Seems like you are lost ...\r\n                    </p>\r\n                    </div>\r\n                </header>\r\n            </div>\r\n        </ViewContainer>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nconst ColoredSectionComponent = styled.section`\r\n    background-color: var(--bar-color);\r\n    margin: 0;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n\r\n    &:not(:first-of-type) {\r\n        margin-top: ${isMobile ? 4 : 6}rem;\r\n    }\r\n\r\n    & > h1 {\r\n        text-align: center;\r\n        color: var(--font-color);\r\n        font-size: 4rem;\r\n        margin: 0;\r\n        border-bottom: none;\r\n        font-variant: small-caps;\r\n    }\r\n`;\r\n\r\ntype PropsType = {\r\n    title: string;\r\n    id?: string;\r\n}\r\n\r\nconst ColoredSection = ({ title, id }: PropsType): JSX.Element => {\r\n    return (\r\n        <ColoredSectionComponent id={id}>\r\n            <h1>{title}</h1>\r\n        </ColoredSectionComponent>\r\n    );\r\n}\r\n\r\nexport default ColoredSection;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { keyframes } from '@emotion/react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDoubleDown } from '@fortawesome/free-solid-svg-icons';\r\nimport { HashLink } from 'react-router-hash-link';\r\n\r\nconst Scroll = keyframes`\r\n    0% {\r\n        transform: translateY(0);\r\n        opacity: 1\r\n    }\r\n\r\n    80% {\r\n        transform: translateY(15px);\r\n        opacity: .5\r\n    }\r\n\r\n    100% {\r\n        transform: translateY(0);\r\n        opacity: 1\r\n    }\r\n`;\r\n\r\nconst CoverContainer = styled.div<{ url: string }>`\r\n    width: 100%;\r\n    height: 100vh;\r\n    position: relative;\r\n    background-image: url(${props => props.url});\r\n    background-size: cover;\r\n    background-position: center;\r\n`;\r\n\r\nconst CoverContentContainer = styled.div<{ actualHeight: number }>`\r\n    position: relative;\r\n    background-color: var(--main-transparent-color);\r\n    top: calc(50% ${props => \" - \" + props.actualHeight / 2 + \"px\"});\r\n    width: 100%;\r\n    text-align: center;\r\n    margin: auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    position: sticky;\r\n\r\n    & * {\r\n        margin: 0;\r\n        font-size: 1.5rem;\r\n        color: var(--font-color);\r\n    }\r\n\r\n    & h1 {\r\n        font-size: 2rem;\r\n    }\r\n`;\r\n\r\nconst AnimatedScroller = styled(HashLink)`\r\n    padding-bottom: 1rem;\r\n    animation: ${Scroll} 1.8s linear infinite;\r\n\r\n    & > svg {\r\n        font-size: 1.8rem;\r\n    }\r\n`;\r\n\r\ntype PropsType = {\r\n    url: string;\r\n    children?: React.ReactNode;\r\n}\r\n\r\n/**\r\n * Create a cover component with a background image\r\n * @param {string} url url of the image\r\n * @param {React.ReactNode} children content of the cover\r\n */\r\nconst Cover = ({ url, children }: PropsType): JSX.Element => {\r\n    const [contentHeight, setContentHeight] = React.useState(0);\r\n    const contentRef = React.useRef<HTMLDivElement>(null);\r\n\r\n    React.useEffect(() => {\r\n        setContentHeight(contentRef.current?.clientHeight || 0);\r\n    }, [contentRef]);\r\n\r\n    return (\r\n        <>\r\n            <CoverContainer url={url}>\r\n                <CoverContentContainer ref={contentRef} actualHeight={contentHeight}>\r\n                    {children}\r\n                    <AnimatedScroller smooth to=\"#scroll\">\r\n                        <FontAwesomeIcon icon={faAngleDoubleDown} />\r\n                    </AnimatedScroller>\r\n                </CoverContentContainer>\r\n            </CoverContainer>\r\n            <span id=\"scroll\"></span>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Cover;","import styled from '@emotion/styled';\r\n\r\nexport const Section = styled.section`\r\n    max-width: 1100px;\r\n    margin: 0 auto;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n    text-align: justify;\r\n`;\r\n\r\nexport const SegmentTitle = styled.h1`\r\n    border: none;\r\n    border-bottom: 2px solid var(--secondary-color);\r\n    font-size: 1.2rem;\r\n    padding: 0 4px;\r\n    margin: 0;\r\n    text-align: left;\r\n    display: inline-block;\r\n    color: var(--main-color);\r\n`;\r\n\r\nexport const Segment = styled.div`\r\n    transition: .5s;\r\n    border-left: 2px solid var(--secondary-color);\r\n    box-sizing: border-box;\r\n    padding-bottom: .1rem;\r\n    margin-bottom: 2rem;\r\n\r\n    & > ul {\r\n        list-style-type: none;\r\n        margin: 0;\r\n        padding: 8px;\r\n\r\n        & > li {\r\n            padding: 4px 0;\r\n        }\r\n    }\r\n\r\n    & > h1 {\r\n        border: none;\r\n        text-align: left;\r\n        font-size: 1rem;\r\n        margin: 0;\r\n        padding: 8px 4px 0 4px;\r\n        color: var(--main-color);\r\n    }\r\n`;\r\n\r\nexport const EducationContainer = styled.div`\r\n    margin: 0;\r\n    padding: 4px;\r\n\r\n    &>h1 {\r\n        border: none;\r\n        text-align: left;\r\n        font-size: 1rem;\r\n        margin: 0;\r\n        padding: 0;\r\n        color: var(--main-color);\r\n    }\r\n\r\n    &>p {\r\n        text-indent: 20px;\r\n        margin: 2px;\r\n    }\r\n`;\r\n\r\nexport const ExperienceContainer = styled(EducationContainer);","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport IPersonal from './IPersonal';\r\nimport { Segment, SegmentTitle } from '../../../../components/styledComponents';\r\nimport { AboutItem } from '../../About';\r\nimport moment from 'moment';\r\n\r\nconst Label = styled.b`\r\n    letter-spacing: 1px;\r\n`;\r\n\r\ntype PropsType = {\r\n    personal: IPersonal;\r\n}\r\n\r\nconst Personal = ({ personal }: PropsType): JSX.Element => {\r\n    const yearOld = new Date(new Date().getTime() - moment(personal.dateofbirth, \"YYYY-MM-DD\").toDate().getTime()).getFullYear() - 1970;\r\n    const daysSinceBirthday = Math.floor((new Date().getTime() - new Date(2001 + yearOld, 9, 9).getTime()) / 86400000);\r\n\r\n    return (\r\n        <AboutItem>\r\n            <SegmentTitle>Informations personnelles</SegmentTitle>\r\n            <Segment>\r\n                <ul>\r\n                    <li><Label>Nom</Label> : <span>{personal.lastname}</span></li>\r\n                    <li><Label>Prénom</Label> : <span>{personal.firstname}</span></li>\r\n                    {yearOld && <li><Label>Age</Label> : <span title={\"et \" + daysSinceBirthday + \" jours.\"}>{yearOld}</span></li>}\r\n                    <li><Label>Date de naissance</Label> : <span>{moment(personal.dateofbirth, \"YYYY-MM-DD\").format(\"DD/MM/YYYY\")}</span></li>\r\n                    <li><Label>Lieu</Label> : <span>{personal.place}</span></li>\r\n                    {personal.license?.car?.ownLicense &&\r\n                        <li>Permis B{personal.license.car?.ownVehicle && <> + Véhicule</>}</li>\r\n                    }\r\n                </ul>\r\n            </Segment>\r\n        </AboutItem>\r\n    );\r\n}\r\n\r\nexport default Personal;","import React from 'react';\r\n\r\nimport { EducationContainer, Segment, SegmentTitle } from '../../../../components/styledComponents';\r\n\r\nimport IExperience from './IExperience';\r\nimport { AboutItem } from '../../About';\r\n\r\ntype PropsType = {\r\n    experiences: IExperience[];\r\n}\r\n\r\nconst Educations = ({ experiences }: PropsType): JSX.Element => {\r\n    return (\r\n        <AboutItem>\r\n            <SegmentTitle>Formations</SegmentTitle>\r\n            <Segment>\r\n                {experiences.map((experience, index) => (\r\n                    <EducationContainer key={index}>\r\n                        <h1>{experience.label}</h1>\r\n                        {experience.subtitle && <p><i>{experience.subtitle}</i></p>}\r\n                        <p>{experience.location}</p>\r\n                        <p>{experience.date.start} – {experience.date.end}</p>\r\n                    </EducationContainer>\r\n                ))}\r\n            </Segment>\r\n        </AboutItem>\r\n    );\r\n}\r\n\r\nexport default Educations;","import React from 'react';\r\n\r\nimport { EducationContainer, Segment, SegmentTitle } from '../../../../components/styledComponents';\r\n\r\nimport IEducation from './IEducation';\r\nimport { AboutItem } from '../../About';\r\n\r\ntype PropsType = {\r\n    educations: IEducation[];\r\n}\r\n\r\nconst Educations = ({ educations }: PropsType): JSX.Element => {\r\n    return (\r\n        <AboutItem>\r\n            <SegmentTitle>Diplômes</SegmentTitle>\r\n            <Segment>\r\n                {educations.map((education, index) => (\r\n                    <EducationContainer key={index}>\r\n                        <h1>{education.label}</h1>\r\n                        {education.subtitle && <p><i>{education.subtitle}</i></p>}\r\n                        <p>{education.location}</p>\r\n                        <p>{education.date.start} – {education.date.end}</p>\r\n                    </EducationContainer>\r\n                ))}\r\n            </Segment>\r\n        </AboutItem>\r\n    );\r\n}\r\n\r\nexport default Educations;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Container = styled.div`\r\n    height: 10px;\r\n    width: 100px;\r\n    border-radius: 5px;\r\n    display: inline-block;\r\n    margin: 5px;\r\n    position: relative;\r\n    top: 5px;\r\n    border: 1px solid #ffffff60;\r\n`;\r\n\r\nconst Fill = styled.div<{ pourcent: number }>`\r\n    width: ${props => props.pourcent}%;\r\n    height: 100%;\r\n    background-color: var(--main-color);\r\n    border-radius: 5px;\r\n    animation: barfill 2s ease-in-out;\r\n`;\r\n\r\nconst LoadBar = ({ pourcent }: { pourcent: number }): JSX.Element => {\r\n    return (\r\n        <Container>\r\n            <Fill pourcent={pourcent}></Fill>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default LoadBar;","import React from 'react';\r\n\r\nimport { Segment, SegmentTitle } from '../../../../components/styledComponents';\r\nimport LoadBar from '../../../../components/LoadBar';\r\n\r\nimport ILanguage from './ILanguage';\r\nimport { AboutItem } from '../../About';\r\n\r\ntype PropsType = {\r\n    languages: ILanguage[];\r\n}\r\n\r\nconst Languages = ({ languages }: PropsType): JSX.Element => {\r\n    return (\r\n        <AboutItem>\r\n            <SegmentTitle>Langues</SegmentTitle>\r\n            <Segment>\r\n                <ul>\r\n                    {languages.map((language, index) => (\r\n                        <li key={index}>{language.label}<LoadBar pourcent={language.pourcent} /></li>\r\n                    ))}\r\n                </ul>\r\n            </Segment>\r\n        </AboutItem>\r\n    );\r\n}\r\n\r\nexport default Languages;","import React from 'react';\r\n\r\nimport { Segment, SegmentTitle } from '../../../../components/styledComponents';\r\n\r\nimport { AboutItem } from '../../About';\r\n\r\ntype PropsType = {\r\n    qualities: string[];\r\n}\r\n\r\nconst Qualities = ({ qualities }: PropsType): JSX.Element => {\r\n    return (\r\n        <AboutItem>\r\n            <SegmentTitle>Qualités</SegmentTitle>\r\n            <Segment>\r\n                <ul>\r\n                    {qualities.map((quality, index) => (\r\n                        <li key={index}>{quality}</li>\r\n                    ))}\r\n                </ul>\r\n            </Segment>\r\n        </AboutItem>\r\n    );\r\n}\r\n\r\nexport default Qualities;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/react';\r\n\r\nconst LanguageImg = styled.img`\r\n    height: 1rem;\r\n    vertical-align: middle;\r\n    margin: 0 4px 0 0;\r\n    padding: 4px;\r\n    border-radius: 8px;\r\n    background-color: #00000060;\r\n    position: relative;\r\n    top: -2px;\r\n    transition: background-color .5s;\r\n`;\r\n\r\nconst LanguageLink = styled.a<{ href?: string }>`\r\n    ${props => props.href && css`\r\n        &>img:hover {\r\n            background-color: #ffffff20;\r\n        }\r\n    `}\r\n`;\r\n\r\ninterface IIcon {\r\n    label: string;\r\n    title?: string;\r\n    icons?: { src: string; href?: string }[];\r\n}\r\n\r\n//! source : https://worldvectorlogo.com/fr\r\nconst icons: { [id: string]: IIcon; } = {\r\n    \"windows\": { label: \"Windows\", icons: [{ src: \"https://cdn.worldvectorlogo.com/logos/microsoft-windows-22.svg\", href: \"https://www.microsoft.com/windows/\" }] },\r\n    \"linux\": { label: \"Linux\", icons: [{ src: \"https://cdn.worldvectorlogo.com/logos/linux-tux.svg\" }, { src: \"https://cdn.worldvectorlogo.com/logos/ubuntu-4.svg\", href: \"https://ubuntu.com/\" }] },\r\n    \"office\": { label: \"Suite office\", icons: [{ src: \"https://cdn.worldvectorlogo.com/logos/office-1.svg\", href: \"https://www.office.com/\" }] },\r\n    \"photoshop\": { label: \"Photoshop\", icons: [{ src: \"https://cdn.worldvectorlogo.com/logos/photoshop-cc-7.svg\", href: \"https://www.adobe.com/fr/products/photoshop.html\" }] },\r\n    \"git\": { label: \"Git\", icons: [{ src: \"https://cdn.worldvectorlogo.com/logos/git-icon.svg\", href: \"https://git-scm.com/\" }] },\r\n    \"mvc\": { label: \"MVC\", title: \"Model View Controller\" },\r\n    \"asm\": { label: \"x86 ASM\", icons: [{ src: \"https://www.flaticon.com/svg/static/icons/svg/987/987983.svg\" }] },\r\n    \"c\": { label: \"C\", icons: [{ src: \"https://cdn.worldvectorlogo.com/logos/c-2975.svg\" }] },\r\n    \"cs\": { label: \"C#\", icons: [{ src: \"https://cdn.worldvectorlogo.com/logos/c--4.svg\", href: \"https://docs.microsoft.com/dotnet/csharp/\" }] },\r\n    \"wpf\": { label: \"WPF\" },\r\n    \"java\": { label: \"Java\", icons: [{ src: \"https://cdn.worldvectorlogo.com/logos/java-14.svg\" }] },\r\n    \"javafx\": { label: \"JavaFX\" },\r\n    \"junit\": { label: \"JUnit\" },\r\n    \"lua\": { label: \"Lua\", icons: [{ src: \"https://cdn.worldvectorlogo.com/logos/lua-5.svg\", href: \"http://www.lua.org/\" }] },\r\n    \"php\": { label: \"PHP\", icons: [{ src: \"https://cdn.worldvectorlogo.com/logos/php-1.svg\", href: \"https://www.php.net/\" }] },\r\n    \"mysql\": { label: \"MySQL\", icons: [{ src: \"https://cdn.worldvectorlogo.com/logos/mysql-6.svg\", href: \"https://www.mysql.com/\" }] },\r\n    \"js\": { label: \"JavaScript\", icons: [{ src: \"https://cdn.worldvectorlogo.com/logos/javascript.svg\" }] },\r\n    \"ts\": { label: \"TypeScript\", icons: [{ src: \"https://cdn.worldvectorlogo.com/logos/typescript.svg\" }] },\r\n    \"react\": { label: \"React\", icons: [{ src: \"https://cdn.worldvectorlogo.com/logos/react.svg\", href: \"https://reactjs.org/\" }] },\r\n    \"redux\": { label: \"Redux\", icons: [{ src: \"https://cdn.worldvectorlogo.com/logos/redux.svg\", href: \"https://redux.js.org/\" }] },\r\n    \"saga\": { label: \"Redux-Saga\", icons: [{ src: \"https://cdn.worldvectorlogo.com/logos/redux-saga.svg\", href: \"https://redux-saga.js.org/\" }] },\r\n    \"ajax\": { label: \"Ajax\", icons: [{ src: \"https://upload.wikimedia.org/wikipedia/commons/a/a1/AJAX_logo_by_gengns.svg\" }] },\r\n    \"html\": { label: \"HTML5\", icons: [{ src: \"https://cdn.worldvectorlogo.com/logos/html-5.svg\" }] },\r\n    \"css\": { label: \"CSS3\", icons: [{ src: \"https://cdn.worldvectorlogo.com/logos/css3.svg\" }] },\r\n}\r\n\r\nconst LanguageComponent = ({ name }: { name: string }): JSX.Element => {\r\n    if (icons[name]) {\r\n        return (\r\n            <span title={icons[name].title || \"\"}>\r\n                {icons[name].icons?.map((icon, techIndex) => (\r\n                    <LanguageLink key={techIndex} target=\"_blank\" rel=\"noreferrer\" href={icon.href}>\r\n                        <LanguageImg src={icon.src} />\r\n                    </LanguageLink>\r\n                ))}\r\n\r\n                {icons[name].label}\r\n            </span>\r\n        );\r\n    }\r\n    else {\r\n        console.error(\"`\" + name + \"` is missing from LanguageComponent.tsx\");\r\n\r\n        return (\r\n            <span>\r\n                {name}\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LanguageComponent;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { Segment, SegmentTitle } from '../../../../components/styledComponents';\r\n\r\nimport { AboutItem } from '../../About';\r\nimport ITechs from './ITechs';\r\nimport LanguageComponent from '../../../../components/LanguageComponent';\r\n\r\nconst LanguageList = styled.li`\r\n    &>span:not(:last-of-type):after {\r\n        content: \"–\";\r\n        margin: 0 6px;\r\n    }\r\n`;\r\n\r\ntype PropsType = {\r\n    techs: ITechs;\r\n}\r\n\r\nconst Techs = ({ techs }: PropsType): JSX.Element => {\r\n    return (\r\n        <AboutItem>\r\n            <SegmentTitle>Informatique</SegmentTitle>\r\n            <Segment>\r\n                <ul>\r\n                    {techs.others.map((techList, index) => (\r\n                        <LanguageList key={index}>\r\n                            {techList.map((tech, techIndex) => (\r\n                                <LanguageComponent name={tech} key={techIndex} />\r\n                            ))}\r\n                        </LanguageList>\r\n                    ))}\r\n                </ul>\r\n                <h1>Langages</h1>\r\n                <ul>\r\n                    {techs.codingLanguages.map((techList, index) => (\r\n                        <LanguageList key={index}>\r\n                            {techList.map((tech, techIndex) => (\r\n                                <LanguageComponent name={tech} key={techIndex} />\r\n                            ))}\r\n                        </LanguageList>\r\n                    ))}\r\n                </ul>\r\n            </Segment>\r\n        </AboutItem>\r\n    );\r\n}\r\n\r\nexport default Techs;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nimport { FirebaseDatabaseNode } from '@react-firebase/database';\r\nimport { Section } from '../../components/styledComponents';\r\n\r\nimport IAbout from './About/IAbout';\r\nimport Personal from './About/Personal/Personal';\r\nimport Experiences from './About/Experiences/Experiences';\r\nimport Educations from './About/Educations/Educations';\r\nimport Languages from './About/Languages/Languages';\r\nimport Qualities from './About/Qualities/Qualities';\r\nimport Techs from './About/Techs/Techs';\r\n\r\nconst AboutContainerStyle = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const AboutItem = styled.div`\r\n    width: ${isMobile ? \"100%\" : \"clamp(500px, 500px, 100%)\"};\r\n`;\r\n\r\nconst AboutContainer = ({ about }: { about: IAbout }) => {\r\n    return (\r\n        <AboutContainerStyle>\r\n            <Personal personal={about.personal} />\r\n            <Educations educations={about.educations} />\r\n            <Experiences experiences={about.experiences} />\r\n            <Techs techs={about.techs} />\r\n            <Languages languages={about.languages} />\r\n            <Qualities qualities={about.qualities} />\r\n        </AboutContainerStyle>\r\n    );\r\n}\r\n\r\nconst About = (): JSX.Element => {\r\n    return (\r\n        <Section>\r\n            <FirebaseDatabaseNode\r\n                path=\"/about/\"\r\n                orderByKey\r\n            >\r\n                {data => !data.isLoading && data.value &&\r\n                    <AboutContainer about={data.value} />\r\n                }\r\n            </FirebaseDatabaseNode>\r\n        </Section>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Container = styled.div`\r\n    width: min(432px, 90vw);\r\n    padding: 16px;\r\n    margin: 1rem auto;\r\n    border-radius: 4px;\r\n    background-color: #2f3136;\r\n    box-sizing: border-box;\r\n    overflow: hidden;\r\n    max-width: 96vw;\r\n\r\n    & > p {\r\n        color: #b9bbbe;\r\n        text-overflow: ellipsis;\r\n        text-align: left;\r\n        cursor: default;\r\n        font-size: 13px;\r\n\r\n        &:first-of-type {\r\n            text-transform: uppercase;\r\n            margin-bottom: 12px;\r\n            overflow: hidden;\r\n            font-weight: 700;\r\n            font-size: 12px;\r\n            margin-top: 0;\r\n        }\r\n    }\r\n\r\n    & a {\r\n        color: #fff;\r\n        cursor: pointer;\r\n        text-overflow: ellipsis;\r\n        font-weight: 600;\r\n        transition: .2s;\r\n    }\r\n`;\r\n\r\nconst DetailsContainer = styled.div`\r\n    max-width: 220px;\r\n    position: relative;\r\n    display: inline-block;\r\n    box-sizing: border-box;\r\n\r\n    & > p {\r\n        color: #b9bbbe;\r\n        text-overflow: ellipsis;\r\n        cursor: default;\r\n        font-size: 13px;\r\n        margin: 4px 0;\r\n    }\r\n`;\r\n\r\nconst JoinButton = styled(NavLink)`\r\n    background-color: #43b581;\r\n    text-decoration: none;\r\n    float: right;\r\n    margin: 5px 0 5px 10px;\r\n    max-width: 86;\r\n    line-height: 40px;\r\n    padding: 0 20px;\r\n    position: relative;\r\n    border-radius: 3px;\r\n    font-size: 14px;\r\n\r\n    &:hover {\r\n        background-color: #3ca374;\r\n    }\r\n`;\r\n\r\nconst DiscordLogo = styled.img`\r\n    border-radius: 15px;\r\n    width: 50px;\r\n    height: 50px;\r\n    position: relative;\r\n    float: left;\r\n    margin-right: 16px;\r\n`;\r\n\r\nconst DiscordBubble = styled.i`\r\n    width: 8px;\r\n    height: 8px;\r\n    background-color: #43b581;\r\n    border-radius: 50%;\r\n    display: inline-block;\r\n`;\r\n\r\ninterface IDiscordInvite {\r\n    name: string;\r\n    onlines: number;\r\n}\r\n\r\nconst DiscordInvite = (): JSX.Element => {\r\n    const [discord, setDiscord] = React.useState<IDiscordInvite | null>(null);\r\n\r\n    React.useEffect(() => {\r\n        fetch(\"https://discordapp.com/api/guilds/673139614927683594/widget.json\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setDiscord({\r\n                        name: result.name,\r\n                        onlines: result.presence_count\r\n                    });\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            <p>Tu as reçu une invitation à rejoindre un serveur par AvaN0x#6348</p>\r\n            <DiscordLogo src=\"https://avatars3.githubusercontent.com/u/27494805?s=460&v=4\" />\r\n            <DetailsContainer>\r\n                <NavLink to=\"/discord\">\r\n                    {discord?.name || \"\"}\r\n                </NavLink>\r\n                <p><DiscordBubble /> <strong>{discord?.onlines || -1}</strong> en ligne</p>\r\n            </DetailsContainer>\r\n            <JoinButton to=\"/discord\">\r\n                Rejoindre\r\n            </JoinButton>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default DiscordInvite;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nimport { useAlert } from 'react-alert'\r\n\r\nimport { Section } from '../../components/styledComponents';\r\nimport { FirebaseDatabaseNode } from '@react-firebase/database';\r\nimport DiscordInvite from '../../components/DiscordInvite';\r\n\r\nconst ContactContainerStyle = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n\r\n    & > label {\r\n        width: ${isMobile ? \"90vw\" : \"600px\"};\r\n        margin: 8px 0 4px 0;\r\n    }\r\n\r\n    & > textarea,\r\n    & > input[type = text] {\r\n        width: ${isMobile ? \"90vw\" : \"600px\"};\r\n        min-height: 1.2rem;\r\n    }\r\n\r\n    & > button {\r\n        position: relative;\r\n        text-align: center;\r\n        padding: 10px;\r\n        margin: 10px;\r\n        border-radius: 10px;\r\n        border: 1px solid var(--font-color);\r\n        background: var(--main-transparent-color);\r\n        color: var(--font-color);\r\n        cursor: pointer;\r\n        transition: .5s;\r\n        font-size: 1em;\r\n\r\n        &:hover {\r\n            border: 1px solid var(--main-color);\r\n            background: var(--font-color);\r\n            color: var(--main-color);\r\n        }\r\n    }\r\n`;\r\n\r\nconst ContactContainer = ({ mail }: { mail: string }): JSX.Element => {\r\n    const alert = useAlert();\r\n\r\n    //TODO size max\r\n    const [name, setName] = React.useState(\"\");\r\n    const [content, setContent] = React.useState(\"\");\r\n\r\n    const handleSetNameOnChange = (event: React.ChangeEvent<HTMLInputElement>) => setName(event.target.value);\r\n\r\n    const handleSetContentOnChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => setContent(event.target.value);\r\n\r\n\r\n    const handleOnSubmit = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        event.preventDefault();\r\n        let error = false;\r\n\r\n        if (!name.trim()) {\r\n            alert.error(\"Veuillez saisir votre nom.\");\r\n            error = true;\r\n        }\r\n        if (!content.trim()) {\r\n            alert.error(\"Veuillez saisir un message.\");\r\n            error = true;\r\n        }\r\n\r\n        if (!error) {\r\n            window.open('mailto:' + mail + '?subject=Contact - ' + name.trim() + '&body=' + content.trim());\r\n            alert.success(\"Une fenêtre devrait s'ouvrir pour vous permettre d'envoyer le message.\")\r\n            setName(\"\");\r\n            setContent(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ContactContainerStyle>\r\n            <label htmlFor=\"name\">Nom:</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={handleSetNameOnChange}\r\n            />\r\n            <label htmlFor=\"content\">Message:</label>\r\n            <textarea\r\n                name=\"content\"\r\n                rows={5}\r\n                value={content}\r\n                onChange={handleSetContentOnChange}\r\n            ></textarea>\r\n            <button onClick={handleOnSubmit}>Contacter</button>\r\n        </ContactContainerStyle>\r\n    );\r\n}\r\n\r\n\r\nconst Contact = (): JSX.Element => {\r\n    return (\r\n        <Section>\r\n            <FirebaseDatabaseNode\r\n                path=\"/email/\"\r\n                orderByKey\r\n            >\r\n                {data => !data.isLoading && data.value &&\r\n                    <ContactContainer mail={data.value} />\r\n                }\r\n            </FirebaseDatabaseNode>\r\n            <DiscordInvite />\r\n        </Section>\r\n    );\r\n}\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nimport IProject from './IProject';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronDown, faChevronUp, faExternalLinkAlt, faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport LanguageComponent from '../../../components/LanguageComponent';\r\nimport { faGithub, faYoutube } from '@fortawesome/free-brands-svg-icons';\r\nimport { css } from '@emotion/react';\r\nimport Markdown from 'markdown-to-jsx';\r\n\r\nconst Container = styled.div`\r\n    width: ${isMobile ? \"90vw\" : \"80%\"};\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst ProjectTitle = styled.h1`\r\n    text-align: center;\r\n    padding-bottom: 8px;\r\n    border-bottom: 1px solid var(--font-color);\r\n    margin: 0;\r\n    color: var(--secondary-color);\r\n    cursor: pointer;\r\n    font-size: 1.3rem;\r\n\r\n    &>svg {\r\n        margin-left: 8px;\r\n        color: var(--font-color);\r\n        font-size: .9rem;\r\n        transform: rotate(-0deg);\r\n    }\r\n`;\r\n\r\nconst ContentContainer = styled.div<{ show: boolean }>`\r\n    border: 1px solid var(--font-color);\r\n    border-top: none;\r\n    transition: max-height .5s ease-in-out, padding .5s ease-in-out, overflow .5s ease-in-out;\r\n\r\n    ${props => props.show ?\r\n        css`\r\n            padding: 8px;\r\n            max-height: 1000px;\r\n        `\r\n        :\r\n        css`\r\n            max-height: 0;\r\n            overflow: hidden;\r\n            padding: 0 8px;\r\n            border: none;\r\n        `\r\n    }\r\n\r\n    & p {\r\n        margin: 4px 0;\r\n    }\r\n`\r\n\r\nconst MiscContainer = styled.div`\r\n    border: 1px solid var(--font-color);\r\n    border-top: none;\r\n    padding: 8px;\r\n    margin-bottom: 1rem;\r\n    display: flex;\r\n    ${isMobile && css`\r\n        flex-direction: column;\r\n    `}\r\n`;\r\n\r\nconst LanguagesContainer = styled.div`\r\n    flex-grow: 1;\r\n\r\n    &>span:not(:last-of-type):after {\r\n        content: \"–\";\r\n        margin: 0 6px;\r\n    }\r\n`;\r\n\r\nconst LinksContainer = styled.div`\r\n    margin-right: 8px;\r\n    ${isMobile ?\r\n        css`\r\n            margin-top: 10px;\r\n        `\r\n        :\r\n        css`\r\n            float: right;\r\n        `\r\n    }\r\n\r\n    &>a {\r\n        &:hover>svg {\r\n            color: var(--main-color) !important;\r\n        }\r\n\r\n        &>svg {\r\n            margin-right: 8px;\r\n            font-size: 1.2rem;\r\n            transition: .5s;\r\n\r\n            &.fa-github {\r\n                color: #fff;\r\n            }\r\n\r\n            &.fa-youtube {\r\n                color: #eb4034;\r\n            }\r\n\r\n            &.fa-external-link-alt {\r\n                color: #fff;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst SecondaryTitle = styled.h2`\r\n    color: var(--secondary-color);\r\n    margin: 0;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\nconst List = styled.ul`\r\n    margin-left: 18px;\r\n    margin: 0;\r\n    padding: 0;\r\n    ${isMobile ?\r\n        css`\r\n            list-style-type: \"- \";\r\n            padding-left: 12px;\r\n        `\r\n        :\r\n        css`\r\n            list-style-type: \"\\\\21AA \\\\0020\";\r\n            padding-left: 18px;\r\n        `\r\n    };\r\n\r\n    &>li {\r\n        padding: 2px 0;\r\n    }\r\n`;\r\n\r\nconst ContributorsContainer = styled.div`\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n\r\n    &>svg {\r\n        margin: 0 2px;\r\n    }\r\n`;\r\n\r\ntype PropsType = {\r\n    project: IProject;\r\n}\r\n\r\nconst ProjectCard = ({ project }: PropsType): JSX.Element => {\r\n    const cardRef = React.useRef<HTMLDivElement>(null);\r\n    const [show, setShow] = React.useState<boolean>(false);\r\n\r\n    const handleTitleClick = () => {\r\n        if (!show && cardRef.current)\r\n            window.scrollTo(0, cardRef.current.offsetTop - 200);\r\n\r\n        setShow(!show);\r\n    }\r\n\r\n    return (\r\n        <Container ref={cardRef}>\r\n            <ProjectTitle onClick={handleTitleClick}>\r\n                {project.label}<FontAwesomeIcon icon={show ? faChevronUp : faChevronDown} />\r\n            </ProjectTitle>\r\n            <ContentContainer show={show}>\r\n                {project.objective &&\r\n                    <>\r\n                        <SecondaryTitle>Objectif</SecondaryTitle>\r\n                        {/* <p>{project.objective}</p> */}\r\n                        <p><Markdown>{project.objective}</Markdown></p>\r\n                    </>\r\n                }\r\n                {project.aimedSkills &&\r\n                    <>\r\n                        <SecondaryTitle>Compétences visées</SecondaryTitle>\r\n                        <List>\r\n                            {project.aimedSkills.map((skill, index) =>\r\n                                <li key={index}><Markdown>{skill}</Markdown></li>\r\n                            )}\r\n                        </List>\r\n                    </>\r\n                }\r\n                {project.features &&\r\n                    <>\r\n                        <SecondaryTitle>Compétences visées</SecondaryTitle>\r\n                        <List>\r\n                            {project.features.map((skill, index) =>\r\n                                <li key={index}><Markdown>{skill}</Markdown></li>\r\n                            )}\r\n                        </List>\r\n                    </>\r\n                }\r\n                {project.numberOfContributors && project.numberOfContributors > 0 &&\r\n                    <ContributorsContainer title={project.numberOfContributors + \" contributeurs\"}>\r\n                        {Array.from(Array(project.numberOfContributors), (e, i) => {\r\n                            return <FontAwesomeIcon icon={faUser} key={i} />\r\n                        })}\r\n                    </ContributorsContainer>\r\n                }\r\n            </ContentContainer>\r\n            <MiscContainer>\r\n                <LanguagesContainer>\r\n                    {project.techs.map((tech, index) =>\r\n                        <LanguageComponent key={index} name={tech} />\r\n                    )}\r\n                </LanguagesContainer>\r\n                <LinksContainer>\r\n                    {project.links?.site &&\r\n                        <a href={project.links?.site} target=\"_blank\" rel=\"noreferrer\"><FontAwesomeIcon icon={faExternalLinkAlt} /></a>\r\n                    }\r\n                    {project.links?.youtube &&\r\n                        <a href={project.links?.youtube} target=\"_blank\" rel=\"noreferrer\"><FontAwesomeIcon icon={faYoutube} /></a>\r\n                    }\r\n                    {project.links?.github &&\r\n                        <a href={project.links?.github} target=\"_blank\" rel=\"noreferrer\"><FontAwesomeIcon icon={faGithub} /></a>\r\n                    }\r\n                </LinksContainer>\r\n            </MiscContainer>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ProjectCard;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { FirebaseDatabaseNode } from '@react-firebase/database';\r\nimport { Section, Segment, SegmentTitle } from '../../components/styledComponents';\r\n\r\nimport IProjects from './Projects/IProjects';\r\nimport ProjectCard from './Projects/ProjectCard';\r\n\r\nconst ProjectsContainerStyle = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst CategoryTitle = styled.h1`\r\n    font-size: 1.5rem;\r\n    color: var(--main-color);\r\n    text-align: center;\r\n    padding-bottom: 8px;\r\n    border-bottom: 1px solid var(--font-color);\r\n\r\n    &:not(:first-of-type) {\r\n        margin-top: 4rem;\r\n    }\r\n`;\r\n\r\nconst ProjectsContainer = ({ projects }: { projects: IProjects }) => {\r\n    return (\r\n        <ProjectsContainerStyle>\r\n            {projects.schoolProjects?.map((school, schoolIndex) =>\r\n                <div key={schoolIndex}>\r\n                    <CategoryTitle>Projets scolaires ({school.label})</CategoryTitle>\r\n                    {school.semesters?.map((semester, semesterIndex) =>\r\n                        <div key={semesterIndex}>\r\n                            <SegmentTitle>Semestre {semester.number}</SegmentTitle>\r\n                            <Segment>\r\n                                {semester.projects?.map((project, index) =>\r\n                                    <ProjectCard project={project} key={index} />\r\n                                )}\r\n                            </Segment>\r\n                        </div>\r\n                    )}\r\n                    {school.projects?.map((project, index) =>\r\n                        <ProjectCard project={project} key={index} />\r\n                    )}\r\n                </div>\r\n            )}\r\n            {projects.personalProjects &&\r\n                <>\r\n                    <CategoryTitle>Projets personnels</CategoryTitle>\r\n                    {projects.personalProjects?.map((project, index) =>\r\n                        <ProjectCard project={project} key={index} />\r\n                    )}\r\n                </>\r\n            }\r\n        </ProjectsContainerStyle>\r\n    );\r\n}\r\n\r\nconst Projects = (): JSX.Element => {\r\n    return (\r\n        <Section>\r\n            <FirebaseDatabaseNode\r\n                path=\"/projects/\"\r\n                orderByKey\r\n            >\r\n                {data => !data.isLoading && data.value &&\r\n                    <ProjectsContainer projects={data.value} />\r\n                }\r\n            </FirebaseDatabaseNode>\r\n        </Section>\r\n    );\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport { ViewContainer } from '../../App';\r\n\r\nimport ColoredSection from '../../components/ColoredSection';\r\nimport Cover from '../../components/Cover';\r\nimport NavBar from '../../features/NavBar';\r\nimport { HashLink } from 'react-router-hash-link';\r\n\r\nimport About from '../../features/Portfolio/About';\r\nimport Contact from '../../features/Portfolio/Contact';\r\nimport Projects from '../../features/Portfolio/Projects';\r\n\r\nconst Portfolio = (): JSX.Element => {\r\n    return (\r\n        <ViewContainer>\r\n            <NavBar>\r\n                <HashLink smooth to=\"#about\">About</HashLink>\r\n                <HashLink smooth to=\"#projects\">Projets</HashLink>\r\n                <HashLink smooth to=\"#contact\">Contact</HashLink>\r\n            </NavBar>\r\n\r\n            <Cover url={\"https://wallpaperaccess.com/full/521099.jpg\"} >\r\n                <p>Développeur</p>\r\n                <h1>Clément RICATTE</h1>\r\n            </Cover>\r\n\r\n            <ColoredSection title=\"A propos\" id=\"about\" />\r\n            <About />\r\n\r\n            <ColoredSection title=\"Projets\" id=\"projects\" />\r\n            <Projects />\r\n\r\n            <ColoredSection title=\"Contact\" id=\"contact\" />\r\n            <Contact />\r\n        </ViewContainer>\r\n    );\r\n}\r\n\r\nexport default Portfolio;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { keyframes } from '@emotion/react';\r\n\r\nconst InfiniteRotate = keyframes`\r\n    from {\r\n        -webkit-transform: rotate(0deg);\r\n        -o-transform: rotate(0deg);\r\n        transform: rotate(0deg);\r\n    }\r\n    to {\r\n        -webkit-transform: rotate(360deg);\r\n        -o-transform: rotate(360deg);\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\n\r\n\r\n\r\nconst StyledFrontContainer = styled.div`\r\n    background-color: #3333337D;\r\n    position: fixed;\r\n    top:0;\r\n    left:0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    margin: 0 !important;\r\n    overflow: hidden;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 10000;\r\n\r\n    & > img {\r\n        color: white;\r\n        animation: ${InfiniteRotate} 2s linear infinite;\r\n    }\r\n\r\n    & > h1 {\r\n        color: var(--font-color);\r\n    }\r\n`;\r\n\r\nconst LoadImage = styled.img`\r\n    height: 8rem;\r\n    position: relative;\r\n    top: -8px;\r\n    border-radius: 50%;\r\n    float: right;\r\n    border: 1px solid var(--header-font-color);\r\n    transform: rotate(0);\r\n    transition: .5s;\r\n`;\r\n\r\ntype PropsType = {\r\n    title?: string;\r\n}\r\n\r\nconst Loading = ({ title }: PropsType): JSX.Element => {\r\n    return (\r\n        <StyledFrontContainer>\r\n            <LoadImage\r\n                src=\"https://avatars3.githubusercontent.com/u/27494805?s=460&v=4\" title=\"github.com/AvaN0x\" alt=\"github.com/AvaN0x\" />\r\n            {title && <h1>{title}</h1>}\r\n        </StyledFrontContainer>\r\n    );\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport { ViewContainer } from '../App';\r\n\r\nimport Loading from '../components/Loading';\r\nimport NavBar from '../features/NavBar';\r\n\r\nconst Discord = (): JSX.Element => {\r\n    React.useEffect(() => {\r\n        fetch(\"https://discordapp.com/api/guilds/673139614927683594/widget.json\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    window.location.href = result.instant_invite;\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    return (\r\n        <ViewContainer>\r\n            <NavBar />\r\n            <Loading title=\"Vous allez être redirigé vers l'invitation Discord.\" />\r\n        </ViewContainer>\r\n    );\r\n}\r\n\r\nexport default Discord;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/react';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\n\r\nconst FooterContainer = styled.div`\r\n    background-color: var(--header-footer-color);\r\n    color: var(--font-color);\r\n    position: absolute;\r\n    padding: 10px;\r\n    margin: 0;\r\n    width: 100%;\r\n    font-size: .9em;\r\n    z-index: 1000;\r\n    display: flex;\r\n    justify-content: center;\r\n    box-sizing: border-box;\r\n    ${isMobile && css`\r\n        flex-direction: column;\r\n        text-align: center;\r\n    `}\r\n\r\n    & > p {\r\n        margin: 0 20px;\r\n    }\r\n\r\n    & > svg {\r\n        margin: 0 5px\r\n    }\r\n\r\n    ${!isMobile && css`\r\n        & > p:not(:last-child):after {\r\n            content: '-';\r\n            position: relative;\r\n            right: -20px\r\n        }\r\n    `}\r\n`;\r\n\r\nconst Footer = (): JSX.Element => {\r\n    return (\r\n        <FooterContainer>\r\n            <p>Site réalisé par <a href=\"https://github.com/AvaN0x\">Clément RICATTE <FontAwesomeIcon icon={faGithub} /></a></p>\r\n            <p>Licence <a href=\"https://github.com/AvaN0x/avan0x.github.io/blob/master/LICENSE\">MIT</a></p >\r\n        </FooterContainer >\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport { FirebaseDatabaseProvider } from \"@react-firebase/database\";\r\nimport firebaseConfig from './firebase/config';\r\n\r\nimport { Route, HashRouter as Router, Switch } from 'react-router-dom';\r\n\r\nimport { AnimatePresence } from \"framer-motion\";\r\nimport { motion } from \"framer-motion\"\r\n\r\nimport './App.css';\r\n\r\nimport NotFound from \"./views/Errors/NotFound\";\r\nimport Portfolio from './views/Portfolio';\r\nimport Discord from './views/Discord';\r\nimport Footer from './features/Footer';\r\nimport styled from '@emotion/styled';\r\n\r\nconst PageContainer = styled.div`\r\n    min-height: 100vh;\r\n`;\r\n\r\nconst Redirect = (link: string) => {\r\n    window.location.href = link;\r\n    return null;\r\n}\r\n\r\nconst App = (): JSX.Element => {\r\n    return (\r\n        <Router basename='/'>\r\n            <FirebaseDatabaseProvider firebase={firebase} {...firebaseConfig}>\r\n                <PageContainer>\r\n                    <AnimatePresence exitBeforeEnter>\r\n                        <Switch>\r\n                            <Route exact path='/' component={Portfolio} />\r\n                            <Route exact path='/discord' component={Discord} />\r\n\r\n                            {/* GitHub Pages */}\r\n                            <Route exact path=\"/IUT-ProjetWeb\" component={() => Redirect('https://avan0x.github.io/IUT-ProjetWeb/')} />\r\n                            <Route exact path=\"/AnciensEtudiantsIUTMetz\" component={() => Redirect('https://oxypomme.github.io/AnciensEtudiantsIUTMetz/')} />\r\n\r\n                            {/* Other pages */}\r\n                            <Route exact path=\"/Matchable\" component={() => Redirect('https://matchable-80a41.web.app/')} />\r\n\r\n                            {/* Error pages */}\r\n                            <Route component={NotFound} />\r\n                        </Switch>\r\n                    </AnimatePresence>\r\n                </PageContainer>\r\n\r\n                <Footer></Footer>\r\n            </FirebaseDatabaseProvider>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport const ViewContainer = ({ children }: { children: React.ReactNode }): JSX.Element => {\r\n    return (\r\n        <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n        >\r\n            {children}\r\n        </motion.div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert';\r\nimport AlertTemplate from './AlertTemplate';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst options = {\r\n    position: positions.BOTTOM_RIGHT,\r\n    transition: transitions.FADE,\r\n    timeout: 5000,\r\n    offset: '10px',\r\n    containerStyle: {\r\n        zIndex: 10000,\r\n        bottom: 50\r\n    }\r\n}\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <AlertProvider template={AlertTemplate} {...options}>\r\n            <App />\r\n        </AlertProvider>\r\n    </React.StrictMode >,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}