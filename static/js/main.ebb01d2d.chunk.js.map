{"version":3,"sources":["logo.svg","views/Errors/NotFound.tsx","components/Cover.tsx","features/NavBar/NavHeader.tsx","features/NavBar/NavMenu.tsx","features/NavBar/index.tsx","views/Home/index.tsx","features/Footer/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NotFound","className","src","logo","alt","Scroll","keyframes","CoverContainer","styled","div","props","url","CoverContentContainer","actualHeight","AnimatedScroller","a","Cover","children","React","useState","contentHeight","setContentHeight","contentRef","useRef","useEffect","current","clientHeight","ref","href","icon","faAngleDoubleDown","id","NavContainer","NavItemContainer","isMobile","css","LeftItemContainer","RightItemContainer","ToggleLink","isOpen","GitImage","img","NavBarToggle","onClick","faTimes","faBars","NavHeader","toggleMenu","navState","setNavState","to","faHome","target","rel","title","MenuContainer","MenuSection","NavMenu","faGithub","faDiscord","faPortrait","NavBar","childrenInMenu","Children","count","Home","FooterContainer","Footer","PageContainer","Redirect","link","window","location","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAAe,G,MAAA,IAA0B,kCCoB1BA,EAhBE,WACb,OACI,qBAAKC,UAAU,MAAf,SACI,iCACI,sBAAKA,UAAU,aAAf,UACI,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,+CACA,oE,+tCCJpB,IAAMC,EAASC,YAAH,KAiBNC,EAAiBC,IAAOC,IAAV,KAIQ,SAAAC,GAAK,OAAIA,EAAMC,OAKrCC,EAAwBJ,IAAOC,IAAV,KAGP,SAAAC,GAAK,MAAI,MAAQA,EAAMG,aAAe,EAAI,QAoBxDC,EAAmBN,IAAOO,EAAV,IAELV,GAwCFW,EAvBD,SAAC,GAAkC,IAAhCL,EAA+B,EAA/BA,IAAKM,EAA0B,EAA1BA,SAA0B,EACFC,IAAMC,SAAS,GADb,mBACrCC,EADqC,KACtBC,EADsB,KAEtCC,EAAaJ,IAAMK,OAAuB,MAMhD,OAJAL,IAAMM,WAAU,WAAO,IAAD,EAClBH,GAAiB,UAAAC,EAAWG,eAAX,eAAoBC,eAAgB,KACtD,CAACJ,IAGA,qCACI,cAACf,EAAD,CAAgBI,IAAKA,EAArB,SACI,eAACC,EAAD,CAAuBe,IAAKL,EAAYT,aAAcO,EAAtD,UACKH,EACD,cAACH,EAAD,CAAkBc,KAAK,UAAvB,SACI,cAAC,IAAD,CAAiBC,KAAMC,aAInC,sBAAMC,GAAG,e,uiEC9ErB,IA2BMC,EAAexB,IAAOC,IAAV,KAYZwB,EAAmBzB,IAAOC,IAAV,KAkBXyB,YAAYC,YAAb,MAYJC,EAAoB5B,YAAOyB,EAAPzB,CAAH,KAIjB6B,EAAqB7B,YAAOyB,EAAPzB,CAAH,KAGlB8B,EAAa9B,IAAOO,EAAV,KAGV,SAAAL,GAAK,OAAIA,EAAM6B,QAAUJ,YAAhB,KAMJD,YAAYC,YAAb,SAQJK,EAAWhC,IAAOiC,IAAV,KAiBRC,EAAe,SAAC,GAAiG,IAA/FH,EAA8F,EAA9FA,OAAQI,EAAsF,EAAtFA,QAC5B,OACI,cAACL,EAAD,CAAYC,OAAQA,EAAQI,QAASA,EAArC,SACI,cAAC,IAAD,CAAiBd,KAAMU,EAASK,IAAUC,SAMvCC,EAvHG,SAAC,GAAyC,IAAvC7B,EAAsC,EAAtCA,SAAU8B,EAA4B,EAA5BA,WAA4B,EACvB7B,IAAMC,UAAkB,GADD,mBAChD6B,EADgD,KACtCC,EADsC,KAQvD,OACI,eAACjB,EAAD,WACI,eAACI,EAAD,WACI,cAAC,EAAD,CAAcG,OAAQS,EAAUL,QARnB,WACrBI,GAAYC,GACZC,GAAaD,MAOL,cAAC,IAAD,CAASE,GAAG,IAAZ,SAAgB,cAAC,IAAD,CAAiBrB,KAAMsB,QACtClC,KAGL,cAACoB,EAAD,UACI,mBAAGT,KAAK,4BAA4BwB,OAAO,SAASC,IAAI,aAAxD,SACI,cAACb,EAAD,CACItC,IAAI,8DAA8DoD,MAAM,oBAAoBlD,IAAI,8B,2lDCxBxH,IAAMmD,EAAgB/C,IAAOC,IAAV,KAYb,SAAAC,GAAK,OAAKwB,WAMRC,YANO,IAOKzB,EAAM6B,OAAS,IAAM,SANjCJ,YADO,IAEKzB,EAAM6B,OAAS,IAAM,aAWnCiB,EAAchD,IAAOC,IAAV,KA6EFgD,EA3BC,SAAC,GAAqC,IAAnClB,EAAkC,EAAlCA,OAAQtB,EAA0B,EAA1BA,SACvB,OACI,eAACsC,EAAD,CAAehB,OAAQA,EAAvB,UACKtB,GACG,eAACuC,EAAD,WACI,gDACCvC,KAGT,eAACuC,EAAD,WACI,0CACA,oBAAG5B,KAAK,4BAA4BwB,OAAO,SAASC,IAAI,aAAxD,UACI,cAAC,IAAD,CAAiBxB,KAAM6B,MAD3B,YAGA,oBAAG9B,KAAK,6BAA6BwB,OAAO,SAASC,IAAI,aAAzD,UACI,cAAC,IAAD,CAAiBxB,KAAM8B,MAD3B,aAGA,eAAC,IAAD,CAAST,GAAG,IAAZ,UACI,cAAC,IAAD,CAAiBrB,KAAM+B,MAD3B,sBCtEDC,EArBA,SAAC,GAA6B,IAA3B5C,EAA0B,EAA1BA,SAA0B,EACRC,IAAMC,UAAkB,GADhB,mBACjC6B,EADiC,KACvBC,EADuB,KAGlCa,EAA0B5C,IAAM6C,SAASC,MAAM/C,GAAY,GAAKiB,WAEtE,OACI,qCACI,cAAC,EAAD,CAAWa,WAAYE,EAAvB,UACMa,GACE7C,IAGR,cAAC,EAAD,CAASsB,OAAQS,EAAjB,SACKc,GACG7C,QCeLgD,GAjCF,WACT,OACI,qCACI,eAAC,EAAD,WACI,cAAC,IAAD,CAASf,GAAG,IAAZ,mBACA,cAAC,IAAD,CAASA,GAAG,IAAZ,0BAGJ,eAAC,EAAD,CAAOvC,IAAK,8CAAZ,UACI,+CACA,uDAGJ,qBAAKV,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACS,+CADT,0BAGA,mBACIH,UAAU,WACV2B,KAAK,sBACLwB,OAAO,SACPC,IAAI,sBAJR,kC,yxBCjBpB,IAAMa,GAAkB1D,IAAOC,IAAV,KAYfyB,YAAYC,YAAJ,OAYPD,YAAYC,YAAb,OAkBSgC,GATA,WACX,OACI,eAACD,GAAD,WACI,wDAAoB,oBAAGtC,KAAK,4BAAR,gCAAoD,cAAC,IAAD,CAAiBC,KAAM6B,YAC/F,yCAAW,mBAAG9B,KAAK,iEAAR,wB,iGCnCvB,IAAMwC,GAAgB5D,IAAOC,IAAV,MAIb4D,GAAW,SAACC,GAEd,OADAC,OAAOC,SAAS5C,KAAO0C,EAChB,MA2BIG,OAxBf,WACI,OACI,eAAC,IAAD,WACI,cAACL,GAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,IAAIC,UAAWX,KAGjC,cAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,iBAAiBC,UAAW,kBAAMP,GAAS,8CAC7D,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,2BAA2BC,UAAW,kBAAMP,GAAS,0DAGvE,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,aAAaC,UAAW,kBAAMP,GAAS,uCAGzD,cAAC,IAAD,CAAOO,UAAW5E,SAI1B,cAAC,GAAD,QCzBG6E,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAEJC,SAASC,eAAe,SAM5Bb,O","file":"static/js/main.ebb01d2d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nimport logo from '../../logo.svg';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <header>\r\n                <div className=\"App-header\">\r\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                    <h1>404 Not Found</h1>\r\n                    <p>\r\n                        Seems like you are lost ...\r\n                    </p>\r\n                </div>\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { keyframes } from '@emotion/react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDoubleDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Scroll = keyframes`\r\n    0% {\r\n        transform: translateY(0);\r\n        opacity: 1\r\n    }\r\n\r\n    80% {\r\n        transform: translateY(15px);\r\n        opacity: .5\r\n    }\r\n\r\n    100% {\r\n        transform: translateY(0);\r\n        opacity: 1\r\n    }\r\n`;\r\n\r\nconst CoverContainer = styled.div<{ url: string }>`\r\n    width: 100%;\r\n    height: 100vh;\r\n    position: relative;\r\n    background-image: url(${props => props.url});\r\n    background-size: cover;\r\n    background-position: center;\r\n`;\r\n\r\nconst CoverContentContainer = styled.div<{ actualHeight: number }>`\r\n    position: relative;\r\n    background-color: var(--main-transparent-color);\r\n    top: calc(50% ${props => \" - \" + props.actualHeight / 2 + \"px\"});\r\n    width: 100%;\r\n    text-align: center;\r\n    margin: auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    position: sticky;\r\n\r\n    & * {\r\n        margin: 0;\r\n        font-size: 1.5rem;\r\n        color: var(--font-color);\r\n    }\r\n\r\n    & h1 {\r\n        font-size: 2rem;\r\n    }\r\n`;\r\n\r\nconst AnimatedScroller = styled.a`\r\n    padding-bottom: 1rem;\r\n    animation: ${Scroll} 1.8s linear infinite;\r\n\r\n    & > svg {\r\n        font-size: 1.8rem;\r\n    }\r\n`;\r\n\r\ntype PropsType = {\r\n    url: string;\r\n    children?: React.ReactNode;\r\n}\r\n\r\n/**\r\n * Create a cover component with a background image\r\n * @param {string} url url of the image\r\n * @param {React.ReactNode} children content of the cover\r\n */\r\nconst Cover = ({ url, children }: PropsType) => {\r\n    const [contentHeight, setContentHeight] = React.useState(0);\r\n    const contentRef = React.useRef<HTMLDivElement>(null);\r\n\r\n    React.useEffect(() => {\r\n        setContentHeight(contentRef.current?.clientHeight || 0);\r\n    }, [contentRef]);\r\n\r\n    return (\r\n        <>\r\n            <CoverContainer url={url}>\r\n                <CoverContentContainer ref={contentRef} actualHeight={contentHeight}>\r\n                    {children}\r\n                    <AnimatedScroller href=\"#scroll\">\r\n                        <FontAwesomeIcon icon={faAngleDoubleDown} />\r\n                    </AnimatedScroller>\r\n                </CoverContentContainer>\r\n            </CoverContainer>\r\n            <span id=\"scroll\"></span>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Cover;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faHome, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { css } from '@emotion/react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n    toggleMenu: (value: boolean) => void;\r\n    children?: React.ReactNode;\r\n}\r\n\r\nconst NavHeader = ({ children, toggleMenu }: PropsType) => {\r\n    const [navState, setNavState] = React.useState<boolean>(false);\r\n\r\n    const handleToggleMenu = () => {\r\n        toggleMenu(!navState);\r\n        setNavState(!navState);\r\n    }\r\n\r\n    return (\r\n        <NavContainer>\r\n            <LeftItemContainer>\r\n                <NavBarToggle isOpen={navState} onClick={handleToggleMenu} />\r\n                <NavLink to=\"/\"><FontAwesomeIcon icon={faHome} /></NavLink>\r\n                {children}\r\n            </LeftItemContainer>\r\n\r\n            <RightItemContainer>\r\n                <a href=\"https://github.com/AvaN0x\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <GitImage\r\n                        src=\"https://avatars3.githubusercontent.com/u/27494805?s=460&v=4\" title=\"github.com/AvaN0x\" alt=\"github.com/AvaN0x\" />\r\n                </a>\r\n            </RightItemContainer>\r\n        </NavContainer>\r\n    );\r\n}\r\n\r\n\r\nconst NavContainer = styled.div`\r\n    width: 100vw;\r\n    position: fixed;\r\n    top: 0;\r\n    box-sizing: border-box;\r\n    height: 3rem;\r\n    background: var(--header-footer-color);\r\n    padding: 0 5px;\r\n    display: flex;\r\n    z-index: 1000;\r\n`;\r\n\r\nconst NavItemContainer = styled.div`\r\n    display: flex;\r\n\r\n    & > a {\r\n        cursor: pointer;\r\n        position: relative;\r\n        font-size: 1.2rem;\r\n        line-height: calc(3rem - 2 * .7rem);\r\n        color: var(--header-font-color);\r\n        text-decoration: none;\r\n        padding: .7rem 1rem;\r\n        transition: .5s;\r\n\r\n        & > svg {\r\n            transition: .5s;\r\n            font-size: 1.6rem;\r\n        }\r\n\r\n        ${!isMobile && css`\r\n            &:hover {\r\n                color: var(--main-color);\r\n\r\n                & > svg {\r\n                    transform: rotate(5deg) scale(1.1);\r\n                }\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\nconst LeftItemContainer = styled(NavItemContainer)`\r\n    flex-grow: 1;\r\n`;\r\n\r\nconst RightItemContainer = styled(NavItemContainer)`\r\n`;\r\n\r\nconst ToggleLink = styled.a<{ isOpen?: boolean }>`\r\n    width: 1.2rem;\r\n\r\n    ${props => props.isOpen && css`\r\n        & svg {\r\n            transform: rotate(90deg);\r\n            color: var(--main-color);\r\n        }\r\n\r\n        ${!isMobile && css`\r\n            &:hover svg {\r\n                transform: rotate(80deg) scale(1.1) !important;\r\n            }\r\n        `}\r\n    `}\r\n`;\r\n\r\nconst GitImage = styled.img`\r\n    height: 2.4rem;\r\n    position: relative;\r\n    top: -8px;\r\n    border-radius: 50%;\r\n    float: right;\r\n    border: 1px solid var(--header-font-color);\r\n    transform: rotate(0);\r\n    transition: .5s;\r\n\r\n    &:hover {\r\n        transform: rotate(360deg);\r\n        border: 1px solid var(--main-color);\r\n        border-radius: 30%\r\n    }\r\n`;\r\n\r\nconst NavBarToggle = ({ isOpen, onClick }: { isOpen?: boolean; onClick?: (event: React.SyntheticEvent) => void; }) => {\r\n    return (\r\n        <ToggleLink isOpen={isOpen} onClick={onClick}>\r\n            <FontAwesomeIcon icon={isOpen ? faTimes : faBars} />\r\n        </ToggleLink>\r\n    );\r\n}\r\n\r\n\r\nexport default NavHeader;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faDiscord, faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { faPortrait } from '@fortawesome/free-solid-svg-icons';\r\nimport { css } from '@emotion/react';\r\n\r\nconst MenuContainer = styled.div<{ isOpen: boolean }>`\r\n    position: fixed;\r\n    top: 3rem;\r\n    height: calc(100vh - 3rem);\r\n    background-color: var(--nav-menu-color);\r\n    overflow-y: auto;\r\n    box-shadow: 0 3px 5px black;\r\n    display: flex;\r\n    flex-direction: column;\r\n    z-index: 1001;\r\n    transition: .5s;\r\n\r\n    ${props => !isMobile ?\r\n        css`\r\n            left: ${props.isOpen ? \"0\" : \"-300px\"};\r\n            width: 300px;\r\n        `\r\n        :\r\n        css`\r\n            left: ${props.isOpen ? \"0\" : \"-100%\"};\r\n            width: 100%;\r\n        `\r\n    }\r\n`;\r\n\r\nconst MenuSection = styled.div`\r\n    border-bottom: 2px solid var(--main-transparent-color);\r\n    font-size: 1.1rem;\r\n    text-align: left;\r\n    padding: 2px;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    & > h1 {\r\n        margin: 10px 0;\r\n        padding: 0;\r\n        text-align: center;\r\n        font-size: 1.2rem;\r\n        font-weight: normal;\r\n        text-transform: uppercase\r\n    }\r\n\r\n    & > a {\r\n        color: #fff;\r\n        text-decoration: none;\r\n        padding: 5px;\r\n        padding-left: 2.3rem;\r\n        font-size: 1.1rem;\r\n        transition: .5s;\r\n\r\n        & > svg {\r\n            position: absolute;\r\n            left: 15px;\r\n            transform: translateY(10%);\r\n            transition: .5s;\r\n        }\r\n\r\n        &:hover {\r\n            color: var(--main-color);\r\n            padding-left: calc(2.3rem + 5px);\r\n\r\n            & > svg {\r\n                color: var(--main-color);\r\n                left: 20px;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n\r\ntype PropsType = {\r\n    isOpen: boolean;\r\n    children?: React.ReactNode;\r\n}\r\n\r\nconst NavMenu = ({ isOpen, children }: PropsType) => {\r\n    return (\r\n        <MenuContainer isOpen={isOpen}>\r\n            {children &&\r\n                <MenuSection>\r\n                    <h1>Sur cette page</h1>\r\n                    {children}\r\n                </MenuSection>\r\n            }\r\n            <MenuSection>\r\n                <h1>A propos</h1>\r\n                <a href=\"https://github.com/AvaN0x\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <FontAwesomeIcon icon={faGithub} />GitHub\r\n                </a>\r\n                <a href=\"https://discord.gg/uDPqGyQ\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <FontAwesomeIcon icon={faDiscord} />Discord\r\n                </a>\r\n                <NavLink to=\"/\">\r\n                    <FontAwesomeIcon icon={faPortrait} />Portfolio\r\n                </NavLink>\r\n            </MenuSection>\r\n\r\n\r\n        </MenuContainer>\r\n    );\r\n}\r\n\r\nexport default NavMenu;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nimport NavHeader from './NavHeader';\r\nimport NavMenu from './NavMenu';\r\n\r\ntype PropsType = {\r\n    children?: React.ReactNode;\r\n}\r\n\r\nconst NavBar = ({ children }: PropsType) => {\r\n    const [navState, setNavState] = React.useState<boolean>(false);\r\n\r\n    const childrenInMenu: boolean = React.Children.count(children) > 4 || isMobile;\r\n\r\n    return (\r\n        <>\r\n            <NavHeader toggleMenu={setNavState}>\r\n                {!childrenInMenu &&\r\n                    children\r\n                }\r\n            </NavHeader>\r\n            <NavMenu isOpen={navState}>\r\n                {childrenInMenu &&\r\n                    children\r\n                }\r\n            </NavMenu>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Cover from '../../components/Cover';\r\nimport NavBar from '../../features/NavBar';\r\n\r\nimport logo from '../../logo.svg';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <NavBar>\r\n                <NavLink to=\"/\">About</NavLink>\r\n                <NavLink to=\"/\">Portfolio</NavLink>\r\n            </NavBar>\r\n\r\n            <Cover url={\"https://wallpaperaccess.com/full/521099.jpg\"} >\r\n                <p>Développeur</p>\r\n                <h1>Clément RICATTE</h1>\r\n            </Cover>\r\n\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                    <p>\r\n                        Edit <code>src/App.tsx</code> and save to reload.\r\n                    </p>\r\n                    <a\r\n                        className=\"App-link\"\r\n                        href=\"https://reactjs.org\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                    >\r\n                        Learn React\r\n                 </a>\r\n                </header>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/react';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\n\r\nconst FooterContainer = styled.div`\r\n    background-color: var(--header-footer-color);\r\n    color: var(--font-color);\r\n    position: absolute;\r\n    padding: 10px;\r\n    margin: 0;\r\n    width: 100%;\r\n    font-size: .9em;\r\n    z-index: 1000;\r\n    display: flex;\r\n    justify-content: center;\r\n    box-sizing: border-box;\r\n    ${isMobile && css`\r\n        flex-direction: column;\r\n    `}\r\n\r\n    & > p {\r\n        margin: 0 20px;\r\n    }\r\n\r\n    & > svg {\r\n        margin: 0 5px\r\n    }\r\n\r\n    ${!isMobile && css`\r\n        & > p:not(:last-child):after {\r\n            content: '-';\r\n            position: relative;\r\n            right: -20px\r\n        }\r\n    `}\r\n`;\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <FooterContainer>\r\n            <p>Site réalisé par <a href=\"https://github.com/AvaN0x\">Clément RICATTE <FontAwesomeIcon icon={faGithub} /></a></p>\r\n            <p>Licence <a href=\"https://github.com/AvaN0x/avan0x.github.io/blob/master/LICENSE\">MIT</a></p >\r\n        </FooterContainer >\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport './App.css';\n\nimport NotFound from \"./views/Errors/NotFound\";\nimport Home from './views/Home';\nimport Footer from './features/Footer';\nimport styled from '@emotion/styled';\n\nconst PageContainer = styled.div`\n    min-height: 100vh;\n`;\n\nconst Redirect = (link: string) => {\n    window.location.href = link;\n    return null;\n}\n\nfunction App() {\n    return (\n        <Router>\n            <PageContainer>\n                <Switch>\n                    <Route exact path='/' component={Home} />\n\n                    {/* GitHub Pages */}\n                    <Route exact path=\"/IUT-ProjetWeb\" component={() => Redirect('https://avan0x.github.io/IUT-ProjetWeb/')} />\n                    <Route exact path=\"/AnciensEtudiantsIUTMetz\" component={() => Redirect('https://oxypomme.github.io/AnciensEtudiantsIUTMetz/')} />\n\n                    {/* Other pages */}\n                    <Route exact path=\"/Matchable\" component={() => Redirect('https://matchable-80a41.web.app/')} />\n\n                    {/* Error pages */}\n                    <Route component={NotFound} />\n                </Switch>\n            </PageContainer>\n\n            <Footer></Footer>\n        </Router>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}