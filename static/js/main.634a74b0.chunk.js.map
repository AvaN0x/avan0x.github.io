{"version":3,"sources":["firebase/config.ts","AlertTemplate.tsx","components/Lang/Lang.tsx","components/Loading.tsx","features/NavBar/NavHeader.tsx","features/NavBar/NavMenu.tsx","features/NavBar/index.tsx","views/Errors/NotFound.tsx","components/ColoredSection.tsx","components/Cover.tsx","components/styledComponents.tsx","features/Portfolio/About/Personal/Personal.tsx","features/Portfolio/About/Experiences/Experiences.tsx","features/Portfolio/About/Educations/Educations.tsx","components/LoadBar.tsx","features/Portfolio/About/Languages/Languages.tsx","features/Portfolio/About/Qualities/Qualities.tsx","components/LanguagesIcons/LanguageComponent.tsx","features/Portfolio/About/Techs/Techs.tsx","features/Portfolio/About.tsx","components/DiscordInvite.tsx","features/Portfolio/Contact.tsx","features/Portfolio/Projects/ProjectCard.tsx","features/Portfolio/Projects.tsx","views/Portfolio/index.tsx","views/Discord.tsx","features/Footer/index.tsx","App.tsx","reportWebVitals.ts","firebase/store.tsx","index.tsx"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","AlertBox","styled","div","Button","button","Message","span","AlertTemplate","message","options","style","close","type","icon","faCheckCircle","color","faExclamationCircle","onClick","faTimes","LangString","name","langs","useSelector","state","firebase","data","LangStringFromILang","isLoaded","console","error","content","en","fr","Lang","InfiniteRotate","keyframes","StyledFrontContainer","props","allowClick","css","LoadImage","img","spin","Loading","title","subtitle","noSpinning","src","alt","NavContainer","NavItemContainer","isMobile","LeftItemContainer","RightItemContainer","ToggleLink","a","isOpen","GitImage","NavBarToggle","faBars","NavHeader","children","toggleMenu","React","useState","navState","setNavState","to","faHome","href","target","rel","MenuContainer","MenuSection","NavMenu","faGithub","faDiscord","faPortrait","NavBar","childrenInMenu","Children","count","NotFound","ColoredSectionComponent","section","ColoredSection","id","Scroll","CoverContainer","url","CoverContentContainer","actualHeight","AnimatedScroller","HashLink","Cover","contentHeight","setContentHeight","contentRef","useRef","useEffect","current","clientHeight","ref","smooth","faAngleDoubleDown","Section","SegmentTitle","h1","Segment","EducationContainer","Label","b","Personal","personal","yearOld","Date","getTime","moment","dateofbirth","toDate","getFullYear","daysSinceBirthday","Math","floor","date_format","AboutItem","lastname","firstname","length","format","place","license","car","ownLicense","ownVehicle","Educations","experiences","map","experience","index","label","location","date","start","end","educations","education","Container","Fill","pourcent","LoadBar","Languages","languages","language","Qualities","qualities","quality","LanguageImg","LanguageLink","LanguageComponent","icons","techIndex","LanguageList","li","Techs","techs","others","techList","tech","codingLanguages","AboutContainerStyle","AboutContainer","about","Experiences","About","path","orderByKey","isLoading","value","DetailsContainer","JoinButton","NavLink","DiscordLogo","DiscordBubble","i","DiscordInvite","discord","setDiscord","fetch","then","res","json","result","onlines","presence_count","ContactContainerStyle","ContactContainer","mail","alert","useAlert","contact_error_name","contact_error_message","contact_success","setName","setContent","htmlFor","onChange","event","rows","preventDefault","trim","window","open","success","Contact","ProjectTitle","ContentContainer","show","MiscContainer","LanguagesContainer","LinksContainer","SecondaryTitle","h2","List","ul","ContributorsContainer","ProjectCard","project","cardRef","setShow","scrollTo","offsetTop","faChevronUp","faChevronDown","objective","aimedSkills","skill","features","numberOfContributors","Array","from","e","faUser","links","site","faExternalLinkAlt","youtube","faYoutube","github","ProjectsContainerStyle","CategoryTitle","ProjectsContainer","projects","schoolProjects","school","schoolIndex","semesters","semester","semesterIndex","number","personalProjects","Projects","Portfolio","useFirebaseConnect","queryParams","Discord","instant_invite","FooterContainer","Footer","PageContainer","Redirect","link","position","positions","BOTTOM_RIGHT","transition","transitions","FADE","timeout","offset","containerStyle","zIndex","bottom","ViewContainer","initial","opacity","animate","exit","App","basename","template","exitBeforeEnter","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","rootReducer","combineReducers","firebaseReducer","store","createStore","rrfProps","config","userProfile","dispatch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.634a74b0.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCWrxnEZBOOjmmzGU3Px6cTTbgThrsXh4s\",\r\n    authDomain: \"avan0x-website.firebaseapp.com\",\r\n    databaseURL: \"https://avan0x-website-default-rtdb.firebaseio.com\",\r\n    projectId: \"avan0x-website\",\r\n    storageBucket: \"avan0x-website.appspot.com\",\r\n    messagingSenderId: \"385727573750\",\r\n    appId: \"1:385727573750:web:84d2007e80ddf6bd5d46d7\",\r\n    measurementId: \"G-FJ78ZHF950\"\r\n};\r\n\r\nexport default firebaseConfig;","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport React from 'react'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { faCheckCircle, faExclamationCircle, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport styled from '@emotion/styled';\r\n\r\n\r\nconst AlertBox = styled.div`\r\n    width: fit-content;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n    max-width: max(500px, 90vw);\r\n    background-color: var(--header-footer-color);\r\n    color: var(--font-color);\r\n`;\r\n\r\nconst Button = styled.button`\r\n    margin-left: 20px;\r\n    border: none;\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    color: var(--font-color);\r\n`;\r\n\r\nconst Message = styled.span`\r\n    flex: 2;\r\n    margin-left: 10px;\r\n`;\r\n\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nconst AlertTemplate = ({ message, options, style, close }: any): JSX.Element => {\r\n    return (\r\n        <AlertBox style={{ ...style }}>\r\n            {/* {options.type === 'info' && <FontAwesomeIcon icon={faInfoCircle} color={'#ddcc35'} />} */} {/* //? default value */}\r\n            {options.type === 'success' && <FontAwesomeIcon icon={faCheckCircle} color={'#43b581'} />}\r\n            {options.type === 'error' && <FontAwesomeIcon icon={faExclamationCircle} color={'#eb4034'} />}\r\n            <Message>{message}</Message>\r\n            <Button onClick={close}>\r\n                <FontAwesomeIcon icon={faTimes} />\r\n            </Button>\r\n        </AlertBox>\r\n    )\r\n};\r\n\r\nexport default AlertTemplate;","import React from 'react';\r\n\r\nimport ILang from './ILang';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../firebase/store';\r\nimport { isLoaded } from 'react-redux-firebase';\r\n\r\ntype PropsType = {\r\n    name?: string;\r\n    content?: ILang | string;\r\n}\r\n\r\nexport const LangString = (name: string): string => {\r\n    const langs = useSelector((state: RootState) => state.firebase.data.langs)\r\n    if (langs && langs[name]) {\r\n        return LangStringFromILang(langs[name]);\r\n    } else {\r\n        if (isLoaded(langs)) {\r\n            console.error(\"`\" + name + \"` is missing from langs\");\r\n\r\n            return name;\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n}\r\n\r\nexport const LangStringFromILang = (content: ILang | string | undefined): string => {\r\n    const language = \"fr\";\r\n\r\n    if (typeof content === \"string\")\r\n        return content;\r\n    else if (content)\r\n        return content[language] || content.en || content.fr;\r\n    else\r\n        return \"\";\r\n}\r\n\r\nconst Lang = ({ name, content }: PropsType): JSX.Element => {\r\n    if (content) {\r\n        return <>{LangStringFromILang(content)}</>\r\n    } else if (name) {\r\n        return <>{LangString(name)}</>\r\n    } else {\r\n        return <></>;\r\n    }\r\n}\r\n\r\n\r\nexport default Lang;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { css, keyframes } from '@emotion/react';\r\n\r\nconst InfiniteRotate = keyframes`\r\n    from {\r\n        -webkit-transform: rotate(0deg);\r\n        -o-transform: rotate(0deg);\r\n        transform: rotate(0deg);\r\n    }\r\n    to {\r\n        -webkit-transform: rotate(360deg);\r\n        -o-transform: rotate(360deg);\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\n\r\n\r\n\r\nconst StyledFrontContainer = styled.div<{ allowClick: boolean }>`\r\n    background-color: #3333337D;\r\n    position: fixed;\r\n    top:0;\r\n    left:0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    margin: 0 !important;\r\n    overflow: hidden;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    ${props => !props.allowClick &&\r\n        css`\r\n            z-index: 10000;\r\n        `\r\n    }\r\n\r\n    & > h1 {\r\n        color: var(--font-color);\r\n        margin: 4px;\r\n    }\r\n\r\n    & > p {\r\n        color: var(--font-color);\r\n        margin: 4px;\r\n        opacity: .8;\r\n    }\r\n`;\r\n\r\nconst LoadImage = styled.img<{ spin: boolean }>`\r\n    height: 8rem;\r\n    position: relative;\r\n    top: -8px;\r\n    border-radius: 50%;\r\n    float: right;\r\n    border: 1px solid var(--header-font-color);\r\n    transform: rotate(0);\r\n    transition: .5s;\r\n    color: white;\r\n    ${props => props.spin &&\r\n        css`\r\n            animation: ${InfiniteRotate} 2s linear infinite;\r\n        `\r\n    }\r\n`;\r\n\r\ntype PropsType = {\r\n    title?: string;\r\n    subtitle?: string;\r\n    allowClick?: boolean;\r\n    noSpinning?: boolean;\r\n}\r\n\r\nconst Loading = ({ title, subtitle, allowClick, noSpinning }: PropsType): JSX.Element => {\r\n    return (\r\n        <StyledFrontContainer allowClick={!!allowClick}>\r\n            <LoadImage\r\n                src=\"https://avatars3.githubusercontent.com/u/27494805\"\r\n                title=\"github.com/AvaN0x\"\r\n                alt=\"github.com/AvaN0x\"\r\n                spin={!noSpinning}\r\n            />\r\n            {title && <h1>{title}</h1>}\r\n            {subtitle && <p>{subtitle}</p>}\r\n        </StyledFrontContainer>\r\n    );\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faHome, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { css } from '@emotion/react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n    toggleMenu: (value: boolean) => void;\r\n    children?: React.ReactNode;\r\n}\r\n\r\nconst NavHeader = ({ children, toggleMenu }: PropsType): JSX.Element => {\r\n    const [navState, setNavState] = React.useState<boolean>(false);\r\n\r\n    const handleToggleMenu = () => {\r\n        toggleMenu(!navState);\r\n        setNavState(!navState);\r\n    }\r\n\r\n    return (\r\n        <NavContainer>\r\n            <LeftItemContainer>\r\n                <NavBarToggle isOpen={navState} onClick={handleToggleMenu} />\r\n                <NavLink to=\"/\"><FontAwesomeIcon icon={faHome} /></NavLink>\r\n                {children}\r\n            </LeftItemContainer>\r\n\r\n            <RightItemContainer>\r\n                <a href=\"https://github.com/AvaN0x\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <GitImage\r\n                        src=\"https://avatars3.githubusercontent.com/u/27494805\" title=\"github.com/AvaN0x\" alt=\"github.com/AvaN0x\" />\r\n                </a>\r\n            </RightItemContainer>\r\n        </NavContainer>\r\n    );\r\n}\r\n\r\n\r\nconst NavContainer = styled.div`\r\n    width: 100vw;\r\n    position: fixed;\r\n    top: 0;\r\n    box-sizing: border-box;\r\n    height: 3rem;\r\n    background: var(--header-footer-color);\r\n    padding: 0 5px;\r\n    display: flex;\r\n    z-index: 1000;\r\n`;\r\n\r\nconst NavItemContainer = styled.div`\r\n    display: flex;\r\n\r\n    & > a {\r\n        cursor: pointer;\r\n        position: relative;\r\n        font-size: 1.2rem;\r\n        line-height: calc(3rem - 2 * .7rem);\r\n        color: var(--header-font-color);\r\n        text-decoration: none;\r\n        padding: .7rem 1rem;\r\n        transition: .5s;\r\n\r\n        & > svg {\r\n            transition: .5s;\r\n            font-size: 1.6rem;\r\n        }\r\n\r\n        ${!isMobile && css`\r\n            &:hover {\r\n                color: var(--main-color);\r\n\r\n                & > svg {\r\n                    transform: rotate(5deg) scale(1.1);\r\n                }\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\nconst LeftItemContainer = styled(NavItemContainer)`\r\n    flex-grow: 1;\r\n`;\r\n\r\nconst RightItemContainer = styled(NavItemContainer)`\r\n`;\r\n\r\nconst ToggleLink = styled.a<{ isOpen?: boolean }>`\r\n    width: 1.2rem;\r\n\r\n    ${props => props.isOpen && css`\r\n        & svg {\r\n            transform: rotate(90deg);\r\n            color: var(--main-color);\r\n        }\r\n\r\n        ${!isMobile && css`\r\n            &:hover svg {\r\n                transform: rotate(80deg) scale(1.1) !important;\r\n            }\r\n        `}\r\n    `}\r\n`;\r\n\r\nconst GitImage = styled.img`\r\n    height: 2.4rem;\r\n    position: relative;\r\n    top: -8px;\r\n    border-radius: 50%;\r\n    float: right;\r\n    border: 1px solid var(--header-font-color);\r\n    transform: rotate(0);\r\n    transition: .5s;\r\n\r\n    &:hover {\r\n        transform: rotate(360deg);\r\n        border: 1px solid var(--main-color);\r\n        border-radius: 30%\r\n    }\r\n`;\r\n\r\nconst NavBarToggle = ({ isOpen, onClick }: { isOpen?: boolean; onClick?: (event: React.SyntheticEvent) => void; }) => {\r\n    return (\r\n        <ToggleLink isOpen={isOpen} onClick={onClick}>\r\n            <FontAwesomeIcon icon={isOpen ? faTimes : faBars} />\r\n        </ToggleLink>\r\n    );\r\n}\r\n\r\n\r\nexport default NavHeader;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faDiscord, faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { faPortrait } from '@fortawesome/free-solid-svg-icons';\r\nimport { css } from '@emotion/react';\r\nimport Lang from '../../components/Lang/Lang';\r\n\r\nconst MenuContainer = styled.div<{ isOpen: boolean }>`\r\n    position: fixed;\r\n    top: 3rem;\r\n    height: calc(100vh - 3rem);\r\n    background-color: var(--nav-menu-color);\r\n    overflow-y: auto;\r\n    box-shadow: 0 3px 5px black;\r\n    display: flex;\r\n    flex-direction: column;\r\n    z-index: 1001;\r\n    transition: .5s;\r\n\r\n    ${props => !isMobile ?\r\n        css`\r\n            left: ${props.isOpen ? \"0\" : \"-300px\"};\r\n            width: 300px;\r\n        `\r\n        :\r\n        css`\r\n            left: ${props.isOpen ? \"0\" : \"-100%\"};\r\n            width: 100%;\r\n        `\r\n    }\r\n`;\r\n\r\nconst MenuSection = styled.div`\r\n    border-bottom: 2px solid var(--main-transparent-color);\r\n    font-size: 1.1rem;\r\n    text-align: left;\r\n    padding: 2px;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    & > h1 {\r\n        margin: 10px 0;\r\n        padding: 0;\r\n        text-align: center;\r\n        font-size: 1.2rem;\r\n        font-weight: normal;\r\n        text-transform: uppercase\r\n    }\r\n\r\n    & > a {\r\n        color: #fff;\r\n        text-decoration: none;\r\n        padding: 5px;\r\n        padding-left: 2.3rem;\r\n        font-size: 1.1rem;\r\n        transition: .5s;\r\n\r\n        & > svg {\r\n            position: absolute;\r\n            left: 15px;\r\n            transform: translateY(10%);\r\n            transition: .5s;\r\n        }\r\n\r\n        ${!isMobile && css`\r\n            &:hover {\r\n                color: var(--main-color);\r\n                padding-left: calc(2.3rem + 5px);\r\n\r\n                & > svg {\r\n                    color: var(--main-color);\r\n                    left: 20px;\r\n                }\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\n\r\ntype PropsType = {\r\n    isOpen: boolean;\r\n    children?: React.ReactNode;\r\n}\r\n\r\nconst NavMenu = ({ isOpen, children }: PropsType): JSX.Element => {\r\n    return (\r\n        <MenuContainer isOpen={isOpen}>\r\n            {children &&\r\n                <MenuSection>\r\n                    <h1><Lang name={\"on_this_page\"} /></h1>\r\n                    {children}\r\n                </MenuSection>\r\n            }\r\n            <MenuSection>\r\n                <h1><Lang name={\"about\"} /></h1>\r\n                <a href=\"https://github.com/AvaN0x\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <FontAwesomeIcon icon={faGithub} />GitHub\r\n                </a>\r\n                <NavLink to=\"/discord\">\r\n                    <FontAwesomeIcon icon={faDiscord} />Discord\r\n                </NavLink>\r\n                <NavLink to=\"/\">\r\n                    <FontAwesomeIcon icon={faPortrait} />Portfolio\r\n                </NavLink>\r\n            </MenuSection>\r\n\r\n\r\n        </MenuContainer>\r\n    );\r\n}\r\n\r\nexport default NavMenu;","import React from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nimport NavHeader from './NavHeader';\r\nimport NavMenu from './NavMenu';\r\n\r\ntype PropsType = {\r\n    children?: React.ReactNode;\r\n}\r\n\r\nconst NavBar = ({ children }: PropsType): JSX.Element => {\r\n    const [navState, setNavState] = React.useState<boolean>(false);\r\n\r\n    const childrenInMenu: boolean = React.Children.count(children) > 4 || isMobile;\r\n\r\n    return (\r\n        <>\r\n            <NavHeader toggleMenu={setNavState}>\r\n                {!childrenInMenu &&\r\n                    children\r\n                }\r\n            </NavHeader>\r\n            <NavMenu isOpen={navState}>\r\n                {childrenInMenu &&\r\n                    children\r\n                }\r\n            </NavMenu>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport { ViewContainer } from '../../App';\r\nimport { LangString } from '../../components/Lang/Lang';\r\nimport Loading from '../../components/Loading';\r\nimport NavBar from '../../features/NavBar';\r\n\r\nconst NotFound = (): JSX.Element => {\r\n    return (\r\n        <ViewContainer>\r\n            <NavBar />\r\n            <Loading title={LangString(\"error_not_found_title\")} subtitle={LangString(\"error_not_found_subtitle\")} allowClick noSpinning />\r\n        </ViewContainer>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nconst ColoredSectionComponent = styled.section`\r\n    background-color: var(--bar-color);\r\n    margin: 0;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n\r\n    &:not(:first-of-type) {\r\n        margin-top: ${isMobile ? 4 : 6}rem;\r\n    }\r\n\r\n    & > h1 {\r\n        text-align: center;\r\n        color: var(--font-color);\r\n        font-size: 4rem;\r\n        margin: 0;\r\n        border-bottom: none;\r\n        font-variant: small-caps;\r\n    }\r\n`;\r\n\r\ntype PropsType = {\r\n    title: string;\r\n    id?: string;\r\n}\r\n\r\nconst ColoredSection = ({ title, id }: PropsType): JSX.Element => {\r\n    return (\r\n        <ColoredSectionComponent id={id}>\r\n            <h1>{title}</h1>\r\n        </ColoredSectionComponent>\r\n    );\r\n}\r\n\r\nexport default ColoredSection;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { keyframes } from '@emotion/react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDoubleDown } from '@fortawesome/free-solid-svg-icons';\r\nimport { HashLink } from 'react-router-hash-link';\r\n\r\nconst Scroll = keyframes`\r\n    0% {\r\n        transform: translateY(0);\r\n        opacity: 1\r\n    }\r\n\r\n    80% {\r\n        transform: translateY(15px);\r\n        opacity: .5\r\n    }\r\n\r\n    100% {\r\n        transform: translateY(0);\r\n        opacity: 1\r\n    }\r\n`;\r\n\r\nconst CoverContainer = styled.div<{ url: string }>`\r\n    width: 100%;\r\n    height: 100vh;\r\n    position: relative;\r\n    background-image: url(${props => props.url});\r\n    background-size: cover;\r\n    background-position: center;\r\n`;\r\n\r\nconst CoverContentContainer = styled.div<{ actualHeight: number }>`\r\n    position: relative;\r\n    background-color: var(--main-transparent-color);\r\n    top: calc(50% ${props => \" - \" + props.actualHeight / 2 + \"px\"});\r\n    width: 100%;\r\n    text-align: center;\r\n    margin: auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    position: sticky;\r\n\r\n    & * {\r\n        margin: 0;\r\n        font-size: 1.5rem;\r\n        color: var(--font-color);\r\n    }\r\n\r\n    & h1 {\r\n        font-size: 2rem;\r\n    }\r\n`;\r\n\r\nconst AnimatedScroller = styled(HashLink)`\r\n    padding-bottom: 1rem;\r\n    animation: ${Scroll} 1.8s linear infinite;\r\n\r\n    & > svg {\r\n        font-size: 1.8rem;\r\n    }\r\n`;\r\n\r\ntype PropsType = {\r\n    url: string;\r\n    children?: React.ReactNode;\r\n}\r\n\r\n/**\r\n * Create a cover component with a background image\r\n * @param {string} url url of the image\r\n * @param {React.ReactNode} children content of the cover\r\n */\r\nconst Cover = ({ url, children }: PropsType): JSX.Element => {\r\n    const [contentHeight, setContentHeight] = React.useState(0);\r\n    const contentRef = React.useRef<HTMLDivElement>(null);\r\n\r\n    React.useEffect(() => {\r\n        setContentHeight(contentRef.current?.clientHeight || 0);\r\n    }, [contentRef]);\r\n\r\n    return (\r\n        <>\r\n            <CoverContainer url={url}>\r\n                <CoverContentContainer ref={contentRef} actualHeight={contentHeight}>\r\n                    {children}\r\n                    <AnimatedScroller smooth to=\"#scroll\">\r\n                        <FontAwesomeIcon icon={faAngleDoubleDown} />\r\n                    </AnimatedScroller>\r\n                </CoverContentContainer>\r\n            </CoverContainer>\r\n            <span id=\"scroll\"></span>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Cover;","import styled from '@emotion/styled';\r\n\r\nexport const Section = styled.section`\r\n    max-width: 1100px;\r\n    margin: 0 auto;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n    text-align: justify;\r\n`;\r\n\r\nexport const SegmentTitle = styled.h1`\r\n    border: none;\r\n    border-bottom: 2px solid var(--secondary-color);\r\n    font-size: 1.2rem;\r\n    padding: 0 4px;\r\n    margin: 0;\r\n    text-align: left;\r\n    display: inline-block;\r\n    color: var(--main-color);\r\n`;\r\n\r\nexport const Segment = styled.div`\r\n    transition: .5s;\r\n    border-left: 2px solid var(--secondary-color);\r\n    box-sizing: border-box;\r\n    padding-bottom: .1rem;\r\n    margin-bottom: 2rem;\r\n\r\n    & > ul {\r\n        list-style-type: none;\r\n        margin: 0;\r\n        padding: 8px;\r\n\r\n        & > li {\r\n            padding: 4px 0;\r\n        }\r\n    }\r\n\r\n    & > h1 {\r\n        border: none;\r\n        text-align: left;\r\n        font-size: 1rem;\r\n        margin: 0;\r\n        padding: 8px 4px 0 4px;\r\n        color: var(--main-color);\r\n    }\r\n`;\r\n\r\nexport const EducationContainer = styled.div`\r\n    margin: 0;\r\n    padding: 4px;\r\n\r\n    &>h1 {\r\n        border: none;\r\n        text-align: left;\r\n        font-size: 1rem;\r\n        margin: 0;\r\n        padding: 0;\r\n        color: var(--secondary-color);\r\n    }\r\n\r\n    &>p {\r\n        text-indent: 20px;\r\n        margin: 2px;\r\n    }\r\n`;\r\n\r\nexport const ExperienceContainer = styled(EducationContainer);","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport IPersonal from './IPersonal';\r\nimport { Segment, SegmentTitle } from '../../../../components/styledComponents';\r\nimport { AboutItem } from '../../About';\r\nimport moment from 'moment';\r\nimport Lang, { LangString } from '../../../../components/Lang/Lang';\r\n\r\nconst Label = styled.b`\r\n    letter-spacing: 1px;\r\n`;\r\n\r\ntype PropsType = {\r\n    personal: IPersonal;\r\n}\r\n\r\nconst Personal = ({ personal }: PropsType): JSX.Element => {\r\n    const yearOld = new Date(new Date().getTime() - moment(personal.dateofbirth, \"YYYY-MM-DD\").toDate().getTime()).getFullYear() - 1970;\r\n    const daysSinceBirthday = Math.floor((new Date().getTime() - new Date(2001 + yearOld, 9, 9).getTime()) / 86400000);\r\n    const date_format: string = LangString(\"date_format\");\r\n\r\n    return (\r\n        <AboutItem>\r\n            <SegmentTitle><Lang name=\"about_personal_informations\" /></SegmentTitle>\r\n            <Segment>\r\n                <ul>\r\n                    <li><Label><Lang name=\"about_lastname\" /></Label> : <span>{personal.lastname}</span></li>\r\n                    <li><Label><Lang name=\"about_firstname\" /></Label> : <span>{personal.firstname}</span></li>\r\n                    {yearOld && <li><Label><Lang name=\"about_age\" /></Label> : <span title={LangString(\"about_age_and\") + \" \" + daysSinceBirthday + \" \" + LangString(\"about_age_days\")}>{yearOld}</span></li>}\r\n                    {date_format.length > 0 && date_format !== \"date_format\" &&\r\n                        <li>\r\n                            <Label><Lang name=\"about_date_of_birth\" /></Label> : <span>\r\n                                {moment(personal.dateofbirth, \"YYYY-MM-DD\").format(date_format)}\r\n                            </span>\r\n                        </li>\r\n                    }\r\n                    <li><Label><Lang name=\"about_location\" /></Label> : <span><Lang content={personal.place} /></span></li>\r\n                    {personal.license?.car?.ownLicense &&\r\n                        <li><Lang name=\"about_car_license\" />{personal.license.car?.ownVehicle && <> + <Lang name=\"about_license_vehicle\" /></>}</li>\r\n                    }\r\n                </ul>\r\n            </Segment>\r\n        </AboutItem>\r\n    );\r\n}\r\n\r\nexport default Personal;","import React from 'react';\r\n\r\nimport { EducationContainer, Segment, SegmentTitle } from '../../../../components/styledComponents';\r\n\r\nimport IExperience from './IExperience';\r\nimport { AboutItem } from '../../About';\r\nimport Lang from '../../../../components/Lang/Lang';\r\n\r\ntype PropsType = {\r\n    experiences: IExperience[];\r\n}\r\n\r\nconst Educations = ({ experiences }: PropsType): JSX.Element => {\r\n    return (\r\n        <AboutItem>\r\n            <SegmentTitle><Lang name=\"about_experiences\" /></SegmentTitle>\r\n            <Segment>\r\n                {experiences.map((experience, index) => (\r\n                    <EducationContainer key={index}>\r\n                        <h1><Lang content={experience.label} /></h1>\r\n                        {experience.subtitle && <p><i><Lang content={experience.subtitle} /></i></p>}\r\n                        <p><Lang content={experience.location} /></p>\r\n                        <p><Lang content={experience.date.start} /> – <Lang content={experience.date.end} /></p>\r\n                    </EducationContainer>\r\n                ))}\r\n            </Segment>\r\n        </AboutItem>\r\n    );\r\n}\r\n\r\nexport default Educations;","import React from 'react';\r\n\r\nimport { EducationContainer, Segment, SegmentTitle } from '../../../../components/styledComponents';\r\n\r\nimport IEducation from './IEducation';\r\nimport { AboutItem } from '../../About';\r\nimport Lang from '../../../../components/Lang/Lang';\r\n\r\ntype PropsType = {\r\n    educations: IEducation[];\r\n}\r\n\r\nconst Educations = ({ educations }: PropsType): JSX.Element => {\r\n    return (\r\n        <AboutItem>\r\n            <SegmentTitle><Lang name=\"about_diplomas\" /></SegmentTitle>\r\n            <Segment>\r\n                {educations.map((education, index) => (\r\n                    <EducationContainer key={index}>\r\n                        <h1><Lang content={education.label} /></h1>\r\n                        {education.subtitle && <p><i><Lang content={education.subtitle} /></i></p>}\r\n                        <p><Lang content={education.location} /></p>\r\n                        <p>{education.date.start} – {education.date.end}</p>\r\n                    </EducationContainer>\r\n                ))}\r\n            </Segment>\r\n        </AboutItem>\r\n    );\r\n}\r\n\r\nexport default Educations;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Container = styled.div`\r\n    height: 10px;\r\n    width: 100px;\r\n    border-radius: 5px;\r\n    display: inline-block;\r\n    margin: 5px;\r\n    position: relative;\r\n    top: 5px;\r\n    border: 1px solid #ffffff60;\r\n`;\r\n\r\nconst Fill = styled.div<{ pourcent: number }>`\r\n    width: ${props => props.pourcent}%;\r\n    height: 100%;\r\n    background-color: var(--main-color);\r\n    border-radius: 5px;\r\n    animation: barfill 2s ease-in-out;\r\n`;\r\n\r\nconst LoadBar = ({ pourcent }: { pourcent: number }): JSX.Element => {\r\n    return (\r\n        <Container>\r\n            <Fill pourcent={pourcent}></Fill>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default LoadBar;","import React from 'react';\r\n\r\nimport { Segment, SegmentTitle } from '../../../../components/styledComponents';\r\nimport LoadBar from '../../../../components/LoadBar';\r\n\r\nimport ILanguage from './ILanguage';\r\nimport { AboutItem } from '../../About';\r\nimport Lang from '../../../../components/Lang/Lang';\r\n\r\ntype PropsType = {\r\n    languages: ILanguage[];\r\n}\r\n\r\nconst Languages = ({ languages }: PropsType): JSX.Element => {\r\n    return (\r\n        <AboutItem>\r\n            <SegmentTitle><Lang name=\"about_languages\" /></SegmentTitle>\r\n            <Segment>\r\n                <ul>\r\n                    {languages.map((language, index) => (\r\n                        <li key={index}><Lang content={language.label} /><LoadBar pourcent={language.pourcent} /></li>\r\n                    ))}\r\n                </ul>\r\n            </Segment>\r\n        </AboutItem>\r\n    );\r\n}\r\n\r\nexport default Languages;","import React from 'react';\r\nimport ILang from '../../../../components/Lang/ILang';\r\nimport Lang from '../../../../components/Lang/Lang';\r\n\r\nimport { Segment, SegmentTitle } from '../../../../components/styledComponents';\r\n\r\nimport { AboutItem } from '../../About';\r\n\r\ntype PropsType = {\r\n    qualities: (ILang | string)[];\r\n}\r\n\r\nconst Qualities = ({ qualities }: PropsType): JSX.Element => {\r\n    return (\r\n        <AboutItem>\r\n            <SegmentTitle><Lang name=\"about_qualities\" /></SegmentTitle>\r\n            <Segment>\r\n                <ul>\r\n                    {qualities.map((quality, index) => (\r\n                        <li key={index}><Lang content={quality} /></li>\r\n                    ))}\r\n                </ul>\r\n            </Segment>\r\n        </AboutItem>\r\n    );\r\n}\r\n\r\nexport default Qualities;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/react';\r\nimport { useSelector } from 'react-redux';\r\nimport { isLoaded } from 'react-redux-firebase';\r\nimport { RootState } from '../../firebase/store';\r\nimport Lang, { LangStringFromILang } from '../Lang/Lang';\r\n\r\nconst LanguageImg = styled.img`\r\n    height: 1rem;\r\n    vertical-align: middle;\r\n    margin: 0 4px 0 0;\r\n    padding: 4px;\r\n    border-radius: 8px;\r\n    background-color: #00000060;\r\n    position: relative;\r\n    top: -2px;\r\n    transition: background-color .5s;\r\n`;\r\n\r\nconst LanguageComponent = ({ name }: { name: string }): JSX.Element => {\r\n    const icons = useSelector((state: RootState) => state.firebase.data.icons)\r\n\r\n    if (icons && icons[name]) {\r\n        return (\r\n            <span title={LangStringFromILang(icons[name].title) || \"\"}>\r\n                {icons[name].icons?.map((icon, techIndex) => (\r\n                    <LanguageLink key={techIndex} target=\"_blank\" rel=\"noreferrer\" href={icon.href}>\r\n                        <LanguageImg src={icon.src} />\r\n                    </LanguageLink>\r\n                ))}\r\n\r\n                <Lang content={icons[name].label} />\r\n            </span>\r\n        );\r\n    }\r\n    else {\r\n        // only print error if icons have loaded\r\n        if (isLoaded(icons)) {\r\n            console.error(\"`\" + name + \"` is missing from icons\");\r\n        }\r\n\r\n        return (\r\n            <span>\r\n                {name}\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nconst LanguageLink = styled.a<{ href?: string }>`\r\n    ${props => props.href && css`\r\n        &>img:hover {\r\n            background-color: #ffffff20;\r\n        }\r\n    `}\r\n`;\r\n\r\nexport default LanguageComponent;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { Segment, SegmentTitle } from '../../../../components/styledComponents';\r\n\r\nimport { AboutItem } from '../../About';\r\nimport ITechs from './ITechs';\r\nimport LanguageComponent from '../../../../components/LanguagesIcons/LanguageComponent';\r\nimport Lang from '../../../../components/Lang/Lang';\r\n\r\nconst LanguageList = styled.li`\r\n    &>span:not(:last-of-type):after {\r\n        content: \"–\";\r\n        margin: 0 6px;\r\n    }\r\n`;\r\n\r\ntype PropsType = {\r\n    techs: ITechs;\r\n}\r\n\r\nconst Techs = ({ techs }: PropsType): JSX.Element => {\r\n    return (\r\n        <AboutItem>\r\n            <SegmentTitle><Lang name=\"about_techs\" /></SegmentTitle>\r\n            <Segment>\r\n                <ul>\r\n                    {techs.others.map((techList, index) => (\r\n                        <LanguageList key={index}>\r\n                            {techList.map((tech, techIndex) => (\r\n                                <LanguageComponent name={tech} key={techIndex} />\r\n                            ))}\r\n                        </LanguageList>\r\n                    ))}\r\n                </ul>\r\n                <h1><Lang name=\"about_languages\" /></h1>\r\n                <ul>\r\n                    {techs.codingLanguages.map((techList, index) => (\r\n                        <LanguageList key={index}>\r\n                            {techList.map((tech, techIndex) => (\r\n                                <LanguageComponent name={tech} key={techIndex} />\r\n                            ))}\r\n                        </LanguageList>\r\n                    ))}\r\n                </ul>\r\n            </Segment>\r\n        </AboutItem>\r\n    );\r\n}\r\n\r\nexport default Techs;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nimport { FirebaseDatabaseNode } from '@react-firebase/database';\r\nimport { Section } from '../../components/styledComponents';\r\n\r\nimport IAbout from './About/IAbout';\r\nimport Personal from './About/Personal/Personal';\r\nimport Experiences from './About/Experiences/Experiences';\r\nimport Educations from './About/Educations/Educations';\r\nimport Languages from './About/Languages/Languages';\r\nimport Qualities from './About/Qualities/Qualities';\r\nimport Techs from './About/Techs/Techs';\r\n\r\nconst AboutContainerStyle = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const AboutItem = styled.div`\r\n    width: ${isMobile ? \"100%\" : \"clamp(500px, 500px, 100%)\"};\r\n`;\r\n\r\nconst AboutContainer = ({ about }: { about: IAbout }) => {\r\n    return (\r\n        <AboutContainerStyle>\r\n            <Personal personal={about.personal} />\r\n            <Educations educations={about.educations} />\r\n            <Experiences experiences={about.experiences} />\r\n            <Techs techs={about.techs} />\r\n            <Languages languages={about.languages} />\r\n            <Qualities qualities={about.qualities} />\r\n        </AboutContainerStyle>\r\n    );\r\n}\r\n\r\nconst About = (): JSX.Element => {\r\n    return (\r\n        <Section>\r\n            <FirebaseDatabaseNode\r\n                path=\"/about/\"\r\n                orderByKey\r\n            >\r\n                {data => !data.isLoading && data.value &&\r\n                    <AboutContainer about={data.value} />\r\n                }\r\n            </FirebaseDatabaseNode>\r\n        </Section>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Container = styled.div`\r\n    width: min(432px, 90vw);\r\n    padding: 16px;\r\n    margin: 1rem auto;\r\n    border-radius: 4px;\r\n    background-color: #2f3136;\r\n    box-sizing: border-box;\r\n    overflow: hidden;\r\n    max-width: 96vw;\r\n\r\n    & > p {\r\n        color: #b9bbbe;\r\n        text-overflow: ellipsis;\r\n        text-align: left;\r\n        cursor: default;\r\n        font-size: 13px;\r\n\r\n        &:first-of-type {\r\n            text-transform: uppercase;\r\n            margin-bottom: 12px;\r\n            overflow: hidden;\r\n            font-weight: 700;\r\n            font-size: 12px;\r\n            margin-top: 0;\r\n        }\r\n    }\r\n\r\n    & a {\r\n        color: #fff;\r\n        cursor: pointer;\r\n        text-overflow: ellipsis;\r\n        font-weight: 600;\r\n        transition: .2s;\r\n    }\r\n`;\r\n\r\nconst DetailsContainer = styled.div`\r\n    max-width: 220px;\r\n    position: relative;\r\n    display: inline-block;\r\n    box-sizing: border-box;\r\n\r\n    & > p {\r\n        color: #b9bbbe;\r\n        text-overflow: ellipsis;\r\n        cursor: default;\r\n        font-size: 13px;\r\n        margin: 4px 0;\r\n    }\r\n`;\r\n\r\nconst JoinButton = styled(NavLink)`\r\n    background-color: #43b581;\r\n    text-decoration: none;\r\n    float: right;\r\n    margin: 5px 0 5px 10px;\r\n    max-width: 86;\r\n    line-height: 40px;\r\n    padding: 0 20px;\r\n    position: relative;\r\n    border-radius: 3px;\r\n    font-size: 14px;\r\n\r\n    &:hover {\r\n        background-color: #3ca374;\r\n    }\r\n`;\r\n\r\nconst DiscordLogo = styled.img`\r\n    border-radius: 15px;\r\n    width: 50px;\r\n    height: 50px;\r\n    position: relative;\r\n    float: left;\r\n    margin-right: 16px;\r\n`;\r\n\r\nconst DiscordBubble = styled.i`\r\n    width: 8px;\r\n    height: 8px;\r\n    background-color: #43b581;\r\n    border-radius: 50%;\r\n    display: inline-block;\r\n`;\r\n\r\ninterface IDiscordInvite {\r\n    name: string;\r\n    onlines: number;\r\n}\r\n\r\nconst DiscordInvite = (): JSX.Element => {\r\n    const [discord, setDiscord] = React.useState<IDiscordInvite | null>(null);\r\n\r\n    React.useEffect(() => {\r\n        fetch(\"https://discordapp.com/api/guilds/673139614927683594/widget.json\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setDiscord({\r\n                        name: result.name,\r\n                        onlines: result.presence_count\r\n                    });\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            <p>Tu as reçu une invitation à rejoindre un serveur par AvaN0x#6348</p>\r\n            <DiscordLogo src=\"https://avatars3.githubusercontent.com/u/27494805\" />\r\n            <DetailsContainer>\r\n                <NavLink to=\"/discord\">\r\n                    {discord?.name || \"\"}\r\n                </NavLink>\r\n                <p><DiscordBubble /> <strong>{discord?.onlines || -1}</strong> en ligne</p>\r\n            </DetailsContainer>\r\n            <JoinButton to=\"/discord\">\r\n                Rejoindre\r\n            </JoinButton>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default DiscordInvite;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nimport { useAlert } from 'react-alert'\r\n\r\nimport { Section } from '../../components/styledComponents';\r\nimport { FirebaseDatabaseNode } from '@react-firebase/database';\r\nimport DiscordInvite from '../../components/DiscordInvite';\r\nimport Lang, { LangString } from '../../components/Lang/Lang';\r\n\r\nconst ContactContainerStyle = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n\r\n    & > label {\r\n        width: ${isMobile ? \"90vw\" : \"600px\"};\r\n        margin: 8px 0 4px 0;\r\n    }\r\n\r\n    & > textarea,\r\n    & > input[type = text] {\r\n        width: ${isMobile ? \"90vw\" : \"600px\"};\r\n        min-height: 1.2rem;\r\n    }\r\n\r\n    & > button {\r\n        position: relative;\r\n        text-align: center;\r\n        padding: 10px;\r\n        margin: 10px;\r\n        border-radius: 10px;\r\n        border: 1px solid var(--font-color);\r\n        background: var(--main-transparent-color);\r\n        color: var(--font-color);\r\n        cursor: pointer;\r\n        transition: .5s;\r\n        font-size: 1em;\r\n\r\n        &:hover {\r\n            border: 1px solid var(--main-color);\r\n            background: var(--font-color);\r\n            color: var(--main-color);\r\n        }\r\n    }\r\n`;\r\n\r\nconst ContactContainer = ({ mail }: { mail: string }): JSX.Element => {\r\n    const alert = useAlert();\r\n\r\n    const contact_error_name: string = LangString(\"contact_error_name\");\r\n    const contact_error_message: string = LangString(\"contact_error_message\");\r\n    const contact_success: string = LangString(\"contact_success\");\r\n\r\n    //TODO size max\r\n    const [name, setName] = React.useState(\"\");\r\n    const [content, setContent] = React.useState(\"\");\r\n\r\n    const handleSetNameOnChange = (event: React.ChangeEvent<HTMLInputElement>) => setName(event.target.value);\r\n\r\n    const handleSetContentOnChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => setContent(event.target.value);\r\n\r\n\r\n    const handleOnSubmit = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        event.preventDefault();\r\n        let error = false;\r\n\r\n        if (!name.trim()) {\r\n            alert.error(contact_error_name);\r\n            error = true;\r\n        }\r\n        if (!content.trim()) {\r\n            alert.error(contact_error_message);\r\n            error = true;\r\n        }\r\n\r\n        if (!error) {\r\n            window.open('mailto:' + mail + '?subject=Contact - ' + name.trim() + '&body=' + content.trim());\r\n            alert.success(contact_success)\r\n            setName(\"\");\r\n            setContent(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ContactContainerStyle>\r\n            <label htmlFor=\"name\"><Lang name={\"contact_name\"} />:</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={handleSetNameOnChange}\r\n            />\r\n            <label htmlFor=\"content\"><Lang name={\"contact_message\"} />:</label>\r\n            <textarea\r\n                name=\"content\"\r\n                rows={5}\r\n                value={content}\r\n                onChange={handleSetContentOnChange}\r\n            ></textarea>\r\n            <button onClick={handleOnSubmit}><Lang name={\"contact_button\"} /></button>\r\n        </ContactContainerStyle>\r\n    );\r\n}\r\n\r\n\r\nconst Contact = (): JSX.Element => {\r\n    return (\r\n        <Section>\r\n            <FirebaseDatabaseNode\r\n                path=\"/email/\"\r\n                orderByKey\r\n            >\r\n                {data => !data.isLoading && data.value &&\r\n                    <ContactContainer mail={data.value} />\r\n                }\r\n            </FirebaseDatabaseNode>\r\n            <DiscordInvite />\r\n        </Section>\r\n    );\r\n}\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nimport IProject from './IProject';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronDown, faChevronUp, faExternalLinkAlt, faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport LanguageComponent from '../../../components/LanguagesIcons/LanguageComponent';\r\nimport { faGithub, faYoutube } from '@fortawesome/free-brands-svg-icons';\r\nimport { css } from '@emotion/react';\r\nimport Markdown from 'markdown-to-jsx';\r\nimport Lang, { LangString, LangStringFromILang } from '../../../components/Lang/Lang';\r\n\r\nconst Container = styled.div`\r\n    width: ${isMobile ? \"90vw\" : \"80%\"};\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst ProjectTitle = styled.h1`\r\n    text-align: center;\r\n    padding-bottom: 8px;\r\n    border-bottom: 1px solid var(--font-color);\r\n    margin: 0;\r\n    color: var(--secondary-color);\r\n    cursor: pointer;\r\n    font-size: 1.3rem;\r\n\r\n    &>svg {\r\n        margin-left: 8px;\r\n        color: var(--font-color);\r\n        font-size: .9rem;\r\n        transform: rotate(-0deg);\r\n    }\r\n`;\r\n\r\nconst ContentContainer = styled.div<{ show: boolean }>`\r\n    border: 1px solid var(--font-color);\r\n    border-top: none;\r\n    transition: max-height .5s ease-in-out, padding .5s ease-in-out, overflow .5s ease-in-out;\r\n\r\n    ${props => props.show ?\r\n        css`\r\n            padding: 8px;\r\n            max-height: 1000px;\r\n        `\r\n        :\r\n        css`\r\n            max-height: 0;\r\n            overflow: hidden;\r\n            padding: 0 8px;\r\n            border: none;\r\n        `\r\n    }\r\n\r\n    & p {\r\n        margin: 4px 0;\r\n    }\r\n`\r\n\r\nconst MiscContainer = styled.div`\r\n    border: 1px solid var(--font-color);\r\n    border-top: none;\r\n    padding: 8px;\r\n    margin-bottom: 1rem;\r\n    display: flex;\r\n    ${isMobile && css`\r\n        flex-direction: column;\r\n    `}\r\n`;\r\n\r\nconst LanguagesContainer = styled.div`\r\n    flex-grow: 1;\r\n\r\n    &>span:not(:last-of-type):after {\r\n        content: \"–\";\r\n        margin: 0 6px;\r\n    }\r\n`;\r\n\r\nconst LinksContainer = styled.div`\r\n    margin-right: 8px;\r\n    ${isMobile ?\r\n        css`\r\n            margin-top: 10px;\r\n        `\r\n        :\r\n        css`\r\n            float: right;\r\n        `\r\n    }\r\n\r\n    &>a {\r\n        &:hover>svg {\r\n            color: var(--main-color) !important;\r\n        }\r\n\r\n        &>svg {\r\n            margin-right: 8px;\r\n            font-size: 1.2rem;\r\n            transition: .5s;\r\n\r\n            &.fa-github {\r\n                color: #fff;\r\n            }\r\n\r\n            &.fa-youtube {\r\n                color: #eb4034;\r\n            }\r\n\r\n            &.fa-external-link-alt {\r\n                color: #fff;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst SecondaryTitle = styled.h2`\r\n    color: var(--secondary-color);\r\n    margin: 0;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\nconst List = styled.ul`\r\n    margin-left: 18px;\r\n    margin: 0;\r\n    padding: 0;\r\n    ${isMobile ?\r\n        css`\r\n            list-style-type: \"- \";\r\n            padding-left: 12px;\r\n        `\r\n        :\r\n        css`\r\n            list-style-type: \"\\\\21AA \\\\0020\";\r\n            padding-left: 18px;\r\n        `\r\n    };\r\n\r\n    &>li {\r\n        padding: 2px 0;\r\n    }\r\n`;\r\n\r\nconst ContributorsContainer = styled.div`\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n\r\n    &>svg {\r\n        margin: 0 2px;\r\n    }\r\n`;\r\n\r\ntype PropsType = {\r\n    project: IProject;\r\n}\r\n\r\nconst ProjectCard = ({ project }: PropsType): JSX.Element => {\r\n    const cardRef = React.useRef<HTMLDivElement>(null);\r\n    const [show, setShow] = React.useState<boolean>(false);\r\n\r\n    const handleTitleClick = () => {\r\n        if (!show && cardRef.current)\r\n            window.scrollTo(0, cardRef.current.offsetTop - 200);\r\n\r\n        setShow(!show);\r\n    }\r\n\r\n    return (\r\n        <Container ref={cardRef}>\r\n            <ProjectTitle onClick={handleTitleClick}>\r\n                <Lang content={project.label} /><FontAwesomeIcon icon={show ? faChevronUp : faChevronDown} />\r\n            </ProjectTitle>\r\n            <ContentContainer show={show}>\r\n                {project.objective &&\r\n                    <>\r\n                        <SecondaryTitle><Lang name={\"project_objective\"} /></SecondaryTitle>\r\n                        <p><Markdown>{LangStringFromILang(project.objective)}</Markdown></p>\r\n                    </>\r\n                }\r\n                {project.aimedSkills &&\r\n                    <>\r\n                        <SecondaryTitle><Lang name={\"project_aimed_skills\"} /></SecondaryTitle>\r\n                        <List>\r\n                            {project.aimedSkills.map((skill, index) =>\r\n                                <li key={index}><Markdown>{LangStringFromILang(skill)}</Markdown></li>\r\n                            )}\r\n                        </List>\r\n                    </>\r\n                }\r\n                {project.features &&\r\n                    <>\r\n                        <SecondaryTitle><Lang name={\"project_features\"} /></SecondaryTitle>\r\n                        <List>\r\n                            {project.features.map((skill, index) =>\r\n                                <li key={index}><Markdown>{LangStringFromILang(skill)}</Markdown></li>\r\n                            )}\r\n                        </List>\r\n                    </>\r\n                }\r\n                {project.numberOfContributors && project.numberOfContributors > 0 &&\r\n                    <ContributorsContainer title={project.numberOfContributors + LangString(\"project_number_of_contributors\")}>\r\n                        {Array.from(Array(project.numberOfContributors), (e, i) => {\r\n                            return <FontAwesomeIcon icon={faUser} key={i} />\r\n                        })}\r\n                    </ContributorsContainer>\r\n                }\r\n            </ContentContainer>\r\n            <MiscContainer>\r\n                <LanguagesContainer>\r\n                    {project.techs.map((tech, index) =>\r\n                        <LanguageComponent key={index} name={tech} />\r\n                    )}\r\n                </LanguagesContainer>\r\n                <LinksContainer>\r\n                    {project.links?.site &&\r\n                        <a href={project.links?.site} target=\"_blank\" rel=\"noreferrer\"><FontAwesomeIcon icon={faExternalLinkAlt} /></a>\r\n                    }\r\n                    {project.links?.youtube &&\r\n                        <a href={project.links?.youtube} target=\"_blank\" rel=\"noreferrer\"><FontAwesomeIcon icon={faYoutube} /></a>\r\n                    }\r\n                    {project.links?.github &&\r\n                        <a href={project.links?.github} target=\"_blank\" rel=\"noreferrer\"><FontAwesomeIcon icon={faGithub} /></a>\r\n                    }\r\n                </LinksContainer>\r\n            </MiscContainer>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ProjectCard;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { FirebaseDatabaseNode } from '@react-firebase/database';\r\nimport { Section, Segment, SegmentTitle } from '../../components/styledComponents';\r\n\r\nimport IProjects from './Projects/IProjects';\r\nimport ProjectCard from './Projects/ProjectCard';\r\nimport Lang from '../../components/Lang/Lang';\r\n\r\nconst ProjectsContainerStyle = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst CategoryTitle = styled.h1`\r\n    font-size: 1.5rem;\r\n    color: var(--main-color);\r\n    text-align: center;\r\n    padding-bottom: 8px;\r\n    border-bottom: 1px solid var(--font-color);\r\n\r\n    &:not(:first-of-type) {\r\n        margin-top: 4rem;\r\n    }\r\n`;\r\n\r\nconst ProjectsContainer = ({ projects }: { projects: IProjects }) => {\r\n    return (\r\n        <ProjectsContainerStyle>\r\n            {projects.schoolProjects?.map((school, schoolIndex) =>\r\n                <div key={schoolIndex}>\r\n                    <CategoryTitle><Lang name={\"school_projects\"} /> ({school.label})</CategoryTitle>\r\n                    {school.semesters?.map((semester, semesterIndex) =>\r\n                        <div key={semesterIndex}>\r\n                            <SegmentTitle><Lang name={\"semester\"} /> {semester.number}</SegmentTitle>\r\n                            <Segment>\r\n                                {semester.projects?.map((project, index) =>\r\n                                    <ProjectCard project={project} key={index} />\r\n                                )}\r\n                            </Segment>\r\n                        </div>\r\n                    )}\r\n                    {school.projects?.map((project, index) =>\r\n                        <ProjectCard project={project} key={index} />\r\n                    )}\r\n                </div>\r\n            )}\r\n            {projects.personalProjects &&\r\n                <>\r\n                    <CategoryTitle><Lang name={\"personal_projects\"} /></CategoryTitle>\r\n                    {projects.personalProjects?.map((project, index) =>\r\n                        <ProjectCard project={project} key={index} />\r\n                    )}\r\n                </>\r\n            }\r\n        </ProjectsContainerStyle>\r\n    );\r\n}\r\n\r\nconst Projects = (): JSX.Element => {\r\n    return (\r\n        <Section>\r\n            <FirebaseDatabaseNode\r\n                path=\"/projects/\"\r\n                orderByKey\r\n            >\r\n                {data => !data.isLoading && data.value &&\r\n                    <ProjectsContainer projects={data.value} />\r\n                }\r\n            </FirebaseDatabaseNode>\r\n        </Section>\r\n    );\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport { ViewContainer } from '../../App';\r\n\r\nimport { useFirebaseConnect } from 'react-redux-firebase';\r\n\r\nimport ColoredSection from '../../components/ColoredSection';\r\nimport Cover from '../../components/Cover';\r\nimport NavBar from '../../features/NavBar';\r\nimport { HashLink } from 'react-router-hash-link';\r\n\r\nimport About from '../../features/Portfolio/About';\r\nimport Contact from '../../features/Portfolio/Contact';\r\nimport Projects from '../../features/Portfolio/Projects';\r\n\r\nimport Lang, { LangString } from '../../components/Lang/Lang';\r\n\r\nconst Portfolio = (): JSX.Element => {\r\n    useFirebaseConnect([\r\n        { type: 'value', path: 'icons', queryParams: ['orderByKey'] }\r\n    ])\r\n\r\n    return (\r\n        <ViewContainer>\r\n            <NavBar>\r\n                <HashLink smooth to=\"#about\"><Lang name={\"about\"} /></HashLink>\r\n                <HashLink smooth to=\"#projects\"><Lang name={\"projects\"} /></HashLink>\r\n                <HashLink smooth to=\"#contact\"><Lang name={\"contact\"} /></HashLink>\r\n            </NavBar>\r\n\r\n            <Cover url={\"https://wallpaperaccess.com/full/521099.jpg\"} >\r\n                <p><Lang name={\"portfolio_cover_subtitle\"} /></p>\r\n                <h1>Clément RICATTE</h1>\r\n            </Cover>\r\n\r\n            <ColoredSection title={LangString(\"about\")} id=\"about\" />\r\n            <About />\r\n\r\n            <ColoredSection title={LangString(\"projects\")} id=\"projects\" />\r\n            <Projects />\r\n\r\n            <ColoredSection title={LangString(\"contact\")} id=\"contact\" />\r\n            <Contact />\r\n        </ViewContainer>\r\n    );\r\n}\r\n\r\nexport default Portfolio;","import React from 'react';\r\nimport { ViewContainer } from '../App';\r\nimport { LangString } from '../components/Lang/Lang';\r\n\r\nimport Loading from '../components/Loading';\r\nimport NavBar from '../features/NavBar';\r\n\r\nconst Discord = (): JSX.Element => {\r\n    React.useEffect(() => {\r\n        fetch(\"https://discordapp.com/api/guilds/673139614927683594/widget.json\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    window.location.href = result.instant_invite;\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    return (\r\n        <ViewContainer>\r\n            <NavBar />\r\n            <Loading title={LangString(\"discord_redirection\")} />\r\n        </ViewContainer>\r\n    );\r\n}\r\n\r\nexport default Discord;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/react';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport Lang from '../../components/Lang/Lang';\r\n\r\n\r\nconst FooterContainer = styled.div`\r\n    background-color: var(--header-footer-color);\r\n    color: var(--font-color);\r\n    position: absolute;\r\n    padding: 10px;\r\n    margin: 0;\r\n    width: 100%;\r\n    font-size: .9em;\r\n    z-index: 1000;\r\n    display: flex;\r\n    justify-content: center;\r\n    box-sizing: border-box;\r\n    ${isMobile && css`\r\n        flex-direction: column;\r\n        text-align: center;\r\n    `}\r\n\r\n    & > p {\r\n        margin: 0 20px;\r\n    }\r\n\r\n    & > svg {\r\n        margin: 0 5px\r\n    }\r\n\r\n    ${!isMobile && css`\r\n        & > p:not(:last-child):after {\r\n            content: '-';\r\n            position: relative;\r\n            right: -20px\r\n        }\r\n    `}\r\n`;\r\n\r\nconst Footer = (): JSX.Element => {\r\n    return (\r\n        <FooterContainer>\r\n            <p><Lang name={\"footer_website_made_by\"} /> <a href=\"https://github.com/AvaN0x\">Clément RICATTE <FontAwesomeIcon icon={faGithub} /></a></p>\r\n            <p><a href=\"https://github.com/AvaN0x/avan0x.github.io/blob/master/LICENSE\"><Lang name={\"license\"} /></a></p >\r\n        </FooterContainer >\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport { FirebaseDatabaseProvider } from \"@react-firebase/database\";\r\nimport firebaseConfig from './firebase/config';\r\n\r\nimport { Route, HashRouter as Router, Switch } from 'react-router-dom';\r\n\r\nimport { AnimatePresence } from \"framer-motion\";\r\nimport { motion } from \"framer-motion\"\r\n\r\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert';\r\nimport AlertTemplate from './AlertTemplate';\r\n\r\nimport NotFound from \"./views/Errors/NotFound\";\r\nimport Portfolio from './views/Portfolio';\r\nimport Discord from './views/Discord';\r\nimport Footer from './features/Footer';\r\nimport styled from '@emotion/styled';\r\nimport { useFirebaseConnect } from 'react-redux-firebase';\r\n\r\nconst PageContainer = styled.div`\r\n    min-height: 100vh;\r\n`;\r\n\r\nconst Redirect = (link: string) => {\r\n    window.location.href = link;\r\n    return null;\r\n}\r\n\r\nconst options = {\r\n    position: positions.BOTTOM_RIGHT,\r\n    transition: transitions.FADE,\r\n    timeout: 5000,\r\n    offset: '10px',\r\n    containerStyle: {\r\n        zIndex: 10000,\r\n        bottom: 50\r\n    }\r\n}\r\n\r\nconst App = (): JSX.Element => {\r\n    useFirebaseConnect([\r\n        { type: 'value', path: 'langs', queryParams: ['orderByKey'] }\r\n    ])\r\n\r\n    return (\r\n        <Router basename='/'>\r\n            <AlertProvider template={AlertTemplate} {...options}>\r\n                <FirebaseDatabaseProvider firebase={firebase} {...firebaseConfig}>\r\n                    <PageContainer>\r\n                        <AnimatePresence exitBeforeEnter>\r\n                            <Switch>\r\n                                <Route exact path='/' component={Portfolio} />\r\n                                <Route exact path='/discord' component={Discord} />\r\n\r\n                                {/* GitHub Pages */}\r\n                                <Route exact path=\"/IUT-ProjetWeb\" component={() => Redirect('https://avan0x.github.io/IUT-ProjetWeb/')} />\r\n                                <Route exact path=\"/AnciensEtudiantsIUTMetz\" component={() => Redirect('https://oxypomme.github.io/AnciensEtudiantsIUTMetz/')} />\r\n\r\n                                {/* Other pages */}\r\n                                <Route exact path=\"/Matchable\" component={() => Redirect('https://matchable-80a41.web.app/')} />\r\n\r\n                                {/* Error pages */}\r\n                                <Route component={NotFound} />\r\n                            </Switch>\r\n                        </AnimatePresence>\r\n                    </PageContainer>\r\n\r\n                    <Footer></Footer>\r\n                </FirebaseDatabaseProvider>\r\n            </AlertProvider>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport const ViewContainer = ({ children }: { children: React.ReactNode }): JSX.Element => {\r\n    return (\r\n        <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n        >\r\n            {children}\r\n        </motion.div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import firebase from \"firebase/app\";\r\nimport { combineReducers, createStore } from \"redux\";\r\nimport { DefaultRootState } from \"react-redux\";\r\nimport { firebaseReducer, FirebaseReducer } from \"react-redux-firebase\";\r\nimport firebaseConfig from \"./config\";\r\n\r\n\r\nimport IAbout from '../features/Portfolio/About/IAbout';\r\nimport IProjects from '../features/Portfolio/Projects/IProjects';\r\nimport IIcon from \"../components/LanguagesIcons/IIcon\";\r\nimport ILang from \"../components/Lang/ILang\";\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\ninterface ReducerRootState {\r\n    firebase: FirebaseReducer.Reducer\r\n}\r\nconst rootReducer = combineReducers<ReducerRootState>({\r\n    firebase: firebaseReducer\r\n})\r\n\r\nconst initialState = {}\r\nexport const store = createStore(rootReducer, initialState)\r\n\r\nexport const rrfProps = {\r\n    firebase,\r\n    config: {\r\n        userProfile: 'users'\r\n    },\r\n    dispatch: store.dispatch\r\n}\r\n\r\nexport type RootState = DefaultRootState & {\r\n    firebase: {\r\n        data: {\r\n            about?: IAbout;\r\n            email?: string;\r\n            projects?: IProjects;\r\n            icons?: { [id: string]: IIcon; };\r\n            langs?: { [id: string]: ILang; };\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux'\r\nimport 'firebase/auth'\r\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { rrfProps, store } from './firebase/store';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <ReactReduxFirebaseProvider {...rrfProps}>\r\n                <App />\r\n            </ReactReduxFirebaseProvider>\r\n        </Provider>\r\n    </React.StrictMode >,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}