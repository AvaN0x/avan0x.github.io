{"version":3,"sources":["firebase/config.ts","AlertTemplate.tsx","components/Lang/Lang.tsx","components/Lang/LangsList.tsx","components/Loading.tsx","features/NavBar/NavHeader.tsx","features/NavBar/NavMenu.tsx","features/NavBar/index.tsx","views/Errors/NotFound.tsx","components/ColoredSection.tsx","components/Cover.tsx","components/styledComponents.tsx","features/Portfolio/About/Personal/Personal.tsx","features/Portfolio/About/Experiences/Experiences.tsx","features/Portfolio/About/Educations/Educations.tsx","components/LoadBar.tsx","features/Portfolio/About/Languages/Languages.tsx","features/Portfolio/About/Qualities/Qualities.tsx","components/LanguagesIcons/LanguageComponent.tsx","features/Portfolio/About/Techs/Techs.tsx","features/Portfolio/About.tsx","components/DiscordInvite.tsx","features/Portfolio/Contact.tsx","features/Portfolio/Projects/ProjectCard.tsx","features/Portfolio/Projects.tsx","views/Portfolio/index.tsx","views/Discord.tsx","features/Footer/index.tsx","views/SetPageLanguages.tsx","App.tsx","reportWebVitals.ts","firebase/store.tsx","index.tsx"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","AlertBox","styled","div","Button","button","Message","span","AlertTemplate","message","options","style","close","type","icon","faCheckCircle","color","faExclamationCircle","onClick","faTimes","LangString","name","langs","useSelector","state","firebase","data","LangStringFromILang","isLoaded","console","error","content","language","Cookies","get","en","fr","Lang","LangsList","website_languages","french","english","date_format","footer_website_made_by","license","on_this_page","portfolio_cover_subtitle","about","about_age","about_age_days","about_car_license","about_date_of_birth","about_diplomas","about_experiences","about_firstname","about_languages","about_lastname","about_license_vehicle","about_location","about_personal_informations","about_qualities","about_techs","contact","contact_button","contact_error_message","contact_error_name","contact_error_email","contact_error_webhook","contact_message","contact_name","contact_email","contact_success","discord_invite_join","discord_invite_online","discord_invite_title","discord_redirection","error_not_found_subtitle","error_not_found_title","projects","project_aimed_skills","project_features","project_number_of_contributors","project_objective","school_projects","personal_projects","semester","InfiniteRotate","keyframes","StyledFrontContainer","props","allowClick","css","LoadImage","img","spin","Loading","title","subtitle","noSpinning","noImage","src","alt","NavContainer","NavItemContainer","isMobile","LeftItemContainer","RightItemContainer","ToggleLink","a","isOpen","GitImage","NavBarToggle","faBars","NavHeader","children","toggleMenu","defaultMenuState","React","useState","navState","setNavState","to","faHome","href","target","rel","MenuContainer","MenuSection","SetLanguageLink","current","SetLanguage","event","preventDefault","set","expires","window","location","reload","NavMenu","faGithub","faDiscord","faPortrait","faGlobe","NavBar","childrenInMenu","Children","count","toString","NotFound","ColoredSectionComponent","section","ColoredSection","id","Scroll","CoverContainer","url","CoverContentContainer","actualHeight","AnimatedScroller","HashLink","Cover","contentHeight","setContentHeight","contentRef","useRef","useEffect","clientHeight","ref","smooth","faAngleDoubleDown","Section","SegmentTitle","h1","Segment","EducationContainer","Label","b","Personal","personal","yearOld","Date","getTime","moment","dateofbirth","toDate","getFullYear","daysSinceBirthday","Math","floor","AboutItem","lastname","firstname","format","length","place","car","ownLicense","ownVehicle","Educations","experiences","map","experience","index","label","date","start","end","educations","education","Container","Fill","pourcent","LoadBar","Languages","languages","Qualities","qualities","quality","LanguageImg","LanguageLink","LanguageComponent","icons","techIndex","LanguageList","li","Techs","techs","others","techList","tech","codingLanguages","AboutContainerStyle","AboutContainer","Experiences","About","path","orderByKey","isLoading","value","DetailsContainer","JoinButton","NavLink","DiscordLogo","DiscordBubble","i","DiscordInvite","discord","setDiscord","fetch","then","res","json","result","onlines","presence_count","ContactContainerStyle","ContactContainer","webhook","alert","useAlert","isProcessingRequest","setIsProcessingRequest","setName","email","setEmail","setContent","htmlFor","onChange","required","rows","trim","test","bodyContent","JSON","stringify","username","avatar_url","embeds","description","footer","text","method","headers","body","ok","success","catch","disabled","Contact","ProjectTitle","ContentContainer","show","MiscContainer","LanguagesContainer","LinksContainer","SecondaryTitle","h2","List","ul","ContributorsContainer","ProjectCard","project","cardRef","setShow","scrollTo","offsetTop","faChevronUp","faChevronDown","objective","aimedSkills","skill","features","numberOfContributors","Array","from","e","faUser","links","site","faExternalLinkAlt","youtube","faYoutube","github","ProjectsContainerStyle","CategoryTitle","ProjectsContainer","schoolProjects","school","schoolIndex","semesters","semesterIndex","number","personalProjects","Projects","Portfolio","useFirebaseConnect","queryParams","Discord","instant_invite","FooterContainer","Footer","SetPageLanguages","useParams","history","useHistory","push","PageContainer","Redirect","link","position","positions","BOTTOM_RIGHT","transition","transitions","FADE","timeout","offset","containerStyle","zIndex","bottom","ViewContainer","initial","opacity","animate","exit","App","useKonami","document","code","basename","template","exitBeforeEnter","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","rootReducer","combineReducers","firebaseReducer","store","createStore","rrfProps","config","userProfile","dispatch","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2d632568.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCWrxnEZBOOjmmzGU3Px6cTTbgThrsXh4s\",\r\n    authDomain: \"avan0x-website.firebaseapp.com\",\r\n    databaseURL: \"https://avan0x-website-default-rtdb.firebaseio.com\",\r\n    projectId: \"avan0x-website\",\r\n    storageBucket: \"avan0x-website.appspot.com\",\r\n    messagingSenderId: \"385727573750\",\r\n    appId: \"1:385727573750:web:84d2007e80ddf6bd5d46d7\",\r\n    measurementId: \"G-FJ78ZHF950\"\r\n};\r\n\r\nexport default firebaseConfig;","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport React from 'react'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { faCheckCircle, faExclamationCircle, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport styled from '@emotion/styled';\r\n\r\n\r\nconst AlertBox = styled.div`\r\n    width: fit-content;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    box-sizing: border-box;\r\n    max-width: max(500px, 90vw);\r\n    background-color: var(--header-footer-color);\r\n    color: var(--font-color);\r\n`;\r\n\r\nconst Button = styled.button`\r\n    margin-left: 20px;\r\n    border: none;\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    color: var(--font-color);\r\n`;\r\n\r\nconst Message = styled.span`\r\n    flex: 2;\r\n    margin-left: 10px;\r\n`;\r\n\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nconst AlertTemplate = ({ message, options, style, close }: any): JSX.Element => {\r\n    return (\r\n        <AlertBox style={{ ...style }}>\r\n            {/* {options.type === 'info' && <FontAwesomeIcon icon={faInfoCircle} color={'#ddcc35'} />} */} {/* //? default value */}\r\n            {options.type === 'success' && <FontAwesomeIcon icon={faCheckCircle} color={'#43b581'} />}\r\n            {options.type === 'error' && <FontAwesomeIcon icon={faExclamationCircle} color={'#eb4034'} />}\r\n            <Message>{message}</Message>\r\n            <Button onClick={close}>\r\n                <FontAwesomeIcon icon={faTimes} />\r\n            </Button>\r\n        </AlertBox>\r\n    )\r\n};\r\n\r\nexport default AlertTemplate;","import React from 'react';\r\n\r\nimport Cookies from 'js-cookie';\r\n\r\nimport ILang from './ILang';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../firebase/store';\r\nimport { isLoaded } from 'react-redux-firebase';\r\n\r\ntype PropsType = {\r\n    name?: string;\r\n    content?: ILang | string;\r\n}\r\n\r\nexport const LangString = (name: string): string => {\r\n    const langs = useSelector((state: RootState) => state.firebase.data.langs);\r\n    if (langs && langs[name]) {\r\n        return LangStringFromILang(langs[name]);\r\n    } else {\r\n        if (isLoaded(langs)) {\r\n            console.error(\"`\" + name + \"` is missing from langs\");\r\n\r\n            return name;\r\n        } else {\r\n            return \"↺\"; // possible other character : ⌴\r\n        }\r\n    }\r\n}\r\n\r\nexport const LangStringFromILang = (content: ILang | string | undefined): string => {\r\n    const language = Cookies.get(\"language\") || \"fr\";\r\n\r\n    if (typeof content === \"string\")\r\n        return content;\r\n    else if (content)\r\n        return content[language] || content.en || content.fr;\r\n    else\r\n        return \"\";\r\n}\r\n\r\nconst Lang = ({ name, content }: PropsType): JSX.Element => {\r\n    if (content) {\r\n        return <>{LangStringFromILang(content)}</>\r\n    } else if (name) {\r\n        return <>{LangString(name)}</>\r\n    } else {\r\n        return <></>;\r\n    }\r\n}\r\n\r\n\r\nexport default Lang;","const LangsList = {\r\n    website_languages: \"website_languages\",\r\n    french: \"french\",\r\n    english: \"english\",\r\n\r\n    date_format: \"date_format\",\r\n\r\n    footer_website_made_by: \"footer_website_made_by\",\r\n    license: \"license\",\r\n    on_this_page: \"on_this_page\",\r\n\r\n    portfolio_cover_subtitle: \"portfolio_cover_subtitle\",\r\n\r\n    about: \"about\",\r\n    about_age: \"about_age\",\r\n    // about_age_and: \"about_age_and\", // TODO formatter\r\n    about_age_days: \"about_age_days\",\r\n    about_car_license: \"about_car_license\",\r\n    about_date_of_birth: \"about_date_of_birth\",\r\n    about_diplomas: \"about_diplomas\",\r\n    about_experiences: \"about_experiences\",\r\n    about_firstname: \"about_firstname\",\r\n    about_languages: \"about_languages\",\r\n    about_lastname: \"about_lastname\",\r\n    about_license_vehicle: \"about_license_vehicle\",\r\n    about_location: \"about_location\",\r\n    about_personal_informations: \"about_personal_informations\",\r\n    about_qualities: \"about_qualities\",\r\n    about_techs: \"about_techs\",\r\n\r\n    contact: \"contact\",\r\n    contact_button: \"contact_button\",\r\n    contact_error_message: \"contact_error_message\",\r\n    contact_error_name: \"contact_error_name\",\r\n    contact_error_email: \"contact_error_email\",\r\n    contact_error_webhook: \"contact_error_webhook\",\r\n    contact_message: \"contact_message\",\r\n    contact_name: \"contact_name\",\r\n    contact_email: \"contact_email\",\r\n    contact_success: \"contact_success\",\r\n\r\n    discord_invite_join: \"discord_invite_join\",\r\n    discord_invite_online: \"discord_invite_online\",\r\n    discord_invite_title: \"discord_invite_title\",\r\n    discord_redirection: \"discord_redirection\",\r\n\r\n    error_not_found_subtitle: \"error_not_found_subtitle\",\r\n    error_not_found_title: \"error_not_found_title\",\r\n\r\n    projects: \"projects\",\r\n    project_aimed_skills: \"project_aimed_skills\",\r\n    project_features: \"project_features\",\r\n    project_number_of_contributors: \"project_number_of_contributors\",\r\n    project_objective: \"project_objective\",\r\n    school_projects: \"school_projects\",\r\n    personal_projects: \"personal_projects\",\r\n    semester: \"semester\",\r\n}\r\n\r\nexport default LangsList;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { css, keyframes } from '@emotion/react';\r\n\r\nconst InfiniteRotate = keyframes`\r\n    from {\r\n        -webkit-transform: rotate(0deg);\r\n        -o-transform: rotate(0deg);\r\n        transform: rotate(0deg);\r\n    }\r\n    to {\r\n        -webkit-transform: rotate(360deg);\r\n        -o-transform: rotate(360deg);\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\n\r\n\r\n\r\nconst StyledFrontContainer = styled.div<{ allowClick: boolean }>`\r\n    background-color: #3333337D;\r\n    position: fixed;\r\n    top:0;\r\n    left:0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    margin: 0 !important;\r\n    overflow: hidden;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    ${props => !props.allowClick &&\r\n        css`\r\n            z-index: 10000;\r\n        `\r\n    }\r\n\r\n    & > h1 {\r\n        color: var(--font-color);\r\n        margin: 4px;\r\n    }\r\n\r\n    & > p {\r\n        color: var(--font-color);\r\n        margin: 4px;\r\n        opacity: .8;\r\n    }\r\n`;\r\n\r\nconst LoadImage = styled.img<{ spin: boolean }>`\r\n    height: 8rem;\r\n    position: relative;\r\n    top: -8px;\r\n    border-radius: 50%;\r\n    float: right;\r\n    border: 1px solid var(--header-font-color);\r\n    transform: rotate(0);\r\n    transition: .5s;\r\n    color: white;\r\n    ${props => props.spin &&\r\n        css`\r\n            animation: ${InfiniteRotate} 2s linear infinite;\r\n        `\r\n    }\r\n`;\r\n\r\ntype PropsType = {\r\n    title?: string;\r\n    subtitle?: string;\r\n    allowClick?: boolean;\r\n    noSpinning?: boolean;\r\n    noImage?: boolean;\r\n}\r\n\r\nconst Loading = ({ title, subtitle, allowClick, noSpinning, noImage }: PropsType): JSX.Element => {\r\n    return (\r\n        <StyledFrontContainer allowClick={!!allowClick} >\r\n            {!noImage &&\r\n                <LoadImage\r\n                    src=\"https://avatars3.githubusercontent.com/u/27494805\"\r\n                    title=\"github.com/AvaN0x\"\r\n                    alt=\"github.com/AvaN0x\"\r\n                    spin={!noSpinning}\r\n                />\r\n            }\r\n            {title && <h1>{title}</h1>}\r\n            {subtitle && <p>{subtitle}</p>}\r\n        </StyledFrontContainer>\r\n    );\r\n}\r\n\r\nexport default Loading;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faHome, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { css } from '@emotion/react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n    defaultMenuState: boolean;\r\n    toggleMenu: (value: boolean) => void;\r\n    children?: React.ReactNode;\r\n}\r\n\r\nconst NavHeader = ({ children, toggleMenu, defaultMenuState }: PropsType): JSX.Element => {\r\n    const [navState, setNavState] = React.useState<boolean>(defaultMenuState);\r\n\r\n    const handleToggleMenu = () => {\r\n        toggleMenu(!navState);\r\n        setNavState(!navState);\r\n    }\r\n\r\n    return (\r\n        <NavContainer>\r\n            <LeftItemContainer>\r\n                <NavBarToggle isOpen={navState} onClick={handleToggleMenu} />\r\n                <NavLink to=\"/\"><FontAwesomeIcon icon={faHome} /></NavLink>\r\n                {children}\r\n            </LeftItemContainer>\r\n\r\n            <RightItemContainer>\r\n                <a href=\"https://github.com/AvaN0x\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <GitImage\r\n                        src=\"https://avatars3.githubusercontent.com/u/27494805\" title=\"github.com/AvaN0x\" alt=\"github.com/AvaN0x\" />\r\n                </a>\r\n            </RightItemContainer>\r\n        </NavContainer>\r\n    );\r\n}\r\n\r\n\r\nconst NavContainer = styled.div`\r\n    width: 100vw;\r\n    position: fixed;\r\n    top: 0;\r\n    box-sizing: border-box;\r\n    height: 3rem;\r\n    background: var(--header-footer-color);\r\n    padding: 0 5px;\r\n    display: flex;\r\n    z-index: 1000;\r\n`;\r\n\r\nconst NavItemContainer = styled.div`\r\n    display: flex;\r\n\r\n    & > a {\r\n        cursor: pointer;\r\n        position: relative;\r\n        font-size: 1.2rem;\r\n        line-height: calc(3rem - 2 * .7rem);\r\n        color: var(--header-font-color);\r\n        text-decoration: none;\r\n        padding: .7rem 1rem;\r\n        transition: .5s;\r\n\r\n        & > svg {\r\n            transition: .5s;\r\n            font-size: 1.6rem;\r\n        }\r\n\r\n        ${!isMobile && css`\r\n            &:hover {\r\n                color: var(--main-color);\r\n\r\n                & > svg {\r\n                    transform: rotate(5deg) scale(1.1);\r\n                }\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\nconst LeftItemContainer = styled(NavItemContainer)`\r\n    flex-grow: 1;\r\n`;\r\n\r\nconst RightItemContainer = styled(NavItemContainer)`\r\n`;\r\n\r\nconst ToggleLink = styled.a<{ isOpen?: boolean }>`\r\n    width: 1.2rem;\r\n\r\n    ${props => props.isOpen && css`\r\n        & svg {\r\n            transform: rotate(90deg);\r\n            color: var(--main-color);\r\n        }\r\n\r\n        ${!isMobile && css`\r\n            &:hover svg {\r\n                transform: rotate(80deg) scale(1.1) !important;\r\n            }\r\n        `}\r\n    `}\r\n`;\r\n\r\nconst GitImage = styled.img`\r\n    height: 2.4rem;\r\n    position: relative;\r\n    top: -8px;\r\n    border-radius: 50%;\r\n    float: right;\r\n    border: 1px solid var(--header-font-color);\r\n    transform: rotate(0);\r\n    transition: .5s;\r\n\r\n    &:hover {\r\n        transform: rotate(360deg);\r\n        border: 1px solid var(--main-color);\r\n        border-radius: 30%\r\n    }\r\n`;\r\n\r\nconst NavBarToggle = ({ isOpen, onClick }: { isOpen?: boolean; onClick?: (event: React.SyntheticEvent) => void; }) => {\r\n    return (\r\n        <ToggleLink isOpen={isOpen} onClick={onClick}>\r\n            <FontAwesomeIcon icon={isOpen ? faTimes : faBars} />\r\n        </ToggleLink>\r\n    );\r\n}\r\n\r\n\r\nexport default NavHeader;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faDiscord, faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { faGlobe, faPortrait } from '@fortawesome/free-solid-svg-icons';\r\nimport { css } from '@emotion/react';\r\n\r\nimport Lang from 'components/Lang/Lang';\r\nimport LangsList from 'components/Lang/LangsList';\r\n\r\nimport Cookies from 'js-cookie';\r\n\r\nconst MenuContainer = styled.div<{ isOpen: boolean }>`\r\n    position: fixed;\r\n    top: 3rem;\r\n    height: calc(100vh - 3rem);\r\n    background-color: var(--nav-menu-color);\r\n    overflow-y: auto;\r\n    box-shadow: 0 3px 5px black;\r\n    display: flex;\r\n    flex-direction: column;\r\n    z-index: 1001;\r\n    transition: .5s;\r\n\r\n    ${props => !isMobile ?\r\n        css`\r\n            left: ${props.isOpen ? \"0\" : \"-300px\"};\r\n            width: 300px;\r\n        `\r\n        :\r\n        css`\r\n            left: ${props.isOpen ? \"0\" : \"-100%\"};\r\n            width: 100%;\r\n        `\r\n    }\r\n`;\r\n\r\nconst MenuSection = styled.div`\r\n    border-bottom: 2px solid var(--main-transparent-color);\r\n    font-size: 1.1rem;\r\n    text-align: left;\r\n    padding: 2px;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    & > h1 {\r\n        margin: 10px 0;\r\n        padding: 0;\r\n        text-align: center;\r\n        font-size: 1.2rem;\r\n        font-weight: normal;\r\n        text-transform: uppercase\r\n    }\r\n\r\n    & > a {\r\n        color: #fff;\r\n        text-decoration: none;\r\n        padding: 5px;\r\n        padding-left: 2.3rem;\r\n        font-size: 1.1rem;\r\n        transition: .5s;\r\n\r\n        & > svg {\r\n            position: absolute;\r\n            left: 15px;\r\n            transform: translateY(10%);\r\n            transition: .5s;\r\n        }\r\n\r\n        ${!isMobile && css`\r\n            &:hover {\r\n                color: var(--main-color);\r\n                padding-left: calc(2.3rem + 5px);\r\n\r\n                & > svg {\r\n                    color: var(--main-color);\r\n                    left: 20px;\r\n                }\r\n            }\r\n        `}\r\n    }\r\n`;\r\n\r\n\r\ntype PropsType = {\r\n    isOpen: boolean;\r\n    children?: React.ReactNode;\r\n}\r\n\r\nconst NavMenu = ({ isOpen, children }: PropsType): JSX.Element => {\r\n    return (\r\n        <MenuContainer isOpen={isOpen}>\r\n            {children &&\r\n                <MenuSection>\r\n                    <h1><Lang name={LangsList.on_this_page} /></h1>\r\n                    {children}\r\n                </MenuSection>\r\n            }\r\n            <MenuSection>\r\n                <h1><Lang name={LangsList.about} /></h1>\r\n                <a href=\"https://github.com/AvaN0x\" target=\"_blank\" rel=\"noreferrer\">\r\n                    <FontAwesomeIcon icon={faGithub} />GitHub\r\n                </a>\r\n                <NavLink to=\"/discord\">\r\n                    <FontAwesomeIcon icon={faDiscord} />Discord\r\n                </NavLink>\r\n                <NavLink to=\"/\">\r\n                    <FontAwesomeIcon icon={faPortrait} />Portfolio\r\n                </NavLink>\r\n            </MenuSection>\r\n            <MenuSection>\r\n                <h1><Lang name={\"website_languages\"} /></h1>\r\n                <SetLanguage language=\"fr\">\r\n                    <FontAwesomeIcon icon={faGlobe} /><Lang name={LangsList.french} />\r\n                </SetLanguage>\r\n                <SetLanguage language=\"en\">\r\n                    <FontAwesomeIcon icon={faGlobe} /><Lang name={LangsList.english} />\r\n                </SetLanguage>\r\n            </MenuSection>\r\n\r\n        </MenuContainer>\r\n    );\r\n}\r\n\r\nconst SetLanguageLink = styled.a<{ current?: boolean }>`\r\n    ${props => props.current ?\r\n        css`\r\n            color: var(--secondary-color);\r\n            opacity: .5;\r\n            cursor: default;\r\n        `\r\n        :\r\n        css`\r\n            cursor: pointer;\r\n\r\n        `\r\n    }\r\n`;\r\n\r\nconst SetLanguage = ({ language, children }: { language: string; children?: React.ReactNode; }): JSX.Element => {\r\n    const current = (Cookies.get(\"language\") || \"fr\") === language;\r\n\r\n    const handleOnClick = (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\r\n        event.preventDefault();\r\n        if (!current) {\r\n            Cookies.set(\"language\", language, { expires: 365 });\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <SetLanguageLink\r\n            current={current}\r\n            onClick={handleOnClick}\r\n        >\r\n            {children}\r\n        </SetLanguageLink>\r\n    );\r\n}\r\n\r\nexport default NavMenu;","import React from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\nimport Cookies from 'js-cookie';\r\n\r\nimport NavHeader from './NavHeader';\r\nimport NavMenu from './NavMenu';\r\n\r\ntype PropsType = {\r\n    children?: React.ReactNode;\r\n}\r\n\r\nconst NavBar = ({ children }: PropsType): JSX.Element => {\r\n    const [navState, setNavState] = React.useState<boolean>(Cookies.get(\"nav_state\") === \"true\");\r\n\r\n    const toggleMenu = (state: boolean) => {\r\n        setNavState(state);\r\n        Cookies.set(\"nav_state\", state.toString(), { expires: 365 });\r\n    }\r\n\r\n    const childrenInMenu: boolean = React.Children.count(children) > 4 || isMobile;\r\n\r\n    return (\r\n        <>\r\n            <NavHeader toggleMenu={toggleMenu} defaultMenuState={navState}>\r\n                {!childrenInMenu &&\r\n                    children\r\n                }\r\n            </NavHeader>\r\n            <NavMenu isOpen={navState}>\r\n                {childrenInMenu &&\r\n                    children\r\n                }\r\n            </NavMenu>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport { ViewContainer } from 'App';\r\n\r\nimport { LangString } from 'components/Lang/Lang';\r\nimport LangsList from 'components/Lang/LangsList';\r\n\r\nimport Loading from 'components/Loading';\r\nimport NavBar from 'features/NavBar';\r\n\r\nconst NotFound = (): JSX.Element => {\r\n    return (\r\n        <ViewContainer>\r\n            <NavBar />\r\n            <Loading title={LangString(LangsList.error_not_found_title)} subtitle={LangString(LangsList.error_not_found_subtitle)} allowClick noSpinning />\r\n        </ViewContainer>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nconst ColoredSectionComponent = styled.section`\r\n    background-color: var(--bar-color);\r\n    margin: 0;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n\r\n    &:not(:first-of-type) {\r\n        margin-top: ${isMobile ? 4 : 6}rem;\r\n    }\r\n\r\n    & > h1 {\r\n        text-align: center;\r\n        color: var(--font-color);\r\n        font-size: 4rem;\r\n        margin: 0;\r\n        border-bottom: none;\r\n        font-variant: small-caps;\r\n    }\r\n`;\r\n\r\ntype PropsType = {\r\n    title: string;\r\n    id?: string;\r\n}\r\n\r\nconst ColoredSection = ({ title, id }: PropsType): JSX.Element => {\r\n    return (\r\n        <ColoredSectionComponent id={id}>\r\n            <h1>{title}</h1>\r\n        </ColoredSectionComponent>\r\n    );\r\n}\r\n\r\nexport default ColoredSection;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { keyframes } from '@emotion/react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDoubleDown } from '@fortawesome/free-solid-svg-icons';\r\nimport { HashLink } from 'react-router-hash-link';\r\n\r\nconst Scroll = keyframes`\r\n    0% {\r\n        transform: translateY(0);\r\n        opacity: 1\r\n    }\r\n\r\n    80% {\r\n        transform: translateY(15px);\r\n        opacity: .5\r\n    }\r\n\r\n    100% {\r\n        transform: translateY(0);\r\n        opacity: 1\r\n    }\r\n`;\r\n\r\nconst CoverContainer = styled.div<{ url: string }>`\r\n    width: 100%;\r\n    height: 100vh;\r\n    position: relative;\r\n    background-image: url(${props => props.url});\r\n    background-size: cover;\r\n    background-position: center;\r\n`;\r\n\r\nconst CoverContentContainer = styled.div<{ actualHeight: number }>`\r\n    position: relative;\r\n    background-color: var(--main-transparent-color);\r\n    top: calc(50% ${props => \" - \" + props.actualHeight / 2 + \"px\"});\r\n    width: 100%;\r\n    text-align: center;\r\n    margin: auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    position: sticky;\r\n\r\n    & * {\r\n        margin: 0;\r\n        font-size: 1.5rem;\r\n        color: var(--font-color);\r\n    }\r\n\r\n    & h1 {\r\n        font-size: 2rem;\r\n    }\r\n`;\r\n\r\nconst AnimatedScroller = styled(HashLink)`\r\n    padding-bottom: 1rem;\r\n    animation: ${Scroll} 1.8s linear infinite;\r\n\r\n    & > svg {\r\n        font-size: 1.8rem;\r\n    }\r\n`;\r\n\r\ntype PropsType = {\r\n    url: string;\r\n    children?: React.ReactNode;\r\n}\r\n\r\n/**\r\n * Create a cover component with a background image\r\n * @param {string} url url of the image\r\n * @param {React.ReactNode} children content of the cover\r\n */\r\nconst Cover = ({ url, children }: PropsType): JSX.Element => {\r\n    const [contentHeight, setContentHeight] = React.useState(0);\r\n    const contentRef = React.useRef<HTMLDivElement>(null);\r\n\r\n    React.useEffect(() => {\r\n        setContentHeight(contentRef.current?.clientHeight || 0);\r\n    }, [contentRef]);\r\n\r\n    return (\r\n        <>\r\n            <CoverContainer url={url}>\r\n                <CoverContentContainer ref={contentRef} actualHeight={contentHeight}>\r\n                    {children}\r\n                    <AnimatedScroller smooth to=\"#scroll\">\r\n                        <FontAwesomeIcon icon={faAngleDoubleDown} />\r\n                    </AnimatedScroller>\r\n                </CoverContentContainer>\r\n            </CoverContainer>\r\n            <span id=\"scroll\"></span>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Cover;","import styled from '@emotion/styled';\r\n\r\nexport const Section = styled.section`\r\n    max-width: 1100px;\r\n    margin: 0 auto;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n    text-align: justify;\r\n`;\r\n\r\nexport const SegmentTitle = styled.h1`\r\n    border: none;\r\n    border-bottom: 2px solid var(--secondary-color);\r\n    font-size: 1.2rem;\r\n    padding: 0 4px;\r\n    margin: 0;\r\n    text-align: left;\r\n    display: inline-block;\r\n    color: var(--main-color);\r\n`;\r\n\r\nexport const Segment = styled.div`\r\n    transition: .5s;\r\n    border-left: 2px solid var(--secondary-color);\r\n    box-sizing: border-box;\r\n    padding-bottom: .1rem;\r\n    margin-bottom: 2rem;\r\n\r\n    & > ul {\r\n        list-style-type: none;\r\n        margin: 0;\r\n        padding: 8px;\r\n\r\n        & > li {\r\n            padding: 4px 0;\r\n        }\r\n    }\r\n\r\n    & > h1 {\r\n        border: none;\r\n        text-align: left;\r\n        font-size: 1rem;\r\n        margin: 0;\r\n        padding: 8px 4px 0 4px;\r\n        color: var(--main-color);\r\n    }\r\n`;\r\n\r\nexport const EducationContainer = styled.div`\r\n    margin: 0;\r\n    padding: 4px;\r\n\r\n    &>h1 {\r\n        border: none;\r\n        text-align: left;\r\n        font-size: 1rem;\r\n        margin: 0;\r\n        padding: 0;\r\n        color: var(--secondary-color);\r\n    }\r\n\r\n    &>p {\r\n        text-indent: 20px;\r\n        margin: 2px;\r\n    }\r\n`;\r\n\r\nexport const ExperienceContainer = styled(EducationContainer);","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport IPersonal from './IPersonal';\r\nimport { Segment, SegmentTitle } from 'components/styledComponents';\r\nimport { AboutItem } from 'features/Portfolio/About';\r\n\r\nimport moment from 'moment';\r\nimport format from \"string-format\";\r\n\r\nimport Lang, { LangString } from 'components/Lang/Lang';\r\nimport LangsList from 'components/Lang/LangsList';\r\n\r\n\r\nconst Label = styled.b`\r\n    letter-spacing: 1px;\r\n`;\r\n\r\ntype PropsType = {\r\n    personal: IPersonal;\r\n}\r\n\r\nconst Personal = ({ personal }: PropsType): JSX.Element => {\r\n    const yearOld = new Date(new Date().getTime() - moment(personal.dateofbirth, \"YYYY-MM-DD\").toDate().getTime()).getFullYear() - 1970;\r\n    const daysSinceBirthday = Math.floor((new Date().getTime() - new Date(2001 + yearOld, 9, 9).getTime()) / 86400000);\r\n    const date_format: string = LangString(LangsList.date_format);\r\n\r\n    return (\r\n        <AboutItem>\r\n            <SegmentTitle><Lang name={LangsList.about_personal_informations} /></SegmentTitle>\r\n            <Segment>\r\n                <ul>\r\n                    <li><Label><Lang name={LangsList.about_lastname} /></Label> : <span>{personal.lastname}</span></li>\r\n                    <li><Label><Lang name={LangsList.about_firstname} /></Label> : <span>{personal.firstname}</span></li>\r\n                    {yearOld && <li><Label><Lang name={LangsList.about_age} /></Label> : <span title={format(LangString(LangsList.about_age_days), daysSinceBirthday.toString())}>{yearOld}</span></li>}\r\n                    {date_format.length > 0 && date_format !== \"date_format\" &&\r\n                        <li>\r\n                            <Label><Lang name={LangsList.about_date_of_birth} /></Label> : <span>\r\n                                {moment(personal.dateofbirth, \"YYYY-MM-DD\").format(date_format)}\r\n                            </span>\r\n                        </li>\r\n                    }\r\n                    <li><Label><Lang name={LangsList.about_location} /></Label> : <span><Lang content={personal.place} /></span></li>\r\n                    {personal.license?.car?.ownLicense &&\r\n                        <li><Lang name={LangsList.about_car_license} />{personal.license.car?.ownVehicle && <> + <Lang name={LangsList.about_license_vehicle} /></>}</li>\r\n                    }\r\n                </ul>\r\n            </Segment>\r\n        </AboutItem>\r\n    );\r\n}\r\n\r\nexport default Personal;","import React from 'react';\r\n\r\nimport { EducationContainer, Segment, SegmentTitle } from 'components/styledComponents';\r\n\r\nimport IExperience from './IExperience';\r\nimport { AboutItem } from 'features/Portfolio/About';\r\n\r\nimport Lang from 'components/Lang/Lang';\r\nimport LangsList from 'components/Lang/LangsList';\r\n\r\ntype PropsType = {\r\n    experiences: IExperience[];\r\n}\r\n\r\nconst Educations = ({ experiences }: PropsType): JSX.Element => {\r\n    return (\r\n        <AboutItem>\r\n            <SegmentTitle><Lang name={LangsList.about_experiences} /></SegmentTitle>\r\n            <Segment>\r\n                {experiences.map((experience, index) => (\r\n                    <EducationContainer key={index}>\r\n                        <h1><Lang content={experience.label} /></h1>\r\n                        {experience.subtitle && <p><i><Lang content={experience.subtitle} /></i></p>}\r\n                        <p><Lang content={experience.location} /></p>\r\n                        <p><Lang content={experience.date.start} /> – <Lang content={experience.date.end} /></p>\r\n                    </EducationContainer>\r\n                ))}\r\n            </Segment>\r\n        </AboutItem>\r\n    );\r\n}\r\n\r\nexport default Educations;","import React from 'react';\r\n\r\nimport { EducationContainer, Segment, SegmentTitle } from 'components/styledComponents';\r\n\r\nimport IEducation from './IEducation';\r\nimport { AboutItem } from 'features/Portfolio/About';\r\n\r\nimport Lang from 'components/Lang/Lang';\r\nimport LangsList from 'components/Lang/LangsList';\r\n\r\ntype PropsType = {\r\n    educations: IEducation[];\r\n}\r\n\r\nconst Educations = ({ educations }: PropsType): JSX.Element => {\r\n    return (\r\n        <AboutItem>\r\n            <SegmentTitle><Lang name={LangsList.about_diplomas} /></SegmentTitle>\r\n            <Segment>\r\n                {educations.map((education, index) => (\r\n                    <EducationContainer key={index}>\r\n                        <h1><Lang content={education.label} /></h1>\r\n                        {education.subtitle && <p><i><Lang content={education.subtitle} /></i></p>}\r\n                        <p><Lang content={education.location} /></p>\r\n                        <p>{education.date.start} – {education.date.end}</p>\r\n                    </EducationContainer>\r\n                ))}\r\n            </Segment>\r\n        </AboutItem>\r\n    );\r\n}\r\n\r\nexport default Educations;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Container = styled.div`\r\n    height: 10px;\r\n    width: 100px;\r\n    border-radius: 5px;\r\n    display: inline-block;\r\n    margin: 5px;\r\n    position: relative;\r\n    top: 5px;\r\n    border: 1px solid #ffffff60;\r\n`;\r\n\r\nconst Fill = styled.div<{ pourcent: number }>`\r\n    width: ${props => props.pourcent}%;\r\n    height: 100%;\r\n    background-color: var(--main-color);\r\n    border-radius: 5px;\r\n    animation: barfill 2s ease-in-out;\r\n`;\r\n\r\nconst LoadBar = ({ pourcent }: { pourcent: number }): JSX.Element => {\r\n    return (\r\n        <Container>\r\n            <Fill pourcent={pourcent}></Fill>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default LoadBar;","import React from 'react';\r\n\r\nimport { Segment, SegmentTitle } from 'components/styledComponents';\r\nimport LoadBar from 'components/LoadBar';\r\n\r\nimport ILanguage from './ILanguage';\r\nimport { AboutItem } from 'features/Portfolio/About';\r\n\r\nimport Lang from 'components/Lang/Lang';\r\nimport LangsList from 'components/Lang/LangsList';\r\n\r\ntype PropsType = {\r\n    languages: ILanguage[];\r\n}\r\n\r\nconst Languages = ({ languages }: PropsType): JSX.Element => {\r\n    return (\r\n        <AboutItem>\r\n            <SegmentTitle><Lang name={LangsList.about_languages} /></SegmentTitle>\r\n            <Segment>\r\n                <ul>\r\n                    {languages.map((language, index) => (\r\n                        <li key={index}><Lang content={language.label} /><LoadBar pourcent={language.pourcent} /></li>\r\n                    ))}\r\n                </ul>\r\n            </Segment>\r\n        </AboutItem>\r\n    );\r\n}\r\n\r\nexport default Languages;","import React from 'react';\r\n\r\nimport ILang from 'components/Lang/ILang';\r\nimport Lang from 'components/Lang/Lang';\r\nimport LangsList from 'components/Lang/LangsList';\r\n\r\nimport { Segment, SegmentTitle } from 'components/styledComponents';\r\n\r\nimport { AboutItem } from 'features/Portfolio/About';\r\n\r\ntype PropsType = {\r\n    qualities: (ILang | string)[];\r\n}\r\n\r\nconst Qualities = ({ qualities }: PropsType): JSX.Element => {\r\n    return (\r\n        <AboutItem>\r\n            <SegmentTitle><Lang name={LangsList.about_qualities} /></SegmentTitle>\r\n            <Segment>\r\n                <ul>\r\n                    {qualities.map((quality, index) => (\r\n                        <li key={index}><Lang content={quality} /></li>\r\n                    ))}\r\n                </ul>\r\n            </Segment>\r\n        </AboutItem>\r\n    );\r\n}\r\n\r\nexport default Qualities;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/react';\r\nimport { useSelector } from 'react-redux';\r\nimport { isLoaded } from 'react-redux-firebase';\r\nimport { RootState } from '../../firebase/store';\r\nimport Lang, { LangStringFromILang } from '../Lang/Lang';\r\n\r\nconst LanguageImg = styled.img`\r\n    height: 1rem;\r\n    vertical-align: middle;\r\n    margin: 0 4px 0 0;\r\n    padding: 4px;\r\n    border-radius: 8px;\r\n    background-color: #00000060;\r\n    position: relative;\r\n    top: -2px;\r\n    transition: background-color .5s;\r\n`;\r\n\r\nconst LanguageComponent = ({ name }: { name: string }): JSX.Element => {\r\n    const icons = useSelector((state: RootState) => state.firebase.data.icons)\r\n\r\n    if (icons && icons[name]) {\r\n        return (\r\n            <span title={LangStringFromILang(icons[name].title) || \"\"}>\r\n                {icons[name].icons?.map((icon, techIndex) => (\r\n                    <LanguageLink key={techIndex} target=\"_blank\" rel=\"noreferrer\" href={icon.href}>\r\n                        <LanguageImg src={icon.src} />\r\n                    </LanguageLink>\r\n                ))}\r\n\r\n                <Lang content={icons[name].label} />\r\n            </span>\r\n        );\r\n    }\r\n    else {\r\n        // only print error if icons have loaded\r\n        if (isLoaded(icons)) {\r\n            console.error(\"`\" + name + \"` is missing from icons\");\r\n        }\r\n\r\n        return (\r\n            <span>\r\n                {name}\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nconst LanguageLink = styled.a<{ href?: string }>`\r\n    ${props => props.href && css`\r\n        &>img:hover {\r\n            background-color: #ffffff20;\r\n        }\r\n    `}\r\n`;\r\n\r\nexport default LanguageComponent;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { Segment, SegmentTitle } from 'components/styledComponents';\r\n\r\nimport { AboutItem } from 'features/Portfolio/About';\r\nimport ITechs from './ITechs';\r\nimport LanguageComponent from 'components/LanguagesIcons/LanguageComponent';\r\n\r\nimport Lang from 'components/Lang/Lang';\r\nimport LangsList from 'components/Lang/LangsList';\r\n\r\nconst LanguageList = styled.li`\r\n    &>span:not(:last-of-type):after {\r\n        content: \"–\";\r\n        margin: 0 6px;\r\n    }\r\n`;\r\n\r\ntype PropsType = {\r\n    techs: ITechs;\r\n}\r\n\r\nconst Techs = ({ techs }: PropsType): JSX.Element => {\r\n    return (\r\n        <AboutItem>\r\n            <SegmentTitle><Lang name={LangsList.about_techs} /></SegmentTitle>\r\n            <Segment>\r\n                <ul>\r\n                    {techs.others.map((techList, index) => (\r\n                        <LanguageList key={index}>\r\n                            {techList.map((tech, techIndex) => (\r\n                                <LanguageComponent name={tech} key={techIndex} />\r\n                            ))}\r\n                        </LanguageList>\r\n                    ))}\r\n                </ul>\r\n                <h1><Lang name=\"about_languages\" /></h1>\r\n                <ul>\r\n                    {techs.codingLanguages.map((techList, index) => (\r\n                        <LanguageList key={index}>\r\n                            {techList.map((tech, techIndex) => (\r\n                                <LanguageComponent name={tech} key={techIndex} />\r\n                            ))}\r\n                        </LanguageList>\r\n                    ))}\r\n                </ul>\r\n            </Segment>\r\n        </AboutItem>\r\n    );\r\n}\r\n\r\nexport default Techs;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nimport { FirebaseDatabaseNode } from '@react-firebase/database';\r\nimport { Section } from 'components/styledComponents';\r\n\r\nimport IAbout from './About/IAbout';\r\nimport Personal from './About/Personal/Personal';\r\nimport Experiences from './About/Experiences/Experiences';\r\nimport Educations from './About/Educations/Educations';\r\nimport Languages from './About/Languages/Languages';\r\nimport Qualities from './About/Qualities/Qualities';\r\nimport Techs from './About/Techs/Techs';\r\n\r\nconst AboutContainerStyle = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport const AboutItem = styled.div`\r\n    width: ${isMobile ? \"100%\" : \"clamp(500px, 500px, 100%)\"};\r\n`;\r\n\r\nconst AboutContainer = ({ about }: { about: IAbout }) => {\r\n    return (\r\n        <AboutContainerStyle>\r\n            <Personal personal={about.personal} />\r\n            <Educations educations={about.educations} />\r\n            <Experiences experiences={about.experiences} />\r\n            <Techs techs={about.techs} />\r\n            <Languages languages={about.languages} />\r\n            <Qualities qualities={about.qualities} />\r\n        </AboutContainerStyle>\r\n    );\r\n}\r\n\r\nconst About = (): JSX.Element => {\r\n    return (\r\n        <Section>\r\n            <FirebaseDatabaseNode\r\n                path=\"/about/\"\r\n                orderByKey\r\n            >\r\n                {data => !data.isLoading && data.value &&\r\n                    <AboutContainer about={data.value} />\r\n                }\r\n            </FirebaseDatabaseNode>\r\n        </Section>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport Lang from './Lang/Lang';\r\nimport LangsList from './Lang/LangsList';\r\n\r\nconst Container = styled.div`\r\n    width: min(432px, 90vw);\r\n    padding: 16px;\r\n    margin: 1rem auto;\r\n    border-radius: 4px;\r\n    background-color: #2f3136;\r\n    box-sizing: border-box;\r\n    overflow: hidden;\r\n    max-width: 96vw;\r\n\r\n    & > p {\r\n        color: #b9bbbe;\r\n        text-overflow: ellipsis;\r\n        text-align: left;\r\n        cursor: default;\r\n        font-size: 13px;\r\n\r\n        &:first-of-type {\r\n            text-transform: uppercase;\r\n            margin-bottom: 12px;\r\n            overflow: hidden;\r\n            font-weight: 700;\r\n            font-size: 12px;\r\n            margin-top: 0;\r\n        }\r\n    }\r\n\r\n    & a {\r\n        color: #fff;\r\n        cursor: pointer;\r\n        text-overflow: ellipsis;\r\n        font-weight: 600;\r\n        transition: .2s;\r\n    }\r\n`;\r\n\r\nconst DetailsContainer = styled.div`\r\n    max-width: 220px;\r\n    position: relative;\r\n    display: inline-block;\r\n    box-sizing: border-box;\r\n\r\n    & > p {\r\n        color: #b9bbbe;\r\n        text-overflow: ellipsis;\r\n        cursor: default;\r\n        font-size: 13px;\r\n        margin: 4px 0;\r\n    }\r\n`;\r\n\r\nconst JoinButton = styled(NavLink)`\r\n    background-color: #43b581;\r\n    text-decoration: none;\r\n    float: right;\r\n    margin: 5px 0 5px 10px;\r\n    max-width: 86;\r\n    line-height: 40px;\r\n    padding: 0 20px;\r\n    position: relative;\r\n    border-radius: 3px;\r\n    font-size: 14px;\r\n\r\n    &:hover {\r\n        background-color: #3ca374;\r\n    }\r\n`;\r\n\r\nconst DiscordLogo = styled.img`\r\n    border-radius: 15px;\r\n    width: 50px;\r\n    height: 50px;\r\n    position: relative;\r\n    float: left;\r\n    margin-right: 16px;\r\n`;\r\n\r\nconst DiscordBubble = styled.i`\r\n    width: 8px;\r\n    height: 8px;\r\n    background-color: #43b581;\r\n    border-radius: 50%;\r\n    display: inline-block;\r\n`;\r\n\r\ninterface IDiscordInvite {\r\n    name: string;\r\n    onlines: number;\r\n}\r\n\r\nconst DiscordInvite = (): JSX.Element => {\r\n    const [discord, setDiscord] = React.useState<IDiscordInvite | null>(null);\r\n\r\n    React.useEffect(() => {\r\n        fetch(\"https://discordapp.com/api/guilds/673139614927683594/widget.json\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setDiscord({\r\n                        name: result.name,\r\n                        onlines: result.presence_count\r\n                    });\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            <p><Lang name={LangsList.discord_invite_title} /></p>\r\n            <DiscordLogo src=\"https://avatars3.githubusercontent.com/u/27494805\" />\r\n            <DetailsContainer>\r\n                <NavLink to=\"/discord\">\r\n                    {discord?.name || \"\"}\r\n                </NavLink>\r\n                <p><DiscordBubble /> <strong>{discord?.onlines || -1}</strong> <Lang name={LangsList.discord_invite_online} /></p>\r\n            </DetailsContainer>\r\n            <JoinButton to=\"/discord\">\r\n                <Lang name={LangsList.discord_invite_join} />\r\n            </JoinButton>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default DiscordInvite;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nimport { useAlert } from 'react-alert'\r\n\r\nimport { Section } from 'components/styledComponents';\r\nimport { FirebaseDatabaseNode } from '@react-firebase/database';\r\nimport DiscordInvite from 'components/DiscordInvite';\r\n\r\nimport Lang, { LangString } from 'components/Lang/Lang';\r\nimport LangsList from 'components/Lang/LangsList';\r\n\r\nconst ContactContainerStyle = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n\r\n    & > label {\r\n        width: ${isMobile ? \"90vw\" : \"600px\"};\r\n        margin: 8px 0 4px 0;\r\n    }\r\n\r\n    & > textarea,\r\n    & > input[type = text],\r\n    & > input[type = email] {\r\n        width: ${isMobile ? \"90vw\" : \"600px\"};\r\n        min-height: 1.2rem;\r\n    }\r\n\r\n    & > button {\r\n        position: relative;\r\n        text-align: center;\r\n        padding: 10px;\r\n        margin: 10px;\r\n        border-radius: 10px;\r\n        border: 1px solid var(--font-color);\r\n        background: var(--main-transparent-color);\r\n        color: var(--font-color);\r\n        cursor: pointer;\r\n        transition: .5s;\r\n        font-size: 1em;\r\n\r\n        &:not(:disabled):hover {\r\n            border: 1px solid var(--main-color);\r\n            background: var(--font-color);\r\n            color: var(--main-color);\r\n        }\r\n\r\n        &:disabled {\r\n            opacity: .6;\r\n            color: var(--header-footer-color);\r\n            border: 1px solid var(--header-footer-color);\r\n            cursor: not-allowed;\r\n\r\n            &:hover {\r\n                opacity: .8;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst ContactContainer = ({ webhook }: { webhook: string }): JSX.Element => {\r\n    const alert = useAlert();\r\n\r\n    const contact_error_name: string = LangString(LangsList.contact_error_name);\r\n    const contact_error_email: string = LangString(LangsList.contact_error_email);\r\n    const contact_error_message: string = LangString(LangsList.contact_error_message);\r\n    const contact_success: string = LangString(LangsList.contact_success);\r\n    const contact_error_webhook: string = LangString(LangsList.contact_error_webhook);\r\n\r\n\r\n    const [isProcessingRequest, setIsProcessingRequest] = React.useState<boolean>(false);\r\n\r\n    //TODO size max\r\n    const [name, setName] = React.useState<string>(\"\"); //? discord size max : 256\r\n    const [email, setEmail] = React.useState<string>(\"\"); //? discord size max : 2048\r\n    const [content, setContent] = React.useState<string>(\"\"); //? discord size max : 2048\r\n\r\n    const handleSetNameOnChange = (event: React.ChangeEvent<HTMLInputElement>) => setName(event.target.value);\r\n    const handleSetEmailOnChange = (event: React.ChangeEvent<HTMLInputElement>) => setEmail(event.target.value);\r\n    const handleSetContentOnChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => setContent(event.target.value);\r\n\r\n\r\n    const handleOnSubmit = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        event.preventDefault();\r\n        let error = false;\r\n\r\n        if (!name.trim() || name.length < 6) {\r\n            alert.error(contact_error_name);\r\n            error = true;\r\n        }\r\n        if (!email.trim() || !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\r\n            alert.error(contact_error_email);\r\n            error = true;\r\n        }\r\n        if (!content.trim() || content.length < 10) {\r\n            alert.error(contact_error_message);\r\n            error = true;\r\n        }\r\n\r\n        if (!error) {\r\n            setIsProcessingRequest(true);\r\n            const bodyContent = JSON.stringify({\r\n                username: \"avan0x.github.io\",\r\n                avatar_url: \"https://avatars3.githubusercontent.com/u/27494805\",\r\n                embeds: [\r\n                    {\r\n                        title: name,\r\n                        description: content,\r\n                        color: 7653631,\r\n                        footer: {\r\n                            text: email\r\n                        }\r\n                    }\r\n                ]\r\n            })\r\n\r\n            fetch(webhook, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: bodyContent\r\n            }).then((data) => {\r\n                if (data.ok) {\r\n\r\n                    alert.success(contact_success);\r\n                    setName(\"\");\r\n                    setEmail(\"\");\r\n                    setContent(\"\");\r\n\r\n                } else\r\n                    alert.error(contact_error_webhook);\r\n\r\n                setIsProcessingRequest(false);\r\n\r\n            }).catch(() => {\r\n                alert.error(contact_error_webhook);\r\n                setIsProcessingRequest(false);\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ContactContainerStyle>\r\n            <label htmlFor=\"name\"><Lang name={LangsList.contact_name} />:</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={handleSetNameOnChange}\r\n                required\r\n            />\r\n            <label htmlFor=\"email\"><Lang name={LangsList.contact_email} />:</label>\r\n            <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={handleSetEmailOnChange}\r\n                required\r\n            />\r\n            <label htmlFor=\"content\"><Lang name={LangsList.contact_message} />:</label>\r\n            <textarea\r\n                name=\"content\"\r\n                rows={5}\r\n                value={content}\r\n                onChange={handleSetContentOnChange}\r\n                required\r\n            ></textarea>\r\n            <button\r\n                onClick={handleOnSubmit}\r\n                disabled={isProcessingRequest}\r\n            >\r\n                <Lang name={LangsList.contact_button} />\r\n            </button>\r\n        </ContactContainerStyle>\r\n    );\r\n}\r\n\r\n\r\nconst Contact = (): JSX.Element => {\r\n    return (\r\n        <Section>\r\n            <FirebaseDatabaseNode\r\n                path=\"/contact_webhook/\"\r\n                orderByKey\r\n            >\r\n                {data => !data.isLoading && data.value &&\r\n                    <ContactContainer webhook={data.value} />\r\n                }\r\n            </FirebaseDatabaseNode>\r\n            <DiscordInvite />\r\n        </Section>\r\n    );\r\n}\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nimport IProject from './IProject';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronDown, faChevronUp, faExternalLinkAlt, faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport LanguageComponent from 'components/LanguagesIcons/LanguageComponent';\r\nimport { faGithub, faYoutube } from '@fortawesome/free-brands-svg-icons';\r\nimport { css } from '@emotion/react';\r\nimport Markdown from 'markdown-to-jsx';\r\n\r\nimport Lang, { LangString, LangStringFromILang } from 'components/Lang/Lang';\r\nimport LangsList from 'components/Lang/LangsList';\r\n\r\nconst Container = styled.div`\r\n    width: ${isMobile ? \"88vw\" : \"80%\"};\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst ProjectTitle = styled.h1`\r\n    text-align: center;\r\n    padding-bottom: 8px;\r\n    border-bottom: 1px solid var(--font-color);\r\n    margin: 0;\r\n    color: var(--secondary-color);\r\n    cursor: pointer;\r\n    font-size: 1.3rem;\r\n\r\n    &>svg {\r\n        margin-left: 8px;\r\n        color: var(--font-color);\r\n        font-size: .9rem;\r\n        transform: rotate(-0deg);\r\n    }\r\n`;\r\n\r\nconst ContentContainer = styled.div<{ show: boolean }>`\r\n    border: 1px solid var(--font-color);\r\n    border-top: none;\r\n    transition: max-height .5s ease-in-out, padding .5s ease-in-out, overflow .5s ease-in-out;\r\n\r\n    ${props => props.show ?\r\n        css`\r\n            padding: 8px;\r\n            max-height: 1000px;\r\n        `\r\n        :\r\n        css`\r\n            max-height: 0;\r\n            overflow: hidden;\r\n            padding: 0 8px;\r\n            border: none;\r\n        `\r\n    }\r\n\r\n    & p {\r\n        margin: 4px 0;\r\n    }\r\n`\r\n\r\nconst MiscContainer = styled.div`\r\n    border: 1px solid var(--font-color);\r\n    border-top: none;\r\n    padding: 8px;\r\n    margin-bottom: 1rem;\r\n    display: flex;\r\n    ${isMobile && css`\r\n        flex-direction: column;\r\n    `}\r\n`;\r\n\r\nconst LanguagesContainer = styled.div`\r\n    flex-grow: 1;\r\n\r\n    &>span:not(:last-of-type):after {\r\n        content: \"–\";\r\n        margin: 0 6px;\r\n    }\r\n`;\r\n\r\nconst LinksContainer = styled.div`\r\n    margin-right: 8px;\r\n    ${isMobile ?\r\n        css`\r\n            margin-top: 10px;\r\n        `\r\n        :\r\n        css`\r\n            float: right;\r\n        `\r\n    }\r\n\r\n    &>a {\r\n        &:hover>svg {\r\n            color: var(--main-color) !important;\r\n        }\r\n\r\n        &>svg {\r\n            margin-right: 8px;\r\n            font-size: 1.2rem;\r\n            transition: .5s;\r\n\r\n            &.fa-github {\r\n                color: #fff;\r\n            }\r\n\r\n            &.fa-youtube {\r\n                color: #eb4034;\r\n            }\r\n\r\n            &.fa-external-link-alt {\r\n                color: #fff;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst SecondaryTitle = styled.h2`\r\n    color: var(--secondary-color);\r\n    margin: 0;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\nconst List = styled.ul`\r\n    margin-left: 18px;\r\n    margin: 0;\r\n    padding: 0;\r\n    ${isMobile ?\r\n        css`\r\n            list-style-type: \"- \";\r\n            padding-left: 12px;\r\n        `\r\n        :\r\n        css`\r\n            list-style-type: \"\\\\21AA \\\\0020\";\r\n            padding-left: 18px;\r\n        `\r\n    };\r\n\r\n    &>li {\r\n        padding: 2px 0;\r\n    }\r\n`;\r\n\r\nconst ContributorsContainer = styled.div`\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n\r\n    &>svg {\r\n        margin: 0 2px;\r\n    }\r\n`;\r\n\r\ntype PropsType = {\r\n    project: IProject;\r\n}\r\n\r\nconst ProjectCard = ({ project }: PropsType): JSX.Element => {\r\n    const cardRef = React.useRef<HTMLDivElement>(null);\r\n    const [show, setShow] = React.useState<boolean>(false);\r\n\r\n    const handleTitleClick = () => {\r\n        if (!show && cardRef.current)\r\n            window.scrollTo(0, cardRef.current.offsetTop - 200);\r\n\r\n        setShow(!show);\r\n    }\r\n\r\n    return (\r\n        <Container ref={cardRef}>\r\n            <ProjectTitle onClick={handleTitleClick}>\r\n                <Lang content={project.label} /><FontAwesomeIcon icon={show ? faChevronUp : faChevronDown} />\r\n            </ProjectTitle>\r\n            <ContentContainer show={show}>\r\n                {project.objective &&\r\n                    <>\r\n                        <SecondaryTitle><Lang name={LangsList.project_objective} /></SecondaryTitle>\r\n                        <p><Markdown>{LangStringFromILang(project.objective)}</Markdown></p>\r\n                    </>\r\n                }\r\n                {project.aimedSkills &&\r\n                    <>\r\n                        <SecondaryTitle><Lang name={LangsList.project_aimed_skills} /></SecondaryTitle>\r\n                        <List>\r\n                            {project.aimedSkills.map((skill, index) =>\r\n                                <li key={index}><Markdown>{LangStringFromILang(skill)}</Markdown></li>\r\n                            )}\r\n                        </List>\r\n                    </>\r\n                }\r\n                {project.features &&\r\n                    <>\r\n                        <SecondaryTitle><Lang name={LangsList.project_features} /></SecondaryTitle>\r\n                        <List>\r\n                            {project.features.map((skill, index) =>\r\n                                <li key={index}><Markdown>{LangStringFromILang(skill)}</Markdown></li>\r\n                            )}\r\n                        </List>\r\n                    </>\r\n                }\r\n                {project.numberOfContributors && project.numberOfContributors > 0 &&\r\n                    <ContributorsContainer title={project.numberOfContributors + LangString(LangsList.project_number_of_contributors)}>\r\n                        {Array.from(Array(project.numberOfContributors), (e, i) => {\r\n                            return <FontAwesomeIcon icon={faUser} key={i} />\r\n                        })}\r\n                    </ContributorsContainer>\r\n                }\r\n            </ContentContainer>\r\n            <MiscContainer>\r\n                <LanguagesContainer>\r\n                    {project.techs.map((tech, index) =>\r\n                        <LanguageComponent key={index} name={tech} />\r\n                    )}\r\n                </LanguagesContainer>\r\n                <LinksContainer>\r\n                    {project.links?.site &&\r\n                        <a href={project.links?.site} target=\"_blank\" rel=\"noreferrer\"><FontAwesomeIcon icon={faExternalLinkAlt} /></a>\r\n                    }\r\n                    {project.links?.youtube &&\r\n                        <a href={project.links?.youtube} target=\"_blank\" rel=\"noreferrer\"><FontAwesomeIcon icon={faYoutube} /></a>\r\n                    }\r\n                    {project.links?.github &&\r\n                        <a href={project.links?.github} target=\"_blank\" rel=\"noreferrer\"><FontAwesomeIcon icon={faGithub} /></a>\r\n                    }\r\n                </LinksContainer>\r\n            </MiscContainer>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ProjectCard;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { FirebaseDatabaseNode } from '@react-firebase/database';\r\nimport { Section, Segment, SegmentTitle } from 'components/styledComponents';\r\n\r\nimport IProjects from './Projects/IProjects';\r\nimport ProjectCard from './Projects/ProjectCard';\r\n\r\nimport Lang from 'components/Lang/Lang';\r\nimport LangsList from 'components/Lang/LangsList';\r\n\r\nconst ProjectsContainerStyle = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst CategoryTitle = styled.h1`\r\n    font-size: 1.5rem;\r\n    color: var(--main-color);\r\n    text-align: center;\r\n    padding-bottom: 8px;\r\n    border-bottom: 1px solid var(--font-color);\r\n\r\n    &:not(:first-of-type) {\r\n        margin-top: 4rem;\r\n    }\r\n`;\r\n\r\nconst ProjectsContainer = ({ projects }: { projects: IProjects }) => {\r\n    return (\r\n        <ProjectsContainerStyle>\r\n            {projects.schoolProjects?.map((school, schoolIndex) =>\r\n                <div key={schoolIndex}>\r\n                    <CategoryTitle><Lang name={LangsList.school_projects} /> (<Lang content={school.label} />)</CategoryTitle>\r\n                    {school.semesters?.map((semester, semesterIndex) =>\r\n                        <div key={semesterIndex}>\r\n                            <SegmentTitle><Lang name={LangsList.semester} /> {semester.number}</SegmentTitle>\r\n                            <Segment>\r\n                                {semester.projects?.map((project, index) =>\r\n                                    <ProjectCard project={project} key={index} />\r\n                                )}\r\n                            </Segment>\r\n                        </div>\r\n                    )}\r\n                    {school.projects?.map((project, index) =>\r\n                        <ProjectCard project={project} key={index} />\r\n                    )}\r\n                </div>\r\n            )}\r\n            {projects.personalProjects &&\r\n                <>\r\n                    <CategoryTitle><Lang name={LangsList.personal_projects} /></CategoryTitle>\r\n                    {projects.personalProjects?.map((project, index) =>\r\n                        <ProjectCard project={project} key={index} />\r\n                    )}\r\n                </>\r\n            }\r\n        </ProjectsContainerStyle>\r\n    );\r\n}\r\n\r\nconst Projects = (): JSX.Element => {\r\n    return (\r\n        <Section>\r\n            <FirebaseDatabaseNode\r\n                path=\"/projects/\"\r\n                orderByKey\r\n            >\r\n                {data => !data.isLoading && data.value &&\r\n                    <ProjectsContainer projects={data.value} />\r\n                }\r\n            </FirebaseDatabaseNode>\r\n        </Section>\r\n    );\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport { ViewContainer } from 'App';\r\n\r\nimport { useFirebaseConnect } from 'react-redux-firebase';\r\n\r\nimport Lang, { LangString } from 'components/Lang/Lang';\r\nimport LangsList from 'components/Lang/LangsList';\r\n\r\nimport ColoredSection from 'components/ColoredSection';\r\nimport Cover from 'components/Cover';\r\nimport NavBar from 'features/NavBar';\r\nimport { HashLink } from 'react-router-hash-link';\r\n\r\nimport About from 'features/Portfolio/About';\r\nimport Contact from 'features/Portfolio/Contact';\r\nimport Projects from 'features/Portfolio/Projects';\r\n\r\n\r\nconst Portfolio = (): JSX.Element => {\r\n    useFirebaseConnect([\r\n        { type: 'value', path: 'icons', queryParams: ['orderByKey'] }\r\n    ])\r\n\r\n    return (\r\n        <ViewContainer>\r\n            <NavBar>\r\n                <HashLink smooth to=\"#about\"><Lang name={LangsList.about} /></HashLink>\r\n                <HashLink smooth to=\"#projects\"><Lang name={LangsList.projects} /></HashLink>\r\n                <HashLink smooth to=\"#contact\"><Lang name={LangsList.contact} /></HashLink>\r\n            </NavBar>\r\n\r\n            <Cover url={\"https://wallpaperaccess.com/full/521099.jpg\"} >\r\n                <p><Lang name={LangsList.portfolio_cover_subtitle} /></p>\r\n                <h1>Clément RICATTE</h1>\r\n            </Cover>\r\n\r\n            <ColoredSection title={LangString(LangsList.about)} id=\"about\" />\r\n            <About />\r\n\r\n            <ColoredSection title={LangString(LangsList.projects)} id=\"projects\" />\r\n            <Projects />\r\n\r\n            <ColoredSection title={LangString(LangsList.contact)} id=\"contact\" />\r\n            <Contact />\r\n        </ViewContainer>\r\n    );\r\n}\r\n\r\nexport default Portfolio;","import React from 'react';\r\nimport { ViewContainer } from 'App';\r\n\r\nimport { LangString } from 'components/Lang/Lang';\r\nimport LangsList from 'components/Lang/LangsList';\r\n\r\nimport Loading from 'components/Loading';\r\nimport NavBar from 'features/NavBar';\r\n\r\nconst Discord = (): JSX.Element => {\r\n    React.useEffect(() => {\r\n        fetch(\"https://discordapp.com/api/guilds/673139614927683594/widget.json\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    window.location.href = result.instant_invite;\r\n                }\r\n            )\r\n    }, [])\r\n\r\n    return (\r\n        <ViewContainer>\r\n            <NavBar />\r\n            <Loading title={LangString(LangsList.discord_redirection)} />\r\n        </ViewContainer>\r\n    );\r\n}\r\n\r\nexport default Discord;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/react';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nimport Lang from 'components/Lang/Lang';\r\nimport LangsList from 'components/Lang/LangsList';\r\n\r\n\r\nconst FooterContainer = styled.div`\r\n    background-color: var(--header-footer-color);\r\n    color: var(--font-color);\r\n    position: absolute;\r\n    padding: 10px;\r\n    margin: 0;\r\n    width: 100%;\r\n    font-size: .9em;\r\n    z-index: 1000;\r\n    display: flex;\r\n    justify-content: center;\r\n    box-sizing: border-box;\r\n    ${isMobile && css`\r\n        flex-direction: column;\r\n        text-align: center;\r\n    `}\r\n\r\n    & > p {\r\n        margin: 0 20px;\r\n    }\r\n\r\n    & > svg {\r\n        margin: 0 5px\r\n    }\r\n\r\n    ${!isMobile && css`\r\n        & > p:not(:last-child):after {\r\n            content: '-';\r\n            position: relative;\r\n            right: -20px\r\n        }\r\n    `}\r\n`;\r\n\r\nconst Footer = (): JSX.Element => {\r\n    return (\r\n        <FooterContainer>\r\n            <p><Lang name={LangsList.footer_website_made_by} /> <a href=\"https://github.com/AvaN0x\">Clément RICATTE <FontAwesomeIcon icon={faGithub} /></a></p>\r\n            <p><a href=\"https://github.com/AvaN0x/avan0x.github.io/blob/master/LICENSE\"><Lang name={LangsList.license} /></a></p >\r\n        </FooterContainer >\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport { ViewContainer } from 'App';\r\nimport Loading from 'components/Loading';\r\nimport NavBar from 'features/NavBar';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst SetPageLanguages = (): JSX.Element => {\r\n    const { language }: { language: string } = useParams();\r\n    const history = useHistory();\r\n\r\n    Cookies.set(\"language\", language, { expires: 365 });\r\n    history.push(\"/\");\r\n\r\n    return (\r\n        <ViewContainer>\r\n            <NavBar />\r\n            <Loading />\r\n        </ViewContainer>\r\n    );\r\n}\r\n\r\nexport default SetPageLanguages;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { Route, HashRouter as Router, Switch } from 'react-router-dom';\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport { FirebaseDatabaseProvider } from \"@react-firebase/database\";\r\nimport firebaseConfig from 'firebase/config';\r\nimport { isLoaded, useFirebaseConnect } from 'react-redux-firebase';\r\nimport { RootState } from 'firebase/store';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { AnimatePresence } from \"framer-motion\";\r\nimport { motion } from \"framer-motion\"\r\n\r\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert';\r\nimport AlertTemplate from 'AlertTemplate';\r\n\r\nimport NotFound from \"views/Errors/NotFound\";\r\nimport Portfolio from 'views/Portfolio';\r\nimport Discord from 'views/Discord';\r\nimport Footer from 'features/Footer';\r\nimport Loading from 'components/Loading';\r\n\r\nimport useKonami from 'react-use-konami';\r\nimport SetPageLanguages from 'views/SetPageLanguages';\r\n\r\nconst PageContainer = styled.div`\r\n    min-height: 100vh;\r\n`;\r\n\r\nconst Redirect = (link: string) => {\r\n    window.location.href = link;\r\n    return null;\r\n}\r\n\r\nconst options = {\r\n    position: positions.BOTTOM_RIGHT,\r\n    transition: transitions.FADE,\r\n    timeout: 5000,\r\n    offset: '10px',\r\n    containerStyle: {\r\n        zIndex: 10000,\r\n        bottom: 50\r\n    }\r\n}\r\n\r\nconst App = (): JSX.Element => {\r\n    useFirebaseConnect([\r\n        { type: 'value', path: 'langs', queryParams: ['orderByKey'] }\r\n    ])\r\n    const langs = useSelector((state: RootState) => state.firebase.data.langs);\r\n\r\n    useKonami(() => {\r\n        document.location.href = \"https://github.com/AvaN0x\";\r\n    }, {\r\n        code: ['ArrowUp', 'ArrowUp', 'ArrowDown', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'ArrowLeft', 'ArrowRight', 'b', 'a', 'Enter']\r\n    });\r\n\r\n    return (\r\n        <Router basename='/'>\r\n            <AlertProvider template={AlertTemplate} {...options}>\r\n                <FirebaseDatabaseProvider firebase={firebase} {...firebaseConfig}>\r\n                    <PageContainer>\r\n                        <AnimatePresence exitBeforeEnter>\r\n                            {!isLoaded(langs) &&\r\n                                <Loading noImage />\r\n                            }\r\n\r\n                            <Switch>\r\n                                <Route exact path='/' component={Portfolio} />\r\n                                <Route exact path='/discord' component={Discord} />\r\n\r\n                                {/* GitHub Pages */}\r\n                                <Route exact path=\"/IUT-ProjetWeb\" component={() => Redirect('https://avan0x.github.io/IUT-ProjetWeb/')} />\r\n                                <Route exact path=\"/AnciensEtudiantsIUTMetz\" component={() => Redirect('https://oxypomme.github.io/AnciensEtudiantsIUTMetz/')} />\r\n\r\n                                {/* Other pages */}\r\n                                <Route exact path=\"/Matchable\" component={() => Redirect('https://matchable-80a41.web.app/')} />\r\n\r\n                                {/* Set Languages */}\r\n                                <Route path=\"/lang/:language\" component={SetPageLanguages} />\r\n\r\n                                {/* Error pages */}\r\n                                <Route component={NotFound} />\r\n                            </Switch>\r\n                        </AnimatePresence>\r\n                    </PageContainer>\r\n\r\n                    <Footer></Footer>\r\n                </FirebaseDatabaseProvider>\r\n            </AlertProvider>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport const ViewContainer = ({ children }: { children: React.ReactNode }): JSX.Element => {\r\n    return (\r\n        <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n        >\r\n            {children}\r\n        </motion.div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import firebase from \"firebase/app\";\r\nimport { combineReducers, createStore } from \"redux\";\r\nimport { DefaultRootState } from \"react-redux\";\r\nimport { firebaseReducer, FirebaseReducer } from \"react-redux-firebase\";\r\nimport firebaseConfig from \"./config\";\r\n\r\n\r\nimport IAbout from 'features/Portfolio/About/IAbout';\r\nimport IProjects from 'features/Portfolio/Projects/IProjects';\r\nimport IIcon from \"components/LanguagesIcons/IIcon\";\r\nimport ILang from \"components/Lang/ILang\";\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\ninterface ReducerRootState {\r\n    firebase: FirebaseReducer.Reducer\r\n}\r\nconst rootReducer = combineReducers<ReducerRootState>({\r\n    firebase: firebaseReducer\r\n})\r\n\r\nconst initialState = {}\r\nexport const store = createStore(rootReducer, initialState)\r\n\r\nexport const rrfProps = {\r\n    firebase,\r\n    config: {\r\n        userProfile: 'users'\r\n    },\r\n    dispatch: store.dispatch\r\n}\r\n\r\nexport type RootState = DefaultRootState & {\r\n    firebase: {\r\n        data: {\r\n            about?: IAbout;\r\n            contact_webhook?: string;\r\n            projects?: IProjects;\r\n            icons?: { [id: string]: IIcon; };\r\n            langs?: { [id: string]: ILang; };\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux'\r\nimport 'firebase/auth'\r\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\r\n\r\nimport 'index.css';\r\nimport App from 'App';\r\nimport reportWebVitals from 'reportWebVitals';\r\nimport { rrfProps, store } from 'firebase/store';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <ReactReduxFirebaseProvider {...rrfProps}>\r\n                <App />\r\n            </ReactReduxFirebaseProvider>\r\n        </Provider>\r\n    </React.StrictMode >,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}